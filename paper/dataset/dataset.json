[{"type":"Module","children":[1,3,5,7,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,51,56,58,64,71,72]},{"type":"Import","children":[2]},{"type":"alias","value":"copy"},{"type":"Import","children":[4]},{"type":"alias","value":"logging"},{"type":"Import","children":[6]},{"type":"alias","value":"math"},{"type":"Import","children":[8]},{"type":"alias","value":"os"},{"type":"Import","children":[10]},{"type":"alias","value":"sys"},{"type":"ImportFrom","value":"typing"},{"type":"ImportFrom","value":"packaging"},{"type":"Import","children":[14]},{"type":"alias","value":"ray"},{"type":"ImportFrom","value":"ray.rllib.algorithms.callbacks"},{"type":"ImportFrom","value":"ray.rllib.core.learner.learner"},{"type":"ImportFrom","value":"ray.rllib.core.learner.learner_group_config"},{"type":"ImportFrom","value":"ray.rllib.core.rl_module.marl_module"},{"type":"ImportFrom","value":"ray.rllib.core.rl_module.rl_module"},{"type":"ImportFrom","value":"ray.rllib.core.learner.learner"},{"type":"ImportFrom","value":"ray.rllib.env.env_context"},{"type":"ImportFrom","value":"ray.rllib.env.multi_agent_env"},{"type":"ImportFrom","value":"ray.rllib.env.wrappers.atari_wrappers"},{"type":"ImportFrom","value":"ray.rllib.evaluation.collectors.sample_collector"},{"type":"ImportFrom","value":"ray.rllib.evaluation.collectors.simple_list_collector"},{"type":"ImportFrom","value":"ray.rllib.evaluation.rollout_worker"},{"type":"ImportFrom","value":"ray.rllib.models"},{"type":"ImportFrom","value":"ray.rllib.policy.policy"},{"type":"ImportFrom","value":"ray.rllib.policy.sample_batch"},{"type":"ImportFrom","value":"ray.rllib.utils"},{"type":"ImportFrom","value":"ray.rllib.utils.annotations"},{"type":"ImportFrom","value":"ray.rllib.utils.deprecation"},{"type":"ImportFrom","value":"ray.rllib.utils.framework"},{"type":"ImportFrom","value":"ray.rllib.utils.from_config"},{"type":"ImportFrom","value":"ray.rllib.utils.gym"},{"type":"ImportFrom","value":"ray.rllib.utils.policy"},{"type":"ImportFrom","value":"ray.rllib.utils.schedules.scheduler"},{"type":"ImportFrom","value":"ray.rllib.utils.serialization"},{"type":"ImportFrom","value":"ray.rllib.utils.torch_utils"},{"type":"ImportFrom","value":"ray.rllib.utils.typing"},{"type":"ImportFrom","value":"ray.tune.logger"},{"type":"ImportFrom","value":"ray.tune.registry"},{"type":"ImportFrom","value":"ray.tune.result"},{"type":"ImportFrom","value":"ray.tune.tune"},{"type":"Assign","children":[46,49]},{"type":"TupleStore","children":[47,48]},{"type":"Name","value":"gym"},{"type":"Name","value":"old_gym"},{"type":"Call","children":[50]},{"type":"Name","value":"try_import_gymnasium_and_gym"},{"type":"Assign","children":[52,53]},{"type":"Name","value":"Space"},{"type":"AttributeLoad","children":[54,55]},{"type":"Name","value":"gym"},{"type":"attr","value":"Space"},{"type":"Expr","children":[57]},{"type":"Constant","value":"TODO(jungong, sven): in \"offline_data\" we can potentially unify all input types\nunder input and input_config keys. E.g.\ninput: sample\ninput_config {\nenv: CartPole-v1\n}\nor:\ninput: json_reader\ninput_config {\npath: /tmp/\n}\nor:\ninput: dataset\ninput_config {\nformat: parquet\npath: /tmp/\n}\n"},{"type":"If","children":[59,60]},{"type":"Name","value":"TYPE_CHECKING"},{"type":"body","children":[61,62,63]},{"type":"ImportFrom","value":"ray.rllib.algorithms.algorithm"},{"type":"ImportFrom","value":"ray.rllib.core.learner"},{"type":"ImportFrom","value":"ray.rllib.evaluation.episode"},{"type":"Assign","children":[65,66]},{"type":"Name","value":"logger"},{"type":"Call","children":[67,70]},{"type":"AttributeLoad","children":[68,69]},{"type":"Name","value":"logging"},{"type":"attr","value":"getLogger"},{"type":"Name","value":"__name__"},{"type":"FunctionDef","value":"_check_rl_module_spec"},{"type":"ClassDef","value":"AlgorithmConfig"}]
[{"type":"Module","children":[1,3,5,7,8,9,12,16,17,18,19,20,21,26,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,110,111,112]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Contains definitions for the AssembleNet [1] models.\n\nRequires the AssembleNet architecture to be specified in\nFLAGS.model_structure (and optionally FLAGS.model_edge_weights).\nThis structure is a list corresponding to a graph representation of the\nnetwork, where a node is a convolutional block and an edge specifies a\nconnection from one block to another as described in [1].\n\nEach node itself (in the structure list) is a list with the following format:\n[block_level, [list_of_input_blocks], number_filter, temporal_dilation,\nspatial_stride]. [list_of_input_blocks] should be the list of node indexes whose\nvalues are less than the index of the node itself. The 'stems' of the network\ndirectly taking raw inputs follow a different node format:\n[stem_type, temporal_dilation]. The stem_type is -1 for RGB stem and is -2 for\noptical flow stem.\n\nAlso note that the codes in this file could be used for one-shot differentiable\nconnection search by (1) giving an overly connected structure as\nFLAGS.model_structure and by (2) setting FLAGS.model_edge_weights to be '[]'.\nThe 'agg_weights' variables will specify which connections are needed and which\nare not, once trained.\n\n[1] Michael S. Ryoo, AJ Piergiovanni, Mingxing Tan, Anelia Angelova,\n    AssembleNet: Searching for Multi-Stream Neural Connectivity in Video\n    Architectures. ICLR 2020\n    https://arxiv.org/abs/1905.13209\n\nIt uses (2+1)D convolutions for video representations. The main AssembleNet\ntakes a 4-D (N*T)HWC tensor as an input (i.e., the batch dim and time dim are\nmixed), and it reshapes a tensor to NT(H*W)C whenever a 1-D temporal conv. is\nnecessary. This is to run this on TPU efficiently.\n"},{"type":"Import","children":[4]},{"type":"alias","value":"functools"},{"type":"Import","children":[6]},{"type":"alias","value":"math"},{"type":"ImportFrom","value":"typing"},{"type":"ImportFrom","value":"absl"},{"type":"Import","children":[10]},{"type":"alias","value":"numpy","children":[11]},{"type":"identifier","value":"np"},{"type":"Import","children":[13,15]},{"type":"alias","value":"tensorflow","children":[14]},{"type":"identifier","value":"tf"},{"type":"alias","value":"tf_keras"},{"type":"ImportFrom","value":"official.modeling"},{"type":"ImportFrom","value":"official.projects.assemblenet.configs"},{"type":"ImportFrom","value":"official.projects.assemblenet.modeling"},{"type":"ImportFrom","value":"official.vision.modeling"},{"type":"ImportFrom","value":"official.vision.modeling.backbones"},{"type":"Assign","children":[22,23]},{"type":"Name","value":"layers"},{"type":"AttributeLoad","children":[24,25]},{"type":"Name","value":"tf_keras"},{"type":"attr","value":"layers"},{"type":"Assign","children":[27,28]},{"type":"Name","value":"intermediate_channel_size"},{"type":"ListLoad","children":[29,30,31,32]},{"type":"Constant","value":"64"},{"type":"Constant","value":"128"},{"type":"Constant","value":"256"},{"type":"Constant","value":"512"},{"type":"FunctionDef","value":"fixed_padding"},{"type":"FunctionDef","value":"reshape_temporal_conv1d_bn"},{"type":"FunctionDef","value":"conv2d_fixed_padding"},{"type":"FunctionDef","value":"conv3d_same_padding"},{"type":"FunctionDef","value":"bottleneck_block_interleave"},{"type":"FunctionDef","value":"block_group"},{"type":"FunctionDef","value":"spatial_resize_and_concat"},{"type":"ClassDef","value":"_ApplyEdgeWeight"},{"type":"FunctionDef","value":"multi_connection_fusion"},{"type":"FunctionDef","value":"rgb_conv_stem"},{"type":"FunctionDef","value":"flow_conv_stem"},{"type":"FunctionDef","value":"multi_stream_heads"},{"type":"ClassDef","value":"AssembleNet"},{"type":"ClassDef","value":"AssembleNetModel"},{"type":"Assign","children":[48,49]},{"type":"Name","value":"ASSEMBLENET_SPECS"},{"type":"Dict","children":[50,51,52,53,54,55,56,65,74,83,92,101]},{"type":"Constant","value":"26"},{"type":"Constant","value":"38"},{"type":"Constant","value":"50"},{"type":"Constant","value":"68"},{"type":"Constant","value":"77"},{"type":"Constant","value":"101"},{"type":"Dict","children":[57,58,59,60]},{"type":"Constant","value":"block"},{"type":"Constant","value":"num_blocks"},{"type":"Name","value":"bottleneck_block_interleave"},{"type":"ListLoad","children":[61,62,63,64]},{"type":"Constant","value":"2"},{"type":"Constant","value":"2"},{"type":"Constant","value":"2"},{"type":"Constant","value":"2"},{"type":"Dict","children":[66,67,68,69]},{"type":"Constant","value":"block"},{"type":"Constant","value":"num_blocks"},{"type":"Name","value":"bottleneck_block_interleave"},{"type":"ListLoad","children":[70,71,72,73]},{"type":"Constant","value":"2"},{"type":"Constant","value":"4"},{"type":"Constant","value":"4"},{"type":"Constant","value":"2"},{"type":"Dict","children":[75,76,77,78]},{"type":"Constant","value":"block"},{"type":"Constant","value":"num_blocks"},{"type":"Name","value":"bottleneck_block_interleave"},{"type":"ListLoad","children":[79,80,81,82]},{"type":"Constant","value":"3"},{"type":"Constant","value":"4"},{"type":"Constant","value":"6"},{"type":"Constant","value":"3"},{"type":"Dict","children":[84,85,86,87]},{"type":"Constant","value":"block"},{"type":"Constant","value":"num_blocks"},{"type":"Name","value":"bottleneck_block_interleave"},{"type":"ListLoad","children":[88,89,90,91]},{"type":"Constant","value":"3"},{"type":"Constant","value":"4"},{"type":"Constant","value":"12"},{"type":"Constant","value":"3"},{"type":"Dict","children":[93,94,95,96]},{"type":"Constant","value":"block"},{"type":"Constant","value":"num_blocks"},{"type":"Name","value":"bottleneck_block_interleave"},{"type":"ListLoad","children":[97,98,99,100]},{"type":"Constant","value":"3"},{"type":"Constant","value":"4"},{"type":"Constant","value":"15"},{"type":"Constant","value":"3"},{"type":"Dict","children":[102,103,104,105]},{"type":"Constant","value":"block"},{"type":"Constant","value":"num_blocks"},{"type":"Name","value":"bottleneck_block_interleave"},{"type":"ListLoad","children":[106,107,108,109]},{"type":"Constant","value":"3"},{"type":"Constant","value":"4"},{"type":"Constant","value":"23"},{"type":"Constant","value":"3"},{"type":"FunctionDef","value":"assemblenet_v1"},{"type":"FunctionDef","value":"build_assemblenet_v1"},{"type":"FunctionDef","value":"build_assemblenet_model"}]
[{"type":"Module","children":[1,3,5,7,8,9,10,12,14,17,20,23,24,25,26,27,28,29]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Atari 100k rainbow agent with support for data augmentation."},{"type":"Import","children":[4]},{"type":"alias","value":"copy"},{"type":"Import","children":[6]},{"type":"alias","value":"functools"},{"type":"ImportFrom","value":"absl"},{"type":"ImportFrom","value":"dopamine.jax"},{"type":"ImportFrom","value":"dopamine.jax.agents.full_rainbow"},{"type":"Import","children":[11]},{"type":"alias","value":"gin"},{"type":"Import","children":[13]},{"type":"alias","value":"jax"},{"type":"Import","children":[15]},{"type":"alias","value":"jax.numpy","children":[16]},{"type":"identifier","value":"jnp"},{"type":"Import","children":[18]},{"type":"alias","value":"numpy","children":[19]},{"type":"identifier","value":"onp"},{"type":"Import","children":[21]},{"type":"alias","value":"tensorflow","children":[22]},{"type":"identifier","value":"tf"},{"type":"FunctionDef","value":"select_action"},{"type":"FunctionDef","value":"_crop_with_indices"},{"type":"FunctionDef","value":"_per_image_random_crop"},{"type":"FunctionDef","value":"_intensity_aug"},{"type":"FunctionDef","value":"drq_image_augmentation"},{"type":"FunctionDef","value":"preprocess_inputs_with_augmentation"},{"type":"ClassDef","value":"Atari100kRainbowAgent"}]
[{"type":"Module","children":[1,3,4,5,6,8,10,12,14,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,50,51]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Contains the base Layer class, from which all layers inherit."},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[7]},{"type":"alias","value":"collections"},{"type":"Import","children":[9]},{"type":"alias","value":"copy"},{"type":"Import","children":[11]},{"type":"alias","value":"re"},{"type":"Import","children":[13]},{"type":"alias","value":"weakref"},{"type":"Import","children":[15]},{"type":"alias","value":"numpy","children":[16]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"tensorflow.python.eager"},{"type":"ImportFrom","value":"tensorflow.python.estimator"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.platform"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ClassDef","value":"Layer"},{"type":"ClassDef","value":"InputSpec"},{"type":"ClassDef","value":"Node"},{"type":"ClassDef","value":"_DeferredTensor"},{"type":"ClassDef","value":"InputLayer"},{"type":"FunctionDef","value":"Input"},{"type":"ClassDef","value":"Network"},{"type":"FunctionDef","value":"_is_tensor_or_tensor_list"},{"type":"FunctionDef","value":"_to_snake_case"},{"type":"FunctionDef","value":"_to_list"},{"type":"FunctionDef","value":"_add_elements_to_collection"},{"type":"FunctionDef","value":"_object_list_uid"},{"type":"FunctionDef","value":"_make_node_key"},{"type":"FunctionDef","value":"_static_shape"},{"type":"FunctionDef","value":"_is_all_none"},{"type":"FunctionDef","value":"_have_all_keras_metadata"},{"type":"FunctionDef","value":"_collect_previous_mask"},{"type":"Assign","children":[45,46]},{"type":"Name","value":"PER_GRAPH_LAYER_NAME_UIDS"},{"type":"Call","children":[47]},{"type":"AttributeLoad","children":[48,49]},{"type":"Name","value":"weakref"},{"type":"attr","value":"WeakKeyDictionary"},{"type":"FunctionDef","value":"_get_default_graph_uid_map"},{"type":"FunctionDef","value":"_unique_layer_name"}]
[{"type":"Module","children":[1,3,5,7,9,11,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Contains the base Layer class, from which all layers inherit."},{"type":"Import","children":[4]},{"type":"alias","value":"collections"},{"type":"Import","children":[6]},{"type":"alias","value":"functools"},{"type":"Import","children":[8]},{"type":"alias","value":"itertools"},{"type":"Import","children":[10]},{"type":"alias","value":"threading"},{"type":"Import","children":[12]},{"type":"alias","value":"warnings"},{"type":"Import","children":[14]},{"type":"alias","value":"numpy","children":[15]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"tensorflow.python.autograph.core"},{"type":"ImportFrom","value":"tensorflow.python.autograph.impl"},{"type":"ImportFrom","value":"tensorflow.python.distribute"},{"type":"ImportFrom","value":"tensorflow.python.eager"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.keras"},{"type":"ImportFrom","value":"tensorflow.python.keras"},{"type":"ImportFrom","value":"tensorflow.python.keras"},{"type":"ImportFrom","value":"tensorflow.python.keras"},{"type":"ImportFrom","value":"tensorflow.python.keras.engine"},{"type":"ImportFrom","value":"tensorflow.python.keras.engine"},{"type":"ImportFrom","value":"tensorflow.python.keras.engine"},{"type":"ImportFrom","value":"tensorflow.python.keras.mixed_precision"},{"type":"ImportFrom","value":"tensorflow.python.keras.mixed_precision"},{"type":"ImportFrom","value":"tensorflow.python.keras.mixed_precision"},{"type":"ImportFrom","value":"tensorflow.python.keras.saving.saved_model"},{"type":"ImportFrom","value":"tensorflow.python.keras.utils"},{"type":"ImportFrom","value":"tensorflow.python.keras.utils"},{"type":"ImportFrom","value":"tensorflow.python.keras.utils"},{"type":"ImportFrom","value":"tensorflow.python.keras.utils"},{"type":"ImportFrom","value":"tensorflow.python.keras.utils"},{"type":"ImportFrom","value":"tensorflow.python.keras.utils.generic_utils"},{"type":"ImportFrom","value":"tensorflow.python.keras.utils.tf_utils"},{"type":"ImportFrom","value":"tensorflow.python.module"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.ragged"},{"type":"ImportFrom","value":"tensorflow.python.platform"},{"type":"ImportFrom","value":"tensorflow.python.trackable"},{"type":"ImportFrom","value":"tensorflow.python.trackable"},{"type":"ImportFrom","value":"tensorflow.python.trackable"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.tools.docs"},{"type":"ClassDef","value":"Layer"},{"type":"ClassDef","value":"KerasHistory"},{"type":"Assign","children":[60,61]},{"type":"Name","value":"InputSpec"},{"type":"AttributeLoad","children":[62,63]},{"type":"Name","value":"input_spec"},{"type":"attr","value":"InputSpec"}]
[{"type":"Module","children":[1,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Operations for clipping (gradient, weight) tensors to min/max values."},{"type":"Import","children":[4]},{"type":"alias","value":"numpy","children":[5]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util.compat"},{"type":"ImportFrom","value":"tensorflow.python.util.tf_export"},{"type":"FunctionDef","value":"clip_by_value"},{"type":"FunctionDef","value":"_clip_by_value_grad"},{"type":"FunctionDef","value":"clip_by_norm"},{"type":"FunctionDef","value":"global_norm"},{"type":"FunctionDef","value":"clip_by_global_norm"},{"type":"FunctionDef","value":"clip_by_average_norm"}]
[{"type":"Module","children":[1,2,4,6,7,8,10,11,18,19,20,21,22,23,24,25]},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[3]},{"type":"alias","value":"os"},{"type":"Import","children":[5]},{"type":"alias","value":"yaml"},{"type":"ImportFrom","value":"mlagents.trainers.exception"},{"type":"ImportFrom","value":"mlagents_envs.environment"},{"type":"Import","children":[9]},{"type":"alias","value":"argparse"},{"type":"ImportFrom","value":"mlagents_envs"},{"type":"Assign","children":[12,13]},{"type":"Name","value":"logger"},{"type":"Call","children":[14,17]},{"type":"AttributeLoad","children":[15,16]},{"type":"Name","value":"logging_util"},{"type":"attr","value":"get_logger"},{"type":"Name","value":"__name__"},{"type":"ClassDef","value":"RaiseRemovedWarning"},{"type":"ClassDef","value":"DetectDefault"},{"type":"ClassDef","value":"DetectDefaultStoreTrue"},{"type":"ClassDef","value":"StoreConfigFile"},{"type":"FunctionDef","value":"_create_parser"},{"type":"FunctionDef","value":"load_config"},{"type":"FunctionDef","value":"_load_config"},{"type":"Assign","children":[26,27]},{"type":"Name","value":"parser"},{"type":"Call","children":[28]},{"type":"Name","value":"_create_parser"}]
[{"type":"Module","children":[1,3,7,8,9,10,11,12,13,14,15]},{"type":"Expr","children":[2]},{"type":"Constant","value":"A Classification head layer which is common used with sequence encoders."},{"type":"Import","children":[4,6]},{"type":"alias","value":"tensorflow","children":[5]},{"type":"identifier","value":"tf"},{"type":"alias","value":"tf_keras"},{"type":"ImportFrom","value":"official.modeling"},{"type":"ImportFrom","value":"official.nlp.modeling.layers"},{"type":"ImportFrom","value":"official.nlp.modeling.layers"},{"type":"ClassDef","value":"ClassificationHead"},{"type":"ClassDef","value":"MultiClsHeads"},{"type":"ClassDef","value":"GaussianProcessClassificationHead"},{"type":"FunctionDef","value":"extract_gp_layer_kwargs"},{"type":"FunctionDef","value":"extract_spec_norm_kwargs"},{"type":"ClassDef","value":"PerQueryDenseHead"}]
[{"type":"Module","children":[1,3,5,7,9,24,39,40,43,54,57,60,63,89,92,95,98,112,120,123,126,129,132,157,161,165,168,171,199,202,205,208,212,215,218,226,230,234,237,240,244,252,261,264,267,270,273,304,307,311,320,323,331,338,354,359,362,365,374,384,395,398,402]},{"type":"Import","children":[2]},{"type":"alias","value":"os"},{"type":"Import","children":[4]},{"type":"alias","value":"re"},{"type":"Import","children":[6]},{"type":"alias","value":"subprocess"},{"type":"Import","children":[8]},{"type":"alias","value":"sys"},{"type":"Expr","children":[10]},{"type":"Call","children":[11,16,17]},{"type":"AttributeLoad","children":[12,15]},{"type":"AttributeLoad","children":[13,14]},{"type":"Name","value":"sys"},{"type":"attr","value":"path"},{"type":"attr","value":"insert"},{"type":"Constant","value":"0"},{"type":"Call","children":[18,23]},{"type":"AttributeLoad","children":[19,22]},{"type":"AttributeLoad","children":[20,21]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"abspath"},{"type":"Constant","value":"../.."},{"type":"Expr","children":[25]},{"type":"Call","children":[26,31,32]},{"type":"AttributeLoad","children":[27,30]},{"type":"AttributeLoad","children":[28,29]},{"type":"Name","value":"sys"},{"type":"attr","value":"path"},{"type":"attr","value":"insert"},{"type":"Constant","value":"0"},{"type":"Call","children":[33,38]},{"type":"AttributeLoad","children":[34,37]},{"type":"AttributeLoad","children":[35,36]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"abspath"},{"type":"Constant","value":"../extension"},{"type":"ImportFrom","value":"datetime"},{"type":"Assign","children":[41,42]},{"type":"Name","value":"project"},{"type":"Constant","value":"NNI"},{"type":"Assign","children":[44,45]},{"type":"Name","value":"copyright"},{"type":"JoinedStr","children":[46,53]},{"type":"FormattedValue","children":[47]},{"type":"AttributeLoad","children":[48,52]},{"type":"Call","children":[49]},{"type":"AttributeLoad","children":[50,51]},{"type":"Name","value":"datetime"},{"type":"attr","value":"now"},{"type":"attr","value":"year"},{"type":"Constant","value":", Microsoft"},{"type":"Assign","children":[55,56]},{"type":"Name","value":"author"},{"type":"Constant","value":"Microsoft"},{"type":"Assign","children":[58,59]},{"type":"Name","value":"version"},{"type":"Constant","value":""},{"type":"Assign","children":[61,62]},{"type":"Name","value":"release"},{"type":"Constant","value":"v3.0pt1"},{"type":"Assign","children":[64,65]},{"type":"Name","value":"extensions"},{"type":"ListLoad","children":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88]},{"type":"Constant","value":"sphinx_gallery.gen_gallery"},{"type":"Constant","value":"sphinx.ext.autodoc"},{"type":"Constant","value":"sphinx.ext.autosummary"},{"type":"Constant","value":"sphinx.ext.intersphinx"},{"type":"Constant","value":"sphinx.ext.mathjax"},{"type":"Constant","value":"sphinxarg4nni.ext"},{"type":"Constant","value":"sphinx.ext.napoleon"},{"type":"Constant","value":"sphinx.ext.viewcode"},{"type":"Constant","value":"sphinx.ext.intersphinx"},{"type":"Constant","value":"sphinxcontrib.bibtex"},{"type":"Constant","value":"sphinxcontrib.youtube"},{"type":"Constant","value":"sphinx.ext.extlinks"},{"type":"Constant","value":"IPython.sphinxext.ipython_console_highlighting"},{"type":"Constant","value":"sphinx_tabs.tabs"},{"type":"Constant","value":"sphinx_copybutton"},{"type":"Constant","value":"sphinx_comments"},{"type":"Constant","value":"tutorial_links"},{"type":"Constant","value":"getpartialtext"},{"type":"Constant","value":"inplace_translation"},{"type":"Constant","value":"cardlinkitem"},{"type":"Constant","value":"codesnippetcard"},{"type":"Constant","value":"patch_autodoc"},{"type":"Constant","value":"toctree_check"},{"type":"Assign","children":[90,91]},{"type":"Name","value":"autosummary_imported_members"},{"type":"Constant","value":"True"},{"type":"Assign","children":[93,94]},{"type":"Name","value":"autosummary_ignore_module_all"},{"type":"Constant","value":"False"},{"type":"Assign","children":[96,97]},{"type":"Name","value":"autosummary_generate"},{"type":"Constant","value":"True"},{"type":"Assign","children":[99,100]},{"type":"Name","value":"autodoc_mock_imports"},{"type":"ListLoad","children":[101,102,103,104,105,106,107,108,109,110,111]},{"type":"Constant","value":"apex"},{"type":"Constant","value":"nni_node"},{"type":"Constant","value":"tensorrt"},{"type":"Constant","value":"pycuda"},{"type":"Constant","value":"nn_meter"},{"type":"Constant","value":"azureml"},{"type":"Constant","value":"ConfigSpace"},{"type":"Constant","value":"ConfigSpaceNNI"},{"type":"Constant","value":"smac"},{"type":"Constant","value":"statsmodels"},{"type":"Constant","value":"pybnn"},{"type":"Assign","children":[113,114]},{"type":"Name","value":"autosummary_mock_imports"},{"type":"BinOpAdd","children":[115,119]},{"type":"ListLoad","children":[116,117,118]},{"type":"Constant","value":"nni.retiarii.codegen.tensorflow"},{"type":"Constant","value":"nni.nas.benchmark.nasbench101.db_gen"},{"type":"Constant","value":"nni.tools.jupyter_extension.management"},{"type":"Name","value":"autodoc_mock_imports"},{"type":"Assign","children":[121,122]},{"type":"Name","value":"autodoc_typehints"},{"type":"Constant","value":"description"},{"type":"Assign","children":[124,125]},{"type":"Name","value":"autodoc_typehints_description_target"},{"type":"Constant","value":"documented"},{"type":"Assign","children":[127,128]},{"type":"Name","value":"autodoc_inherit_docstrings"},{"type":"Constant","value":"False"},{"type":"Assign","children":[130,131]},{"type":"Name","value":"nitpicky"},{"type":"Constant","value":"False"},{"type":"Assign","children":[133,134]},{"type":"Name","value":"linkcheck_ignore"},{"type":"ListLoad","children":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156]},{"type":"Constant","value":"http://localhost:\\d+"},{"type":"Constant","value":".*://.*/#/"},{"type":"Constant","value":"https://github\\.com/JSong-Jia/Pic/"},{"type":"Constant","value":"https://www\\.cs\\.toronto\\.edu/"},{"type":"Constant","value":"https://help\\.aliyun\\.com/document_detail/\\d+\\.html"},{"type":"Constant","value":"http://www\\.image-net\\.org/"},{"type":"Constant","value":"https://www\\.msra\\.cn/"},{"type":"Constant","value":"https://1drv\\.ms/"},{"type":"Constant","value":"https://onedrive\\.live\\.com/"},{"type":"Constant","value":"https://www\\.openml\\.org/"},{"type":"Constant","value":"https://ml\\.informatik\\.uni-freiburg\\.de/"},{"type":"Constant","value":"https://docs\\.nvidia\\.com/deeplearning/"},{"type":"Constant","value":"https://cla\\.opensource\\.microsoft\\.com"},{"type":"Constant","value":"https://www\\.docker\\.com/"},{"type":"Constant","value":"https://nlp.stanford.edu/projects/glove/"},{"type":"Constant","value":"https://code.visualstudio.com/docs/python/editing#_formatting"},{"type":"Constant","value":"https://dl.acm.org/doi/10.1145/3352020.3352031"},{"type":"Constant","value":"https://nni\\.readthedocs\\.io/en/v2\\.10/compression/overview\\.html"},{"type":"Constant","value":"https://github.com/google-research/google-research/blob/20736344/tunas/rematlib/mobile_model_v3.py#L453"},{"type":"Constant","value":"https://github.com/google-research/google-research/blob/20736344591f774f4b1570af64624ed1e18d2867/tunas/mobile_search_space_v3.py#L728"},{"type":"Constant","value":"https://github.com/quark0/darts/blob/f276dd346a09ae3160f8e3aca5c7b193fda1da37/cnn/model_search.py#L135"},{"type":"Constant","value":"https://github.com/rwightman/pytorch-image-models/blob/b7cb8d03/timm/models/efficientnet_blocks.py#L134"},{"type":"Assign","children":[158,159]},{"type":"Name","value":"linkcheck_exclude_documents"},{"type":"ListLoad","children":[160]},{"type":"Constant","value":"^release"},{"type":"Assign","children":[162,163]},{"type":"Name","value":"bibtex_bibfiles"},{"type":"ListLoad","children":[164]},{"type":"Constant","value":"refs.bib"},{"type":"Assign","children":[166,167]},{"type":"Name","value":"bibtex_footbibliography_header"},{"type":"Constant","value":".. rubric:: Bibliography"},{"type":"Assign","children":[169,170]},{"type":"Name","value":"bibtex_default_style"},{"type":"Constant","value":"plain"},{"type":"Assign","children":[172,173]},{"type":"Name","value":"sphinx_gallery_conf"},{"type":"Dict","children":[174,175,176,177,178,179,180,181,182,183,184,185]},{"type":"Constant","value":"examples_dirs"},{"type":"Constant","value":"gallery_dirs"},{"type":"Constant","value":"ignore_pattern"},{"type":"Constant","value":"filename_pattern"},{"type":"Constant","value":"download_all_examples"},{"type":"Constant","value":"default_thumb_file"},{"type":"Constant","value":"../../examples/tutorials"},{"type":"Constant","value":"tutorials"},{"type":"Constant","value":"__init__\\.py|/scripts/"},{"type":"Constant","value":".*"},{"type":"Constant","value":"False"},{"type":"Call","children":[186,191,198]},{"type":"AttributeLoad","children":[187,190]},{"type":"AttributeLoad","children":[188,189]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"join"},{"type":"Call","children":[192,197]},{"type":"AttributeLoad","children":[193,196]},{"type":"AttributeLoad","children":[194,195]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"dirname"},{"type":"Name","value":"__file__"},{"type":"Constant","value":"../img/thumbnails/nni_icon_blue.png"},{"type":"Assign","children":[200,201]},{"type":"Name","value":"copybutton_prompt_text"},{"type":"Constant","value":">>> |\\.\\.\\. |\\$ |In \\[\\d*\\]: | {2,5}\\.\\.\\.: | {5,8}: "},{"type":"Assign","children":[203,204]},{"type":"Name","value":"copybutton_prompt_is_regexp"},{"type":"Constant","value":"True"},{"type":"Assign","children":[206,207]},{"type":"Name","value":"copybutton_selector"},{"type":"Constant","value":":not(div.sphx-glr-script-out) > div.highlight pre"},{"type":"Assign","children":[209,210]},{"type":"Name","value":"sphinx_tabs_valid_builders"},{"type":"ListLoad","children":[211]},{"type":"Constant","value":"linkcheck"},{"type":"Assign","children":[213,214]},{"type":"Name","value":"sphinx_tabs_disable_css_loading"},{"type":"Constant","value":"True"},{"type":"Assign","children":[216,217]},{"type":"Name","value":"tutorials_copy_list"},{"type":"ListLoad"},{"type":"Assign","children":[219,220]},{"type":"Name","value":"toctree_check_whitelist"},{"type":"ListLoad","children":[221,222,223,224,225]},{"type":"Constant","value":"index"},{"type":"Constant","value":"compression/index"},{"type":"Constant","value":"compression/pruning"},{"type":"Constant","value":"compression/quantization"},{"type":"Constant","value":"hpo/hpo_benchmark"},{"type":"Assign","children":[227,228]},{"type":"Name","value":"templates_path"},{"type":"ListLoad","children":[229]},{"type":"Constant","value":"../templates"},{"type":"Assign","children":[231,232]},{"type":"Name","value":"source_suffix"},{"type":"ListLoad","children":[233]},{"type":"Constant","value":".rst"},{"type":"Assign","children":[235,236]},{"type":"Name","value":"master_doc"},{"type":"Constant","value":"index"},{"type":"Assign","children":[238,239]},{"type":"Name","value":"language"},{"type":"Constant","value":"en"},{"type":"Assign","children":[241,242]},{"type":"Name","value":"locale_dir"},{"type":"ListLoad","children":[243]},{"type":"Constant","value":"locales"},{"type":"Assign","children":[245,246]},{"type":"Name","value":"gettext_documents"},{"type":"ListLoad","children":[247,248,249,250,251]},{"type":"Constant","value":"^index$"},{"type":"Constant","value":"^quickstart$"},{"type":"Constant","value":"^installation$"},{"type":"Constant","value":"^(hpo|compression)/overview$"},{"type":"Constant","value":"^tutorials/(pruning_quick_start_mnist|hpo_quickstart_pytorch/main)$"},{"type":"Assign","children":[253,254]},{"type":"Name","value":"exclude_patterns"},{"type":"ListLoad","children":[255,256,257,258,259,260]},{"type":"Constant","value":"_build"},{"type":"Constant","value":"Thumbs.db"},{"type":"Constant","value":".DS_Store"},{"type":"Constant","value":"**.ipynb_checkpoints"},{"type":"Constant","value":"**_zh.rst"},{"type":"Constant","value":"tutorials/index.rst"},{"type":"Assign","children":[262,263]},{"type":"Name","value":"pygments_style"},{"type":"Constant","value":"None"},{"type":"Assign","children":[265,266]},{"type":"Name","value":"html_logo"},{"type":"Constant","value":"../img/nni_icon.svg"},{"type":"Assign","children":[268,269]},{"type":"Name","value":"html_favicon"},{"type":"Constant","value":"../img/favicon.ico"},{"type":"Assign","children":[271,272]},{"type":"Name","value":"html_theme"},{"type":"Constant","value":"sphinx_material"},{"type":"Assign","children":[274,275]},{"type":"Name","value":"html_theme_options"},{"type":"Dict","children":[276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,301]},{"type":"Constant","value":"nav_title"},{"type":"Constant","value":"google_analytics_account"},{"type":"Constant","value":"base_url"},{"type":"Constant","value":"color_primary"},{"type":"Constant","value":"color_accent"},{"type":"Constant","value":"repo_url"},{"type":"Constant","value":"repo_name"},{"type":"Constant","value":"globaltoc_depth"},{"type":"Constant","value":"globaltoc_collapse"},{"type":"Constant","value":"version_dropdown"},{"type":"Constant","value":"version_info"},{"type":"Constant","value":"heroes"},{"type":"Constant","value":"Neural Network Intelligence"},{"type":"Constant","value":"UA-136029994-1"},{"type":"Constant","value":"https://nni.readthedocs.io/"},{"type":"Constant","value":"custom"},{"type":"Constant","value":"custom"},{"type":"Constant","value":"https://github.com/microsoft/nni/"},{"type":"Constant","value":"GitHub"},{"type":"Constant","value":"5"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"Dict","children":[299,300]},{"type":"Constant","value":"current"},{"type":"Constant","value":"/"},{"type":"Dict","children":[302,303]},{"type":"Constant","value":"index"},{"type":"Constant","value":"An open source AutoML toolkit for hyperparameter optimization, neural architecture search, model compression and feature engineering."},{"type":"Assign","children":[305,306]},{"type":"Name","value":"html_show_sourcelink"},{"type":"Constant","value":"False"},{"type":"Assign","children":[308,309]},{"type":"Name","value":"html_static_path"},{"type":"ListLoad","children":[310]},{"type":"Constant","value":"../static"},{"type":"Assign","children":[312,313]},{"type":"Name","value":"html_sidebars"},{"type":"Dict","children":[314,315]},{"type":"Constant","value":"**"},{"type":"ListLoad","children":[316,317,318,319]},{"type":"Constant","value":"logo-text.html"},{"type":"Constant","value":"globaltoc.html"},{"type":"Constant","value":"localtoc.html"},{"type":"Constant","value":"searchbox.html"},{"type":"Assign","children":[321,322]},{"type":"Name","value":"html_title"},{"type":"Constant","value":"Neural Network Intelligence"},{"type":"Assign","children":[324,325]},{"type":"Name","value":"html_css_files"},{"type":"ListLoad","children":[326,327,328,329,330]},{"type":"Constant","value":"css/material_theme.css"},{"type":"Constant","value":"css/material_custom.css"},{"type":"Constant","value":"css/material_dropdown.css"},{"type":"Constant","value":"css/sphinx_gallery.css"},{"type":"Constant","value":"css/index_page.css"},{"type":"Assign","children":[332,333]},{"type":"Name","value":"html_js_files"},{"type":"ListLoad","children":[334,335,336,337]},{"type":"Constant","value":"js/version.js"},{"type":"Constant","value":"js/github.js"},{"type":"Constant","value":"js/sphinx_gallery.js"},{"type":"Constant","value":"js/misc.js"},{"type":"Assign","children":[339,340]},{"type":"Name","value":"git_commit_id"},{"type":"Call","children":[341]},{"type":"AttributeLoad","children":[342,353]},{"type":"Call","children":[343]},{"type":"AttributeLoad","children":[344,352]},{"type":"Call","children":[345,348]},{"type":"AttributeLoad","children":[346,347]},{"type":"Name","value":"subprocess"},{"type":"attr","value":"check_output"},{"type":"ListLoad","children":[349,350,351]},{"type":"Constant","value":"git"},{"type":"Constant","value":"rev-parse"},{"type":"Constant","value":"HEAD"},{"type":"attr","value":"decode"},{"type":"attr","value":"strip"},{"type":"Assign","children":[355,356]},{"type":"Name","value":"html_context"},{"type":"Dict","children":[357,358]},{"type":"Constant","value":"git_commit_id"},{"type":"Name","value":"git_commit_id"},{"type":"Assign","children":[360,361]},{"type":"Name","value":"htmlhelp_basename"},{"type":"Constant","value":"NeuralNetworkIntelligencedoc"},{"type":"Assign","children":[363,364]},{"type":"Name","value":"latex_elements"},{"type":"Dict"},{"type":"Assign","children":[366,367]},{"type":"Name","value":"latex_documents"},{"type":"ListLoad","children":[368]},{"type":"TupleLoad","children":[369,370,371,372,373]},{"type":"Name","value":"master_doc"},{"type":"Constant","value":"NeuralNetworkIntelligence.tex"},{"type":"Constant","value":"Neural Network Intelligence Documentation"},{"type":"Constant","value":"Microsoft"},{"type":"Constant","value":"manual"},{"type":"Assign","children":[375,376]},{"type":"Name","value":"man_pages"},{"type":"ListLoad","children":[377]},{"type":"TupleLoad","children":[378,379,380,381,383]},{"type":"Name","value":"master_doc"},{"type":"Constant","value":"neuralnetworkintelligence"},{"type":"Constant","value":"Neural Network Intelligence Documentation"},{"type":"ListLoad","children":[382]},{"type":"Name","value":"author"},{"type":"Constant","value":"1"},{"type":"Assign","children":[385,386]},{"type":"Name","value":"texinfo_documents"},{"type":"ListLoad","children":[387]},{"type":"TupleLoad","children":[388,389,390,391,392,393,394]},{"type":"Name","value":"master_doc"},{"type":"Constant","value":"NeuralNetworkIntelligence"},{"type":"Constant","value":"Neural Network Intelligence Documentation"},{"type":"Name","value":"author"},{"type":"Constant","value":"NeuralNetworkIntelligence"},{"type":"Constant","value":"One line description of project."},{"type":"Constant","value":"Miscellaneous"},{"type":"Assign","children":[396,397]},{"type":"Name","value":"epub_title"},{"type":"Name","value":"project"},{"type":"Assign","children":[399,400]},{"type":"Name","value":"epub_exclude_files"},{"type":"ListLoad","children":[401]},{"type":"Constant","value":"search.html"},{"type":"Assign","children":[403,404]},{"type":"Name","value":"extlinks"},{"type":"Dict","children":[405,406]},{"type":"Constant","value":"githublink"},{"type":"TupleLoad","children":[407,412]},{"type":"BinOpAdd","children":[408,411]},{"type":"BinOpAdd","children":[409,410]},{"type":"Constant","value":"https://github.com/microsoft/nni/blob/"},{"type":"Name","value":"git_commit_id"},{"type":"Constant","value":"/%s"},{"type":"Constant","value":"Github link: %s"}]
[{"type":"Module","children":[1,3,5,7,9,11,13,14,15,16,22,25,28,32,33,34,97,144,175,182,193,208,235,254,265,276,315,316,317,318]},{"type":"Import","children":[2]},{"type":"alias","value":"os"},{"type":"Import","children":[4]},{"type":"alias","value":"json"},{"type":"Import","children":[6]},{"type":"alias","value":"platform"},{"type":"Import","children":[8]},{"type":"alias","value":"re"},{"type":"Import","children":[10]},{"type":"alias","value":"yaml"},{"type":"Import","children":[12]},{"type":"alias","value":"threading"},{"type":"ImportFrom","value":"category"},{"type":"ImportFrom","value":"constants"},{"type":"ImportFrom","value":"exception"},{"type":"Assign","children":[17,18]},{"type":"Name","value":"PLATFORM"},{"type":"Call","children":[19]},{"type":"AttributeLoad","children":[20,21]},{"type":"Name","value":"platform"},{"type":"attr","value":"system"},{"type":"Assign","children":[23,24]},{"type":"Name","value":"PATH_SPLIT"},{"type":"Constant","value":"/"},{"type":"Assign","children":[26,27]},{"type":"Name","value":"MODEL_CONFIG_NAME"},{"type":"Constant","value":"model.yaml"},{"type":"Assign","children":[29,30]},{"type":"Name","value":"IGNORE_FILES"},{"type":"ListLoad","children":[31]},{"type":"Constant","value":".DS_Store"},{"type":"FunctionDef","value":"resource_path"},{"type":"FunctionDef","value":"get_version"},{"type":"Assign","children":[35,36]},{"type":"Name","value":"NETWORK_MAP"},{"type":"Dict","children":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,58,61,64,67,70,73,76,79,82,85,88,91,94]},{"type":"Constant","value":"CNN3"},{"type":"Constant","value":"CNNX"},{"type":"Constant","value":"CNN5"},{"type":"Constant","value":"ResNetTiny"},{"type":"Constant","value":"ResNet50"},{"type":"Constant","value":"DenseNet"},{"type":"Constant","value":"MobileNetV2"},{"type":"Constant","value":"LSTM"},{"type":"Constant","value":"BiLSTM"},{"type":"Constant","value":"GRU"},{"type":"Constant","value":"BiGRU"},{"type":"Constant","value":"LSTMcuDNN"},{"type":"Constant","value":"BiLSTMcuDNN"},{"type":"Constant","value":"GRUcuDNN"},{"type":"Constant","value":"NoRecurrent"},{"type":"AttributeLoad","children":[53,54]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"CNN3"},{"type":"AttributeLoad","children":[56,57]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"CNNX"},{"type":"AttributeLoad","children":[59,60]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"CNN5"},{"type":"AttributeLoad","children":[62,63]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"ResNetTiny"},{"type":"AttributeLoad","children":[65,66]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"ResNet50"},{"type":"AttributeLoad","children":[68,69]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"DenseNet"},{"type":"AttributeLoad","children":[71,72]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"MobileNetV2"},{"type":"AttributeLoad","children":[74,75]},{"type":"Name","value":"RecurrentNetwork"},{"type":"attr","value":"LSTM"},{"type":"AttributeLoad","children":[77,78]},{"type":"Name","value":"RecurrentNetwork"},{"type":"attr","value":"BiLSTM"},{"type":"AttributeLoad","children":[80,81]},{"type":"Name","value":"RecurrentNetwork"},{"type":"attr","value":"GRU"},{"type":"AttributeLoad","children":[83,84]},{"type":"Name","value":"RecurrentNetwork"},{"type":"attr","value":"BiGRU"},{"type":"AttributeLoad","children":[86,87]},{"type":"Name","value":"RecurrentNetwork"},{"type":"attr","value":"LSTMcuDNN"},{"type":"AttributeLoad","children":[89,90]},{"type":"Name","value":"RecurrentNetwork"},{"type":"attr","value":"BiLSTMcuDNN"},{"type":"AttributeLoad","children":[92,93]},{"type":"Name","value":"RecurrentNetwork"},{"type":"attr","value":"GRUcuDNN"},{"type":"AttributeLoad","children":[95,96]},{"type":"Name","value":"RecurrentNetwork"},{"type":"attr","value":"NoRecurrent"},{"type":"Assign","children":[98,99]},{"type":"Name","value":"BUILT_IN_CATEGORY_MAP"},{"type":"Dict","children":[100,101,102,103,104,105,106,107,108,109,110,111,114,117,120,123,126,129,132,135,138,141]},{"type":"Constant","value":"NUMERIC"},{"type":"Constant","value":"ALPHANUMERIC"},{"type":"Constant","value":"ALPHANUMERIC_LOWER"},{"type":"Constant","value":"ALPHANUMERIC_UPPER"},{"type":"Constant","value":"ALPHABET_LOWER"},{"type":"Constant","value":"ALPHABET_UPPER"},{"type":"Constant","value":"ALPHABET"},{"type":"Constant","value":"ARITHMETIC"},{"type":"Constant","value":"FLOAT"},{"type":"Constant","value":"CHS_3500"},{"type":"Constant","value":"ALPHANUMERIC_CHS_3500_LOWER"},{"type":"AttributeLoad","children":[112,113]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"NUMERIC"},{"type":"AttributeLoad","children":[115,116]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"ALPHANUMERIC"},{"type":"AttributeLoad","children":[118,119]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"ALPHANUMERIC_LOWER"},{"type":"AttributeLoad","children":[121,122]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"ALPHANUMERIC_UPPER"},{"type":"AttributeLoad","children":[124,125]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"ALPHABET_LOWER"},{"type":"AttributeLoad","children":[127,128]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"ALPHABET_UPPER"},{"type":"AttributeLoad","children":[130,131]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"ALPHABET"},{"type":"AttributeLoad","children":[133,134]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"ARITHMETIC"},{"type":"AttributeLoad","children":[136,137]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"FLOAT"},{"type":"AttributeLoad","children":[139,140]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"CHS_3500"},{"type":"AttributeLoad","children":[142,143]},{"type":"Name","value":"SimpleCharset"},{"type":"attr","value":"ALPHANUMERIC_CHS_3500_LOWER"},{"type":"Assign","children":[145,146]},{"type":"Name","value":"OPTIMIZER_MAP"},{"type":"Dict","children":[147,148,149,150,151,152,153,154,157,160,163,166,169,172]},{"type":"Constant","value":"RAdam"},{"type":"Constant","value":"Adam"},{"type":"Constant","value":"AdaBound"},{"type":"Constant","value":"Momentum"},{"type":"Constant","value":"SGD"},{"type":"Constant","value":"AdaGrad"},{"type":"Constant","value":"RMSProp"},{"type":"AttributeLoad","children":[155,156]},{"type":"Name","value":"Optimizer"},{"type":"attr","value":"RAdam"},{"type":"AttributeLoad","children":[158,159]},{"type":"Name","value":"Optimizer"},{"type":"attr","value":"Adam"},{"type":"AttributeLoad","children":[161,162]},{"type":"Name","value":"Optimizer"},{"type":"attr","value":"AdaBound"},{"type":"AttributeLoad","children":[164,165]},{"type":"Name","value":"Optimizer"},{"type":"attr","value":"Momentum"},{"type":"AttributeLoad","children":[167,168]},{"type":"Name","value":"Optimizer"},{"type":"attr","value":"SGD"},{"type":"AttributeLoad","children":[170,171]},{"type":"Name","value":"Optimizer"},{"type":"attr","value":"AdaGrad"},{"type":"AttributeLoad","children":[173,174]},{"type":"Name","value":"Optimizer"},{"type":"attr","value":"RMSProp"},{"type":"Assign","children":[176,177]},{"type":"Name","value":"MODEL_SCENE_MAP"},{"type":"Dict","children":[178,179]},{"type":"Constant","value":"Classification"},{"type":"AttributeLoad","children":[180,181]},{"type":"Name","value":"ModelScene"},{"type":"attr","value":"Classification"},{"type":"Assign","children":[183,184]},{"type":"Name","value":"LOSS_FUNC_MAP"},{"type":"Dict","children":[185,186,187,190]},{"type":"Constant","value":"CTC"},{"type":"Constant","value":"CrossEntropy"},{"type":"AttributeLoad","children":[188,189]},{"type":"Name","value":"LossFunction"},{"type":"attr","value":"CTC"},{"type":"AttributeLoad","children":[191,192]},{"type":"Name","value":"LossFunction"},{"type":"attr","value":"CrossEntropy"},{"type":"Assign","children":[194,195]},{"type":"Name","value":"COMPILE_MODEL_MAP"},{"type":"Dict","children":[196,199,202,205,206,207]},{"type":"AttributeLoad","children":[197,198]},{"type":"Name","value":"ModelType"},{"type":"attr","value":"PB"},{"type":"AttributeLoad","children":[200,201]},{"type":"Name","value":"ModelType"},{"type":"attr","value":"ONNX"},{"type":"AttributeLoad","children":[203,204]},{"type":"Name","value":"ModelType"},{"type":"attr","value":"TFLITE"},{"type":"Constant","value":".pb"},{"type":"Constant","value":".onnx"},{"type":"Constant","value":".tflite"},{"type":"Assign","children":[209,210]},{"type":"Name","value":"RESIZE_MAP"},{"type":"Dict","children":[211,214,217,226]},{"type":"AttributeLoad","children":[212,213]},{"type":"Name","value":"LossFunction"},{"type":"attr","value":"CTC"},{"type":"AttributeLoad","children":[215,216]},{"type":"Name","value":"LossFunction"},{"type":"attr","value":"CrossEntropy"},{"type":"Lambda","children":[218,223]},{"type":"arguments","children":[219,222]},{"type":"args","children":[220,221]},{"type":"arg"},{"type":"arg"},{"type":"defaults"},{"type":"ListLoad","children":[224,225]},{"type":"Name","value":"x"},{"type":"Name","value":"y"},{"type":"Lambda","children":[227,232]},{"type":"arguments","children":[228,231]},{"type":"args","children":[229,230]},{"type":"arg"},{"type":"arg"},{"type":"defaults"},{"type":"ListLoad","children":[233,234]},{"type":"Name","value":"x"},{"type":"Name","value":"y"},{"type":"Assign","children":[236,237]},{"type":"Name","value":"LABEL_FROM_MAP"},{"type":"Dict","children":[238,239,240,241,242,245,248,251]},{"type":"Constant","value":"XML"},{"type":"Constant","value":"LMDB"},{"type":"Constant","value":"FileName"},{"type":"Constant","value":"TXT"},{"type":"AttributeLoad","children":[243,244]},{"type":"Name","value":"LabelFrom"},{"type":"attr","value":"XML"},{"type":"AttributeLoad","children":[246,247]},{"type":"Name","value":"LabelFrom"},{"type":"attr","value":"LMDB"},{"type":"AttributeLoad","children":[249,250]},{"type":"Name","value":"LabelFrom"},{"type":"attr","value":"FileName"},{"type":"AttributeLoad","children":[252,253]},{"type":"Name","value":"LabelFrom"},{"type":"attr","value":"TXT"},{"type":"Assign","children":[255,256]},{"type":"Name","value":"EXCEPT_FORMAT_MAP"},{"type":"Dict","children":[257,260,263,264]},{"type":"AttributeLoad","children":[258,259]},{"type":"Name","value":"ModelField"},{"type":"attr","value":"Image"},{"type":"AttributeLoad","children":[261,262]},{"type":"Name","value":"ModelField"},{"type":"attr","value":"Text"},{"type":"Constant","value":"png"},{"type":"Constant","value":"csv"},{"type":"Assign","children":[266,267]},{"type":"Name","value":"MODEL_FIELD_MAP"},{"type":"Dict","children":[268,269,270,273]},{"type":"Constant","value":"Image"},{"type":"Constant","value":"Text"},{"type":"AttributeLoad","children":[271,272]},{"type":"Name","value":"ModelField"},{"type":"attr","value":"Image"},{"type":"AttributeLoad","children":[274,275]},{"type":"Name","value":"ModelField"},{"type":"attr","value":"Text"},{"type":"Assign","children":[277,278]},{"type":"Name","value":"OUTPUT_SHAPE1_MAP"},{"type":"Dict","children":[279,282,285,288,291,294,297,300,303,306,309,312]},{"type":"AttributeLoad","children":[280,281]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"CNN5"},{"type":"AttributeLoad","children":[283,284]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"CNNX"},{"type":"AttributeLoad","children":[286,287]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"ResNetTiny"},{"type":"AttributeLoad","children":[289,290]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"ResNet50"},{"type":"AttributeLoad","children":[292,293]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"DenseNet"},{"type":"AttributeLoad","children":[295,296]},{"type":"Name","value":"CNNNetwork"},{"type":"attr","value":"MobileNetV2"},{"type":"ListLoad","children":[298,299]},{"type":"Constant","value":"16"},{"type":"Constant","value":"64"},{"type":"ListLoad","children":[301,302]},{"type":"Constant","value":"8"},{"type":"Constant","value":"64"},{"type":"ListLoad","children":[304,305]},{"type":"Constant","value":"16"},{"type":"Constant","value":"1024"},{"type":"ListLoad","children":[307,308]},{"type":"Constant","value":"16"},{"type":"Constant","value":"2048"},{"type":"ListLoad","children":[310,311]},{"type":"Constant","value":"32"},{"type":"Constant","value":"2048"},{"type":"ListLoad","children":[313,314]},{"type":"Constant","value":"32"},{"type":"Constant","value":"1200"},{"type":"ClassDef","value":"DataAugmentationEntity"},{"type":"ClassDef","value":"PretreatmentEntity"},{"type":"ClassDef","value":"ModelConfig"},{"type":"If","children":[319,322]},{"type":"CompareEq","children":[320,321]},{"type":"Name","value":"__name__"},{"type":"Constant","value":"__main__"},{"type":"body","children":[323,326,331,336]},{"type":"Assign","children":[324,325]},{"type":"Name","value":"name"},{"type":"Constant","value":"demo"},{"type":"Assign","children":[327,328]},{"type":"Name","value":"c"},{"type":"Call","children":[329,330]},{"type":"Name","value":"ModelConfig"},{"type":"keyword","value":"project_name"},{"type":"Expr","children":[332]},{"type":"Call","children":[333]},{"type":"AttributeLoad","children":[334,335]},{"type":"Name","value":"c"},{"type":"attr","value":"println"},{"type":"Expr","children":[337]},{"type":"Call","children":[338]},{"type":"AttributeLoad","children":[339,340]},{"type":"Name","value":"c"},{"type":"attr","value":"update"}]
[{"type":"Module","children":[1,3,4,6,7,9,12,13,16,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Library of functions for differentiable digital signal processing (DDSP)."},{"type":"ImportFrom","value":"collections"},{"type":"Import","children":[5]},{"type":"alias","value":"copy"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[8]},{"type":"alias","value":"gin"},{"type":"Import","children":[10]},{"type":"alias","value":"numpy","children":[11]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"scipy"},{"type":"Import","children":[14]},{"type":"alias","value":"tensorflow.compat.v2","children":[15]},{"type":"identifier","value":"tf"},{"type":"Assign","children":[17,18]},{"type":"Name","value":"Number"},{"type":"Call","children":[19,20,21,22,23,26]},{"type":"Name","value":"TypeVar"},{"type":"Constant","value":"Number"},{"type":"Name","value":"int"},{"type":"Name","value":"float"},{"type":"AttributeLoad","children":[24,25]},{"type":"Name","value":"np"},{"type":"attr","value":"ndarray"},{"type":"AttributeLoad","children":[27,28]},{"type":"Name","value":"tf"},{"type":"attr","value":"Tensor"},{"type":"Assign","children":[30,31]},{"type":"Name","value":"DB_RANGE"},{"type":"Constant","value":"80.0"},{"type":"FunctionDef","value":"tf_float32"},{"type":"FunctionDef","value":"make_iterable"},{"type":"FunctionDef","value":"to_dict"},{"type":"FunctionDef","value":"copy_if_tf_function"},{"type":"FunctionDef","value":"nested_keys"},{"type":"FunctionDef","value":"nested_lookup"},{"type":"FunctionDef","value":"leaf_key"},{"type":"FunctionDef","value":"map_shape"},{"type":"FunctionDef","value":"pad_axis"},{"type":"FunctionDef","value":"diff"},{"type":"FunctionDef","value":"nan_to_num"},{"type":"FunctionDef","value":"safe_divide"},{"type":"FunctionDef","value":"safe_log"},{"type":"FunctionDef","value":"logb"},{"type":"FunctionDef","value":"log10"},{"type":"FunctionDef","value":"log_scale"},{"type":"FunctionDef","value":"soft_limit"},{"type":"FunctionDef","value":"gradient_reversal"},{"type":"FunctionDef","value":"amplitude_to_db"},{"type":"FunctionDef","value":"power_to_db"},{"type":"FunctionDef","value":"db_to_amplitude"},{"type":"FunctionDef","value":"db_to_power"},{"type":"FunctionDef","value":"midi_to_hz"},{"type":"FunctionDef","value":"hz_to_midi"},{"type":"FunctionDef","value":"unit_to_midi"},{"type":"FunctionDef","value":"midi_to_unit"},{"type":"FunctionDef","value":"unit_to_hz"},{"type":"FunctionDef","value":"hz_to_unit"},{"type":"FunctionDef","value":"hz_to_bark"},{"type":"FunctionDef","value":"bark_to_hz"},{"type":"FunctionDef","value":"hz_to_mel"},{"type":"FunctionDef","value":"mel_to_hz"},{"type":"FunctionDef","value":"hz_to_erb"},{"type":"FunctionDef","value":"exp_sigmoid"},{"type":"FunctionDef","value":"sym_exp_sigmoid"},{"type":"FunctionDef","value":"_add_depth_axis"},{"type":"FunctionDef","value":"frequencies_softmax"},{"type":"FunctionDef","value":"frequencies_sigmoid"},{"type":"FunctionDef","value":"frequencies_critical_bands"},{"type":"FunctionDef","value":"resample"},{"type":"FunctionDef","value":"upsample_with_windows"},{"type":"FunctionDef","value":"center_crop"},{"type":"FunctionDef","value":"sinusoidal_to_harmonic"},{"type":"FunctionDef","value":"harmonic_to_sinusoidal"},{"type":"FunctionDef","value":"angular_cumsum"},{"type":"FunctionDef","value":"remove_above_nyquist"},{"type":"FunctionDef","value":"normalize_harmonics"},{"type":"FunctionDef","value":"oscillator_bank"},{"type":"FunctionDef","value":"harmonic_oscillator_bank"},{"type":"FunctionDef","value":"get_harmonic_frequencies"},{"type":"FunctionDef","value":"harmonic_synthesis"},{"type":"FunctionDef","value":"streaming_harmonic_synthesis"},{"type":"FunctionDef","value":"linear_lookup"},{"type":"FunctionDef","value":"harmonic_distribution_to_wavetable"},{"type":"FunctionDef","value":"wavetable_synthesis"},{"type":"FunctionDef","value":"variable_length_delay"},{"type":"FunctionDef","value":"get_fft_size"},{"type":"FunctionDef","value":"crop_and_compensate_delay"},{"type":"FunctionDef","value":"fft_convolve"},{"type":"FunctionDef","value":"apply_window_to_impulse_response"},{"type":"FunctionDef","value":"frequency_impulse_response"},{"type":"FunctionDef","value":"sinc"},{"type":"FunctionDef","value":"sinc_impulse_response"},{"type":"FunctionDef","value":"frequency_filter"},{"type":"FunctionDef","value":"sinc_filter"}]
[{"type":"Module","children":[1,2,3,4,5,6,8]},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"h2o.estimators.estimator_base"},{"type":"ImportFrom","value":"h2o.exceptions"},{"type":"ImportFrom","value":"h2o.frame"},{"type":"ImportFrom","value":"h2o.utils.typechecks"},{"type":"Import","children":[7]},{"type":"alias","value":"h2o"},{"type":"ClassDef","value":"H2ODeepWaterEstimator"}]
[{"type":"Module","children":[1,3,5,7,9,10,11,12,13,16,19,21,23,41,44,53,56,65,74,83,85,91,112,114,117,120,128,136,138,146,237,241,249,254,270,273,278,280,287,290,311,312,313,315,316,318,319,321,322,324,325,327,330,333,336,337,339,342,345,348,353,354,358,362,364,367,370,373,374,378]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nTitle: Classification with Neural Decision Forests\nAuthor: [Khalid Salama](https://www.linkedin.com/in/khalid-salama-24403144/)\nDate created: 2021/01/15\nLast modified: 2021/01/15\nDescription: How to train differentiable decision trees for end-to-end learning in deep neural networks.\nAccelerator: GPU\n"},{"type":"Expr","children":[4]},{"type":"Constant","value":"\n## Introduction\n\nThis example provides an implementation of the\n[Deep Neural Decision Forest](https://ieeexplore.ieee.org/document/7410529)\nmodel introduced by P. Kontschieder et al. for structured data classification.\nIt demonstrates how to build a stochastic and differentiable decision tree model,\ntrain it end-to-end, and unify decision trees with deep representation learning.\n\n## The dataset\n\nThis example uses the\n[United States Census Income Dataset](https://archive.ics.uci.edu/ml/datasets/census+income)\nprovided by the\n[UC Irvine Machine Learning Repository](https://archive.ics.uci.edu/ml/index.php).\nThe task is binary classification\nto predict whether a person is likely to be making over USD 50,000 a year.\n\nThe dataset includes 48,842 instances with 14 input features (such as age, work class, education, occupation, and so on): 5 numerical features\nand 9 categorical features.\n"},{"type":"Expr","children":[6]},{"type":"Constant","value":"\n## Setup\n"},{"type":"Import","children":[8]},{"type":"alias","value":"keras"},{"type":"ImportFrom","value":"keras"},{"type":"ImportFrom","value":"keras.layers"},{"type":"ImportFrom","value":"keras"},{"type":"ImportFrom","value":"tensorflow"},{"type":"Import","children":[14]},{"type":"alias","value":"numpy","children":[15]},{"type":"identifier","value":"np"},{"type":"Import","children":[17]},{"type":"alias","value":"pandas","children":[18]},{"type":"identifier","value":"pd"},{"type":"Import","children":[20]},{"type":"alias","value":"math"},{"type":"Expr","children":[22]},{"type":"Constant","value":"\n## Prepare the data\n"},{"type":"Assign","children":[24,25]},{"type":"Name","value":"CSV_HEADER"},{"type":"ListLoad","children":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40]},{"type":"Constant","value":"age"},{"type":"Constant","value":"workclass"},{"type":"Constant","value":"fnlwgt"},{"type":"Constant","value":"education"},{"type":"Constant","value":"education_num"},{"type":"Constant","value":"marital_status"},{"type":"Constant","value":"occupation"},{"type":"Constant","value":"relationship"},{"type":"Constant","value":"race"},{"type":"Constant","value":"gender"},{"type":"Constant","value":"capital_gain"},{"type":"Constant","value":"capital_loss"},{"type":"Constant","value":"hours_per_week"},{"type":"Constant","value":"native_country"},{"type":"Constant","value":"income_bracket"},{"type":"Assign","children":[42,43]},{"type":"Name","value":"train_data_url"},{"type":"Constant","value":"https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data"},{"type":"Assign","children":[45,46]},{"type":"Name","value":"train_data"},{"type":"Call","children":[47,50,51,52]},{"type":"AttributeLoad","children":[48,49]},{"type":"Name","value":"pd"},{"type":"attr","value":"read_csv"},{"type":"Name","value":"train_data_url"},{"type":"keyword","value":"header"},{"type":"keyword","value":"names"},{"type":"Assign","children":[54,55]},{"type":"Name","value":"test_data_url"},{"type":"Constant","value":"https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.test"},{"type":"Assign","children":[57,58]},{"type":"Name","value":"test_data"},{"type":"Call","children":[59,62,63,64]},{"type":"AttributeLoad","children":[60,61]},{"type":"Name","value":"pd"},{"type":"attr","value":"read_csv"},{"type":"Name","value":"test_data_url"},{"type":"keyword","value":"header"},{"type":"keyword","value":"names"},{"type":"Expr","children":[66]},{"type":"Call","children":[67,68]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[69,70]},{"type":"Constant","value":"Train dataset shape: "},{"type":"FormattedValue","children":[71]},{"type":"AttributeLoad","children":[72,73]},{"type":"Name","value":"train_data"},{"type":"attr","value":"shape"},{"type":"Expr","children":[75]},{"type":"Call","children":[76,77]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[78,79]},{"type":"Constant","value":"Test dataset shape: "},{"type":"FormattedValue","children":[80]},{"type":"AttributeLoad","children":[81,82]},{"type":"Name","value":"test_data"},{"type":"attr","value":"shape"},{"type":"Expr","children":[84]},{"type":"Constant","value":"\nRemove the first record (because it is not a valid data example) and a trailing\n'dot' in the class labels.\n"},{"type":"Assign","children":[86,87]},{"type":"Name","value":"test_data"},{"type":"SubscriptLoad","children":[88,89]},{"type":"Name","value":"test_data"},{"type":"Slice","children":[90]},{"type":"Constant","value":"1"},{"type":"Assign","children":[92,95]},{"type":"AttributeStore","children":[93,94]},{"type":"Name","value":"test_data"},{"type":"attr","value":"income_bracket"},{"type":"Call","children":[96,101]},{"type":"AttributeLoad","children":[97,100]},{"type":"AttributeLoad","children":[98,99]},{"type":"Name","value":"test_data"},{"type":"attr","value":"income_bracket"},{"type":"attr","value":"apply"},{"type":"Lambda","children":[102,106]},{"type":"arguments","children":[103,105]},{"type":"args","children":[104]},{"type":"arg"},{"type":"defaults"},{"type":"Call","children":[107,110,111]},{"type":"AttributeLoad","children":[108,109]},{"type":"Name","value":"value"},{"type":"attr","value":"replace"},{"type":"Constant","value":"."},{"type":"Constant","value":""},{"type":"Expr","children":[113]},{"type":"Constant","value":"\nWe store the training and test data splits locally as CSV files.\n"},{"type":"Assign","children":[115,116]},{"type":"Name","value":"train_data_file"},{"type":"Constant","value":"train_data.csv"},{"type":"Assign","children":[118,119]},{"type":"Name","value":"test_data_file"},{"type":"Constant","value":"test_data.csv"},{"type":"Expr","children":[121]},{"type":"Call","children":[122,125,126,127]},{"type":"AttributeLoad","children":[123,124]},{"type":"Name","value":"train_data"},{"type":"attr","value":"to_csv"},{"type":"Name","value":"train_data_file"},{"type":"keyword","value":"index"},{"type":"keyword","value":"header"},{"type":"Expr","children":[129]},{"type":"Call","children":[130,133,134,135]},{"type":"AttributeLoad","children":[131,132]},{"type":"Name","value":"test_data"},{"type":"attr","value":"to_csv"},{"type":"Name","value":"test_data_file"},{"type":"keyword","value":"index"},{"type":"keyword","value":"header"},{"type":"Expr","children":[137]},{"type":"Constant","value":"\n## Define dataset metadata\n\nHere, we define the metadata of the dataset that will be useful for reading and parsing\nand encoding input features.\n"},{"type":"Assign","children":[139,140]},{"type":"Name","value":"NUMERIC_FEATURE_NAMES"},{"type":"ListLoad","children":[141,142,143,144,145]},{"type":"Constant","value":"age"},{"type":"Constant","value":"education_num"},{"type":"Constant","value":"capital_gain"},{"type":"Constant","value":"capital_loss"},{"type":"Constant","value":"hours_per_week"},{"type":"Assign","children":[147,148]},{"type":"Name","value":"CATEGORICAL_FEATURES_WITH_VOCABULARY"},{"type":"Dict","children":[149,150,151,152,153,154,155,156,157,167,177,187,197,207,217,227]},{"type":"Constant","value":"workclass"},{"type":"Constant","value":"education"},{"type":"Constant","value":"marital_status"},{"type":"Constant","value":"occupation"},{"type":"Constant","value":"relationship"},{"type":"Constant","value":"race"},{"type":"Constant","value":"gender"},{"type":"Constant","value":"native_country"},{"type":"Call","children":[158,159]},{"type":"Name","value":"sorted"},{"type":"Call","children":[160,161]},{"type":"Name","value":"list"},{"type":"Call","children":[162]},{"type":"AttributeLoad","children":[163,166]},{"type":"SubscriptLoad","children":[164,165]},{"type":"Name","value":"train_data"},{"type":"Constant","value":"workclass"},{"type":"attr","value":"unique"},{"type":"Call","children":[168,169]},{"type":"Name","value":"sorted"},{"type":"Call","children":[170,171]},{"type":"Name","value":"list"},{"type":"Call","children":[172]},{"type":"AttributeLoad","children":[173,176]},{"type":"SubscriptLoad","children":[174,175]},{"type":"Name","value":"train_data"},{"type":"Constant","value":"education"},{"type":"attr","value":"unique"},{"type":"Call","children":[178,179]},{"type":"Name","value":"sorted"},{"type":"Call","children":[180,181]},{"type":"Name","value":"list"},{"type":"Call","children":[182]},{"type":"AttributeLoad","children":[183,186]},{"type":"SubscriptLoad","children":[184,185]},{"type":"Name","value":"train_data"},{"type":"Constant","value":"marital_status"},{"type":"attr","value":"unique"},{"type":"Call","children":[188,189]},{"type":"Name","value":"sorted"},{"type":"Call","children":[190,191]},{"type":"Name","value":"list"},{"type":"Call","children":[192]},{"type":"AttributeLoad","children":[193,196]},{"type":"SubscriptLoad","children":[194,195]},{"type":"Name","value":"train_data"},{"type":"Constant","value":"occupation"},{"type":"attr","value":"unique"},{"type":"Call","children":[198,199]},{"type":"Name","value":"sorted"},{"type":"Call","children":[200,201]},{"type":"Name","value":"list"},{"type":"Call","children":[202]},{"type":"AttributeLoad","children":[203,206]},{"type":"SubscriptLoad","children":[204,205]},{"type":"Name","value":"train_data"},{"type":"Constant","value":"relationship"},{"type":"attr","value":"unique"},{"type":"Call","children":[208,209]},{"type":"Name","value":"sorted"},{"type":"Call","children":[210,211]},{"type":"Name","value":"list"},{"type":"Call","children":[212]},{"type":"AttributeLoad","children":[213,216]},{"type":"SubscriptLoad","children":[214,215]},{"type":"Name","value":"train_data"},{"type":"Constant","value":"race"},{"type":"attr","value":"unique"},{"type":"Call","children":[218,219]},{"type":"Name","value":"sorted"},{"type":"Call","children":[220,221]},{"type":"Name","value":"list"},{"type":"Call","children":[222]},{"type":"AttributeLoad","children":[223,226]},{"type":"SubscriptLoad","children":[224,225]},{"type":"Name","value":"train_data"},{"type":"Constant","value":"gender"},{"type":"attr","value":"unique"},{"type":"Call","children":[228,229]},{"type":"Name","value":"sorted"},{"type":"Call","children":[230,231]},{"type":"Name","value":"list"},{"type":"Call","children":[232]},{"type":"AttributeLoad","children":[233,236]},{"type":"SubscriptLoad","children":[234,235]},{"type":"Name","value":"train_data"},{"type":"Constant","value":"native_country"},{"type":"attr","value":"unique"},{"type":"Assign","children":[238,239]},{"type":"Name","value":"IGNORE_COLUMN_NAMES"},{"type":"ListLoad","children":[240]},{"type":"Constant","value":"fnlwgt"},{"type":"Assign","children":[242,243]},{"type":"Name","value":"CATEGORICAL_FEATURE_NAMES"},{"type":"Call","children":[244,245]},{"type":"Name","value":"list"},{"type":"Call","children":[246]},{"type":"AttributeLoad","children":[247,248]},{"type":"Name","value":"CATEGORICAL_FEATURES_WITH_VOCABULARY"},{"type":"attr","value":"keys"},{"type":"Assign","children":[250,251]},{"type":"Name","value":"FEATURE_NAMES"},{"type":"BinOpAdd","children":[252,253]},{"type":"Name","value":"NUMERIC_FEATURE_NAMES"},{"type":"Name","value":"CATEGORICAL_FEATURE_NAMES"},{"type":"Assign","children":[255,256]},{"type":"Name","value":"COLUMN_DEFAULTS"},{"type":"ListComp","children":[257,267]},{"type":"IfExp","children":[258,263,265]},{"type":"CompareIn","children":[259,260]},{"type":"Name","value":"feature_name"},{"type":"BinOpAdd","children":[261,262]},{"type":"Name","value":"NUMERIC_FEATURE_NAMES"},{"type":"Name","value":"IGNORE_COLUMN_NAMES"},{"type":"ListLoad","children":[264]},{"type":"Constant","value":"0.0"},{"type":"ListLoad","children":[266]},{"type":"Constant","value":"NA"},{"type":"comprehension","children":[268,269]},{"type":"Name","value":"feature_name"},{"type":"Name","value":"CSV_HEADER"},{"type":"Assign","children":[271,272]},{"type":"Name","value":"TARGET_FEATURE_NAME"},{"type":"Constant","value":"income_bracket"},{"type":"Assign","children":[274,275]},{"type":"Name","value":"TARGET_LABELS"},{"type":"ListLoad","children":[276,277]},{"type":"Constant","value":" <=50K"},{"type":"Constant","value":" >50K"},{"type":"Expr","children":[279]},{"type":"Constant","value":"\n## Create `tf_data.Dataset` objects for training and validation\n\nWe create an input function to read and parse the file, and convert features and labels\ninto a [`tf_data.Dataset`](https://www.tensorflow.org/guide/datasets)\nfor training and validation. We also preprocess the input by mapping the target label\nto an index.\n"},{"type":"Assign","children":[281,282]},{"type":"Name","value":"target_label_lookup"},{"type":"Call","children":[283,284,285,286]},{"type":"Name","value":"StringLookup"},{"type":"keyword","value":"vocabulary"},{"type":"keyword","value":"mask_token"},{"type":"keyword","value":"num_oov_indices"},{"type":"Assign","children":[288,289]},{"type":"Name","value":"lookup_dict"},{"type":"Dict"},{"type":"For","children":[291,292,293]},{"type":"Name","value":"feature_name"},{"type":"Name","value":"CATEGORICAL_FEATURE_NAMES"},{"type":"body","children":[294,299,306]},{"type":"Assign","children":[295,296]},{"type":"Name","value":"vocabulary"},{"type":"SubscriptLoad","children":[297,298]},{"type":"Name","value":"CATEGORICAL_FEATURES_WITH_VOCABULARY"},{"type":"Name","value":"feature_name"},{"type":"Assign","children":[300,301]},{"type":"Name","value":"lookup"},{"type":"Call","children":[302,303,304,305]},{"type":"Name","value":"StringLookup"},{"type":"keyword","value":"vocabulary"},{"type":"keyword","value":"mask_token"},{"type":"keyword","value":"num_oov_indices"},{"type":"Assign","children":[307,310]},{"type":"SubscriptStore","children":[308,309]},{"type":"Name","value":"lookup_dict"},{"type":"Name","value":"feature_name"},{"type":"Name","value":"lookup"},{"type":"FunctionDef","value":"encode_categorical"},{"type":"FunctionDef","value":"get_dataset_from_csv"},{"type":"Expr","children":[314]},{"type":"Constant","value":"\n## Create model inputs\n"},{"type":"FunctionDef","value":"create_model_inputs"},{"type":"Expr","children":[317]},{"type":"Constant","value":"\n## Encode input features\n"},{"type":"FunctionDef","value":"encode_inputs"},{"type":"Expr","children":[320]},{"type":"Constant","value":"\n## Deep Neural Decision Tree\n\nA neural decision tree model has two sets of weights to learn. The first set is `pi`,\nwhich represents the probability distribution of the classes in the tree leaves.\nThe second set is the weights of the routing layer `decision_fn`, which represents the probability\nof going to each leave. The forward pass of the model works as follows:\n\n1. The model expects input `features` as a single vector encoding all the features of an instance\nin the batch. This vector can be generated from a Convolution Neural Network (CNN) applied to images\nor dense transformations applied to structured data features.\n2. The model first applies a `used_features_mask` to randomly select a subset of input features to use.\n3. Then, the model computes the probabilities (`mu`) for the input instances to reach the tree leaves\nby iteratively performing a *stochastic* routing throughout the tree levels.\n4. Finally, the probabilities of reaching the leaves are combined by the class probabilities at the\nleaves to produce the final `outputs`.\n"},{"type":"ClassDef","value":"NeuralDecisionTree"},{"type":"Expr","children":[323]},{"type":"Constant","value":"\n## Deep Neural Decision Forest\n\nThe neural decision forest model consists of a set of neural decision trees that are\ntrained simultaneously. The output of the forest model is the average outputs of its trees.\n"},{"type":"ClassDef","value":"NeuralDecisionForest"},{"type":"Expr","children":[326]},{"type":"Constant","value":"\nFinally, let's set up the code that will train and evaluate the model.\n"},{"type":"Assign","children":[328,329]},{"type":"Name","value":"learning_rate"},{"type":"Constant","value":"0.01"},{"type":"Assign","children":[331,332]},{"type":"Name","value":"batch_size"},{"type":"Constant","value":"265"},{"type":"Assign","children":[334,335]},{"type":"Name","value":"num_epochs"},{"type":"Constant","value":"10"},{"type":"FunctionDef","value":"run_experiment"},{"type":"Expr","children":[338]},{"type":"Constant","value":"\n## Experiment 1: train a decision tree model\n\nIn this experiment, we train a single neural decision tree model\nwhere we use all input features.\n"},{"type":"Assign","children":[340,341]},{"type":"Name","value":"num_trees"},{"type":"Constant","value":"10"},{"type":"Assign","children":[343,344]},{"type":"Name","value":"depth"},{"type":"Constant","value":"10"},{"type":"Assign","children":[346,347]},{"type":"Name","value":"used_features_rate"},{"type":"Constant","value":"1.0"},{"type":"Assign","children":[349,350]},{"type":"Name","value":"num_classes"},{"type":"Call","children":[351,352]},{"type":"Name","value":"len"},{"type":"Name","value":"TARGET_LABELS"},{"type":"FunctionDef","value":"create_tree_model"},{"type":"Assign","children":[355,356]},{"type":"Name","value":"tree_model"},{"type":"Call","children":[357]},{"type":"Name","value":"create_tree_model"},{"type":"Expr","children":[359]},{"type":"Call","children":[360,361]},{"type":"Name","value":"run_experiment"},{"type":"Name","value":"tree_model"},{"type":"Expr","children":[363]},{"type":"Constant","value":"\n## Experiment 2: train a forest model\n\nIn this experiment, we train a neural decision forest with `num_trees` trees\nwhere each tree uses randomly selected 50% of the input features. You can control the number\nof features to be used in each tree by setting the `used_features_rate` variable.\nIn addition, we set the depth to 5 instead of 10 compared to the previous experiment.\n"},{"type":"Assign","children":[365,366]},{"type":"Name","value":"num_trees"},{"type":"Constant","value":"25"},{"type":"Assign","children":[368,369]},{"type":"Name","value":"depth"},{"type":"Constant","value":"5"},{"type":"Assign","children":[371,372]},{"type":"Name","value":"used_features_rate"},{"type":"Constant","value":"0.5"},{"type":"FunctionDef","value":"create_forest_model"},{"type":"Assign","children":[375,376]},{"type":"Name","value":"forest_model"},{"type":"Call","children":[377]},{"type":"Name","value":"create_forest_model"},{"type":"Expr","children":[379]},{"type":"Call","children":[380,381]},{"type":"Name","value":"run_experiment"},{"type":"Name","value":"forest_model"}]
[{"type":"Module","children":[1,3,5,7,9,16,19,22,24,25,30,38,40,43,46,49,56,59,62,65,68,75,78,81,84,87,90,93,100,103,105,107,108,109,120,126,132,139,146,152,158,160,161,163,164,165,167,168,170,171,173,177,188,194,203,205,206,208,210,220,222,226,232,239,247,256,258]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nTitle: Distilling Vision Transformers\nAuthor: [Sayak Paul](https://twitter.com/RisingSayak)\nDate created: 2022/04/05\nLast modified: 2023/09/16\nDescription: Distillation of Vision Transformers through attention.\nAccelerator: GPU\n"},{"type":"Expr","children":[4]},{"type":"Constant","value":"\n## Introduction\n\nIn the original *Vision Transformers* (ViT) paper\n([Dosovitskiy et al.](https://arxiv.org/abs/2010.11929)),\nthe authors concluded that to perform on par with Convolutional Neural Networks (CNNs),\nViTs need to be pre-trained on larger datasets. The larger the better. This is mainly\ndue to the lack of inductive biases in the ViT architecture -- unlike CNNs,\nthey don't have layers that exploit locality. In a follow-up paper\n([Steiner et al.](https://arxiv.org/abs/2106.10270)),\nthe authors show that it is possible to substantially improve the performance of ViTs\nwith stronger regularization and longer training.\n\nMany groups have proposed different ways to deal with the problem\nof data-intensiveness of ViT training.\nOne such way was shown in the *Data-efficient image Transformers*,\n(DeiT) paper ([Touvron et al.](https://arxiv.org/abs/2012.12877)). The\nauthors introduced a distillation technique that is specific to transformer-based vision\nmodels. DeiT is among the first works to show that it's possible to train ViTs well\nwithout using larger datasets.\n\nIn this example, we implement the distillation recipe proposed in DeiT. This\nrequires us to slightly tweak the original ViT architecture and write a custom training\nloop to implement the distillation recipe.\n\nTo comfortably navigate through this example, you'll be expected to know how a ViT and\nknowledge distillation work. The following are good resources in case you needed a\nrefresher:\n\n* [ViT on keras.io](https://keras.io/examples/vision/image_classification_with_vision_transformer)\n* [Knowledge distillation on keras.io](https://keras.io/examples/vision/knowledge_distillation/)\n"},{"type":"Expr","children":[6]},{"type":"Constant","value":"\n## Imports\n"},{"type":"Import","children":[8]},{"type":"alias","value":"os"},{"type":"Assign","children":[10,15]},{"type":"SubscriptStore","children":[11,14]},{"type":"AttributeLoad","children":[12,13]},{"type":"Name","value":"os"},{"type":"attr","value":"environ"},{"type":"Constant","value":"KERAS_BACKEND"},{"type":"Constant","value":"tensorflow"},{"type":"Import","children":[17]},{"type":"alias","value":"tensorflow","children":[18]},{"type":"identifier","value":"tf"},{"type":"Import","children":[20]},{"type":"alias","value":"tensorflow_datasets","children":[21]},{"type":"identifier","value":"tfds"},{"type":"Import","children":[23]},{"type":"alias","value":"keras"},{"type":"ImportFrom","value":"keras"},{"type":"Expr","children":[26]},{"type":"Call","children":[27]},{"type":"AttributeLoad","children":[28,29]},{"type":"Name","value":"tfds"},{"type":"attr","value":"disable_progress_bar"},{"type":"Expr","children":[31]},{"type":"Call","children":[32,37]},{"type":"AttributeLoad","children":[33,36]},{"type":"AttributeLoad","children":[34,35]},{"type":"Name","value":"keras"},{"type":"attr","value":"utils"},{"type":"attr","value":"set_random_seed"},{"type":"Constant","value":"42"},{"type":"Expr","children":[39]},{"type":"Constant","value":"\n## Constants\n"},{"type":"Assign","children":[41,42]},{"type":"Name","value":"MODEL_TYPE"},{"type":"Constant","value":"deit_distilled_tiny_patch16_224"},{"type":"Assign","children":[44,45]},{"type":"Name","value":"RESOLUTION"},{"type":"Constant","value":"224"},{"type":"Assign","children":[47,48]},{"type":"Name","value":"PATCH_SIZE"},{"type":"Constant","value":"16"},{"type":"Assign","children":[50,51]},{"type":"Name","value":"NUM_PATCHES"},{"type":"BinOpPow","children":[52,55]},{"type":"BinOpFloorDiv","children":[53,54]},{"type":"Name","value":"RESOLUTION"},{"type":"Name","value":"PATCH_SIZE"},{"type":"Constant","value":"2"},{"type":"Assign","children":[57,58]},{"type":"Name","value":"LAYER_NORM_EPS"},{"type":"Constant","value":"1e-06"},{"type":"Assign","children":[60,61]},{"type":"Name","value":"PROJECTION_DIM"},{"type":"Constant","value":"192"},{"type":"Assign","children":[63,64]},{"type":"Name","value":"NUM_HEADS"},{"type":"Constant","value":"3"},{"type":"Assign","children":[66,67]},{"type":"Name","value":"NUM_LAYERS"},{"type":"Constant","value":"12"},{"type":"Assign","children":[69,70]},{"type":"Name","value":"MLP_UNITS"},{"type":"ListLoad","children":[71,74]},{"type":"BinOpMult","children":[72,73]},{"type":"Name","value":"PROJECTION_DIM"},{"type":"Constant","value":"4"},{"type":"Name","value":"PROJECTION_DIM"},{"type":"Assign","children":[76,77]},{"type":"Name","value":"DROPOUT_RATE"},{"type":"Constant","value":"0.0"},{"type":"Assign","children":[79,80]},{"type":"Name","value":"DROP_PATH_RATE"},{"type":"Constant","value":"0.1"},{"type":"Assign","children":[82,83]},{"type":"Name","value":"NUM_EPOCHS"},{"type":"Constant","value":"20"},{"type":"Assign","children":[85,86]},{"type":"Name","value":"BASE_LR"},{"type":"Constant","value":"0.0005"},{"type":"Assign","children":[88,89]},{"type":"Name","value":"WEIGHT_DECAY"},{"type":"Constant","value":"0.0001"},{"type":"Assign","children":[91,92]},{"type":"Name","value":"BATCH_SIZE"},{"type":"Constant","value":"256"},{"type":"Assign","children":[94,95]},{"type":"Name","value":"AUTO"},{"type":"AttributeLoad","children":[96,99]},{"type":"AttributeLoad","children":[97,98]},{"type":"Name","value":"tf"},{"type":"attr","value":"data"},{"type":"attr","value":"AUTOTUNE"},{"type":"Assign","children":[101,102]},{"type":"Name","value":"NUM_CLASSES"},{"type":"Constant","value":"5"},{"type":"Expr","children":[104]},{"type":"Constant","value":"\nYou probably noticed that `DROPOUT_RATE` has been set 0.0. Dropout has been used\nin the implementation to keep it complete. For smaller models (like the one used in\nthis example), you don't need it, but for bigger models, using dropout helps.\n"},{"type":"Expr","children":[106]},{"type":"Constant","value":"\n## Load the `tf_flowers` dataset and prepare preprocessing utilities\n\nThe authors use an array of different augmentation techniques, including MixUp\n([Zhang et al.](https://arxiv.org/abs/1710.09412)),\nRandAugment ([Cubuk et al.](https://arxiv.org/abs/1909.13719)),\nand so on. However, to keep the example simple to work through, we'll discard them.\n"},{"type":"FunctionDef","value":"preprocess_dataset"},{"type":"FunctionDef","value":"prepare_dataset"},{"type":"Assign","children":[110,113]},{"type":"TupleStore","children":[111,112]},{"type":"Name","value":"train_dataset"},{"type":"Name","value":"val_dataset"},{"type":"Call","children":[114,117,118,119]},{"type":"AttributeLoad","children":[115,116]},{"type":"Name","value":"tfds"},{"type":"attr","value":"load"},{"type":"Constant","value":"tf_flowers"},{"type":"keyword","value":"split"},{"type":"keyword","value":"as_supervised"},{"type":"Assign","children":[121,122]},{"type":"Name","value":"num_train"},{"type":"Call","children":[123]},{"type":"AttributeLoad","children":[124,125]},{"type":"Name","value":"train_dataset"},{"type":"attr","value":"cardinality"},{"type":"Assign","children":[127,128]},{"type":"Name","value":"num_val"},{"type":"Call","children":[129]},{"type":"AttributeLoad","children":[130,131]},{"type":"Name","value":"val_dataset"},{"type":"attr","value":"cardinality"},{"type":"Expr","children":[133]},{"type":"Call","children":[134,135]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[136,137]},{"type":"Constant","value":"Number of training examples: "},{"type":"FormattedValue","children":[138]},{"type":"Name","value":"num_train"},{"type":"Expr","children":[140]},{"type":"Call","children":[141,142]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[143,144]},{"type":"Constant","value":"Number of validation examples: "},{"type":"FormattedValue","children":[145]},{"type":"Name","value":"num_val"},{"type":"Assign","children":[147,148]},{"type":"Name","value":"train_dataset"},{"type":"Call","children":[149,150,151]},{"type":"Name","value":"prepare_dataset"},{"type":"Name","value":"train_dataset"},{"type":"keyword","value":"is_training"},{"type":"Assign","children":[153,154]},{"type":"Name","value":"val_dataset"},{"type":"Call","children":[155,156,157]},{"type":"Name","value":"prepare_dataset"},{"type":"Name","value":"val_dataset"},{"type":"keyword","value":"is_training"},{"type":"Expr","children":[159]},{"type":"Constant","value":"\n## Implementing the DeiT variants of ViT\n\nSince DeiT is an extension of ViT it'd make sense to first implement ViT and then extend\nit to support DeiT's components.\n\nFirst, we'll implement a layer for Stochastic Depth\n([Huang et al.](https://arxiv.org/abs/1603.09382))\nwhich is used in DeiT for regularization.\n"},{"type":"ClassDef","value":"StochasticDepth"},{"type":"Expr","children":[162]},{"type":"Constant","value":"\nNow, we'll implement the MLP and Transformer blocks.\n"},{"type":"FunctionDef","value":"mlp"},{"type":"FunctionDef","value":"transformer"},{"type":"Expr","children":[166]},{"type":"Constant","value":"\nWe'll now implement a `ViTClassifier` class building on top of the components we just\ndeveloped. Here we'll be following the original pooling strategy used in the ViT paper --\nuse a class token and use the feature representations corresponding to it for\nclassification.\n"},{"type":"ClassDef","value":"ViTClassifier"},{"type":"Expr","children":[169]},{"type":"Constant","value":"\nThis class can be used standalone as ViT and is end-to-end trainable. Just remove the\n`distilled` phrase in `MODEL_TYPE` and it should work with `vit_tiny = ViTClassifier()`.\nLet's now extend it to DeiT. The following figure presents the schematic of DeiT (taken\nfrom the DeiT paper):\n\n![](https://i.imgur.com/5lmg2Xs.png)\n\nApart from the class token, DeiT has another token for distillation. During distillation,\nthe logits corresponding to the class token are compared to the true labels, and the\nlogits corresponding to the distillation token are compared to the teacher's predictions.\n"},{"type":"ClassDef","value":"ViTDistilled"},{"type":"Expr","children":[172]},{"type":"Constant","value":"\nLet's verify if the `ViTDistilled` class can be initialized and called as expected.\n"},{"type":"Assign","children":[174,175]},{"type":"Name","value":"deit_tiny_distilled"},{"type":"Call","children":[176]},{"type":"Name","value":"ViTDistilled"},{"type":"Assign","children":[178,179]},{"type":"Name","value":"dummy_inputs"},{"type":"Call","children":[180,183]},{"type":"AttributeLoad","children":[181,182]},{"type":"Name","value":"tf"},{"type":"attr","value":"ones"},{"type":"TupleLoad","children":[184,185,186,187]},{"type":"Constant","value":"2"},{"type":"Constant","value":"224"},{"type":"Constant","value":"224"},{"type":"Constant","value":"3"},{"type":"Assign","children":[189,190]},{"type":"Name","value":"outputs"},{"type":"Call","children":[191,192,193]},{"type":"Name","value":"deit_tiny_distilled"},{"type":"Name","value":"dummy_inputs"},{"type":"keyword","value":"training"},{"type":"Expr","children":[195]},{"type":"Call","children":[196,197]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[198,199]},{"type":"Constant","value":"output_shape: "},{"type":"FormattedValue","children":[200]},{"type":"AttributeLoad","children":[201,202]},{"type":"Name","value":"outputs"},{"type":"attr","value":"shape"},{"type":"Expr","children":[204]},{"type":"Constant","value":"\n## Implementing the trainer\n\nUnlike what happens in standard knowledge distillation\n([Hinton et al.](https://arxiv.org/abs/1503.02531)),\nwhere a temperature-scaled softmax is used as well as KL divergence,\nDeiT authors use the following loss function:\n\n![](https://i.imgur.com/bXdxsBq.png)\n\n\nHere,\n\n* CE is cross-entropy\n* `psi` is the softmax function\n* Z_s denotes student predictions\n* y denotes true labels\n* y_t denotes teacher predictions\n"},{"type":"ClassDef","value":"DeiT"},{"type":"Expr","children":[207]},{"type":"Constant","value":"\n## Load the teacher model\n\nThis model is based on the BiT family of ResNets\n([Kolesnikov et al.](https://arxiv.org/abs/1912.11370))\nfine-tuned on the `tf_flowers` dataset. You can refer to\n[this notebook](https://github.com/sayakpaul/deit-tf/blob/main/notebooks/bit-teacher.ipynb)\nto know how the training was performed. The teacher model has about 212 Million parameters\nwhich is about **40x more** than the student.\n"},{"type":"Expr","children":[209]},{"type":"Constant","value":"shell\nwget -q https://github.com/sayakpaul/deit-tf/releases/download/v0.1.0/bit_teacher_flowers.zip\nunzip -q bit_teacher_flowers.zip\n"},{"type":"Assign","children":[211,212]},{"type":"Name","value":"bit_teacher_flowers"},{"type":"Call","children":[213,218,219]},{"type":"AttributeLoad","children":[214,217]},{"type":"AttributeLoad","children":[215,216]},{"type":"Name","value":"keras"},{"type":"attr","value":"layers"},{"type":"attr","value":"TFSMLayer"},{"type":"keyword","value":"filepath"},{"type":"keyword","value":"call_endpoint"},{"type":"Expr","children":[221]},{"type":"Constant","value":"\n## Training through distillation\n"},{"type":"Assign","children":[223,224]},{"type":"Name","value":"deit_tiny"},{"type":"Call","children":[225]},{"type":"Name","value":"ViTDistilled"},{"type":"Assign","children":[227,228]},{"type":"Name","value":"deit_distiller"},{"type":"Call","children":[229,230,231]},{"type":"Name","value":"DeiT"},{"type":"keyword","value":"student"},{"type":"keyword","value":"teacher"},{"type":"Assign","children":[233,234]},{"type":"Name","value":"lr_scaled"},{"type":"BinOpMult","children":[235,238]},{"type":"BinOpDiv","children":[236,237]},{"type":"Name","value":"BASE_LR"},{"type":"Constant","value":"512"},{"type":"Name","value":"BATCH_SIZE"},{"type":"Expr","children":[240]},{"type":"Call","children":[241,244,245,246]},{"type":"AttributeLoad","children":[242,243]},{"type":"Name","value":"deit_distiller"},{"type":"attr","value":"compile"},{"type":"keyword","value":"optimizer"},{"type":"keyword","value":"student_loss_fn"},{"type":"keyword","value":"distillation_loss_fn"},{"type":"Assign","children":[248,249]},{"type":"Name","value":"_"},{"type":"Call","children":[250,253,254,255]},{"type":"AttributeLoad","children":[251,252]},{"type":"Name","value":"deit_distiller"},{"type":"attr","value":"fit"},{"type":"Name","value":"train_dataset"},{"type":"keyword","value":"validation_data"},{"type":"keyword","value":"epochs"},{"type":"Expr","children":[257]},{"type":"Constant","value":"\nIf we had trained the same model (the `ViTClassifier`) from scratch with the exact same\nhyperparameters, the model would have scored about 59% accuracy. You can adapt the following code\nto reproduce this result:\n\n```\nvit_tiny = ViTClassifier()\n\ninputs = keras.Input((RESOLUTION, RESOLUTION, 3))\nx = keras.layers.Rescaling(scale=1./255)(inputs)\noutputs = deit_tiny(x)\nmodel = keras.Model(inputs, outputs)\n\nmodel.compile(...)\nmodel.fit(...)\n```\n"},{"type":"Expr","children":[259]},{"type":"Constant","value":"\n## Notes\n\n* Through the use of distillation, we're effectively transferring the inductive biases of\na CNN-based teacher model.\n* Interestingly enough, this distillation strategy works better with a CNN as the teacher\nmodel rather than a Transformer as shown in the paper.\n* The use of regularization to train DeiT models is very important.\n* ViT models are initialized with a combination of different initializers including\ntruncated normal, random normal, Glorot uniform, etc. If you're looking for\nend-to-end reproduction of the original results, don't forget to initialize the ViTs well.\n* If you want to explore the pre-trained DeiT models in TensorFlow and Keras with code\nfor fine-tuning, [check out these models on TF-Hub](https://tfhub.dev/sayakpaul/collections/deit/1).\n\n## Acknowledgements\n\n* Ross Wightman for keeping\n[`timm`](https://github.com/rwightman/pytorch-image-models)\nupdated with readable implementations. I referred to the implementations of ViT and DeiT\na lot during implementing them in TensorFlow.\n* [Aritra Roy Gosthipaty](https://github.com/ariG23498)\nwho implemented some portions of the `ViTClassifier` in another project.\n* [Google Developers Experts](https://developers.google.com/programs/experts/)\nprogram for supporting me with GCP credits which were used to run experiments for this\nexample.\n"}]
[{"type":"Module","children":[1,2,4,6,7,8,9,10,13,15,18,19,20,21,22,23,24,25,27,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,56,59,62,65,71,77,78]},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[3]},{"type":"alias","value":"copy"},{"type":"Import","children":[5]},{"type":"alias","value":"logging"},{"type":"ImportFrom","value":"collections"},{"type":"ImportFrom","value":"pathlib"},{"type":"ImportFrom","value":"rasa.exceptions"},{"type":"ImportFrom","value":"rasa.nlu.featurizers.featurizer"},{"type":"Import","children":[11]},{"type":"alias","value":"numpy","children":[12]},{"type":"identifier","value":"np"},{"type":"Import","children":[14]},{"type":"alias","value":"scipy.sparse"},{"type":"Import","children":[16]},{"type":"alias","value":"tensorflow","children":[17]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"typing"},{"type":"ImportFrom","value":"rasa.engine.graph"},{"type":"ImportFrom","value":"rasa.engine.recipes.default_recipe"},{"type":"ImportFrom","value":"rasa.engine.storage.resource"},{"type":"ImportFrom","value":"rasa.engine.storage.storage"},{"type":"ImportFrom","value":"rasa.nlu.extractors.extractor"},{"type":"ImportFrom","value":"rasa.nlu.classifiers.classifier"},{"type":"Import","children":[26]},{"type":"alias","value":"rasa.shared.utils.io"},{"type":"Import","children":[28]},{"type":"alias","value":"rasa.utils.io","children":[29]},{"type":"identifier","value":"io_utils"},{"type":"Import","children":[31]},{"type":"alias","value":"rasa.nlu.utils.bilou_utils","children":[32]},{"type":"identifier","value":"bilou_utils"},{"type":"ImportFrom","value":"rasa.shared.constants"},{"type":"ImportFrom","value":"rasa.nlu.extractors.extractor"},{"type":"ImportFrom","value":"rasa.nlu.classifiers"},{"type":"ImportFrom","value":"rasa.utils"},{"type":"ImportFrom","value":"rasa.utils.tensorflow"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.models"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.model_data"},{"type":"ImportFrom","value":"rasa.nlu.constants"},{"type":"ImportFrom","value":"rasa.shared.nlu.constants"},{"type":"ImportFrom","value":"rasa.shared.exceptions"},{"type":"ImportFrom","value":"rasa.shared.nlu.training_data.training_data"},{"type":"ImportFrom","value":"rasa.shared.nlu.training_data.message"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.constants"},{"type":"Assign","children":[47,48]},{"type":"Name","value":"logger"},{"type":"Call","children":[49,52]},{"type":"AttributeLoad","children":[50,51]},{"type":"Name","value":"logging"},{"type":"attr","value":"getLogger"},{"type":"Name","value":"__name__"},{"type":"Assign","children":[54,55]},{"type":"Name","value":"SPARSE"},{"type":"Constant","value":"sparse"},{"type":"Assign","children":[57,58]},{"type":"Name","value":"DENSE"},{"type":"Constant","value":"dense"},{"type":"Assign","children":[60,61]},{"type":"Name","value":"LABEL_KEY"},{"type":"Name","value":"LABEL"},{"type":"Assign","children":[63,64]},{"type":"Name","value":"LABEL_SUB_KEY"},{"type":"Name","value":"IDS"},{"type":"Assign","children":[66,67]},{"type":"Name","value":"POSSIBLE_TAGS"},{"type":"ListLoad","children":[68,69,70]},{"type":"Name","value":"ENTITY_ATTRIBUTE_TYPE"},{"type":"Name","value":"ENTITY_ATTRIBUTE_ROLE"},{"type":"Name","value":"ENTITY_ATTRIBUTE_GROUP"},{"type":"Assign","children":[72,73]},{"type":"Name","value":"DIETClassifierT"},{"type":"Call","children":[74,75,76]},{"type":"Name","value":"TypeVar"},{"type":"Constant","value":"DIETClassifierT"},{"type":"keyword","value":"bound"},{"type":"ClassDef","value":"DIETClassifier"},{"type":"ClassDef","value":"DIET"}]
[{"type":"Module","children":[1,3,5,7,9,10,11,12,13,14,15,16,17,18,21,22,25,26,27,36,45,54,63,72,81,90,99,108,178,179,180,181,182,183,184,185]},{"type":"Expr","children":[2]},{"type":"Constant","value":"JAX efficiently trains a differentially private conv net on MNIST.\n\nThis script contains a JAX implementation of Differentially Private Stochastic\nGradient Descent (https://arxiv.org/abs/1607.00133). DPSGD requires clipping\nthe per-example parameter gradients, which is non-trivial to implement\nefficiently for convolutional neural networks.  The JAX XLA compiler shines in\nthis setting by optimizing the minibatch-vectorized computation for\nconvolutional architectures. Train time takes a few seconds per epoch on a\ncommodity GPU.\n\nThis code depends on the `dp-accounting` package\n  Install instructions:\n    $ pip install dp-accounting\n\nThe results match those in the reference TensorFlow baseline implementation:\n  https://github.com/tensorflow/privacy/tree/master/tutorials\n\nExample invocations:\n  # this non-private baseline should get ~99% acc\n  python -m examples.differentially_private_sgd     --dpsgd=False     --learning_rate=.1     --epochs=20 \n   this private baseline should get ~95% acc\n  python -m examples.differentially_private_sgd    --dpsgd=True    --noise_multiplier=1.3    --l2_norm_clip=1.5    --epochs=15    --learning_rate=.25 \n  # this private baseline should get ~96.6% acc\n  python -m examples.differentially_private_sgd    --dpsgd=True    --noise_multiplier=1.1    --l2_norm_clip=1.0    --epochs=60    --learning_rate=.15 \n  # this private baseline should get ~97% acc\n  python -m examples.differentially_private_sgd    --dpsgd=True    --noise_multiplier=0.7    --l2_norm_clip=1.5    --epochs=45    --learning_rate=.25 "},{"type":"Import","children":[4]},{"type":"alias","value":"itertools"},{"type":"Import","children":[6]},{"type":"alias","value":"time"},{"type":"Import","children":[8]},{"type":"alias","value":"warnings"},{"type":"ImportFrom","value":"absl"},{"type":"ImportFrom","value":"absl"},{"type":"ImportFrom","value":"jax"},{"type":"ImportFrom","value":"jax"},{"type":"ImportFrom","value":"jax"},{"type":"ImportFrom","value":"jax"},{"type":"ImportFrom","value":"jax.example_libraries"},{"type":"ImportFrom","value":"jax.example_libraries"},{"type":"ImportFrom","value":"jax.tree_util"},{"type":"Import","children":[19]},{"type":"alias","value":"jax.numpy","children":[20]},{"type":"identifier","value":"jnp"},{"type":"ImportFrom","value":"examples"},{"type":"Import","children":[23]},{"type":"alias","value":"numpy.random","children":[24]},{"type":"identifier","value":"npr"},{"type":"ImportFrom","value":"dp_accounting"},{"type":"ImportFrom","value":"dp_accounting"},{"type":"Assign","children":[28,29]},{"type":"Name","value":"_DPSGD"},{"type":"Call","children":[30,33,34,35]},{"type":"AttributeLoad","children":[31,32]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_boolean"},{"type":"Constant","value":"dpsgd"},{"type":"Constant","value":"True"},{"type":"Constant","value":"If True, train with DP-SGD. If False, train with vanilla SGD."},{"type":"Assign","children":[37,38]},{"type":"Name","value":"_LEARNING_RATE"},{"type":"Call","children":[39,42,43,44]},{"type":"AttributeLoad","children":[40,41]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_float"},{"type":"Constant","value":"learning_rate"},{"type":"Constant","value":"0.15"},{"type":"Constant","value":"Learning rate for training"},{"type":"Assign","children":[46,47]},{"type":"Name","value":"_NOISE_MULTIPLIER"},{"type":"Call","children":[48,51,52,53]},{"type":"AttributeLoad","children":[49,50]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_float"},{"type":"Constant","value":"noise_multiplier"},{"type":"Constant","value":"1.1"},{"type":"Constant","value":"Ratio of the standard deviation to the clipping norm"},{"type":"Assign","children":[55,56]},{"type":"Name","value":"_L2_NORM_CLIP"},{"type":"Call","children":[57,60,61,62]},{"type":"AttributeLoad","children":[58,59]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_float"},{"type":"Constant","value":"l2_norm_clip"},{"type":"Constant","value":"1.0"},{"type":"Constant","value":"Clipping norm"},{"type":"Assign","children":[64,65]},{"type":"Name","value":"_BATCH_SIZE"},{"type":"Call","children":[66,69,70,71]},{"type":"AttributeLoad","children":[67,68]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"batch_size"},{"type":"Constant","value":"256"},{"type":"Constant","value":"Batch size"},{"type":"Assign","children":[73,74]},{"type":"Name","value":"_EPOCHS"},{"type":"Call","children":[75,78,79,80]},{"type":"AttributeLoad","children":[76,77]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"epochs"},{"type":"Constant","value":"60"},{"type":"Constant","value":"Number of epochs"},{"type":"Assign","children":[82,83]},{"type":"Name","value":"_SEED"},{"type":"Call","children":[84,87,88,89]},{"type":"AttributeLoad","children":[85,86]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"seed"},{"type":"Constant","value":"0"},{"type":"Constant","value":"Seed for jax PRNG"},{"type":"Assign","children":[91,92]},{"type":"Name","value":"_MICROBATCHES"},{"type":"Call","children":[93,96,97,98]},{"type":"AttributeLoad","children":[94,95]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"microbatches"},{"type":"Constant","value":"None"},{"type":"Constant","value":"Number of microbatches (must evenly divide batch_size)"},{"type":"Assign","children":[100,101]},{"type":"Name","value":"_MODEL_DIR"},{"type":"Call","children":[102,105,106,107]},{"type":"AttributeLoad","children":[103,104]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"model_dir"},{"type":"Constant","value":"None"},{"type":"Constant","value":"Model directory"},{"type":"Assign","children":[109,112]},{"type":"TupleStore","children":[110,111]},{"type":"Name","value":"init_random_params"},{"type":"Name","value":"predict"},{"type":"Call","children":[113,116,126,129,139,149,152,162,165,170,173]},{"type":"AttributeLoad","children":[114,115]},{"type":"Name","value":"stax"},{"type":"attr","value":"serial"},{"type":"Call","children":[117,120,121,124,125]},{"type":"AttributeLoad","children":[118,119]},{"type":"Name","value":"stax"},{"type":"attr","value":"Conv"},{"type":"Constant","value":"16"},{"type":"TupleLoad","children":[122,123]},{"type":"Constant","value":"8"},{"type":"Constant","value":"8"},{"type":"keyword","value":"padding"},{"type":"keyword","value":"strides"},{"type":"AttributeLoad","children":[127,128]},{"type":"Name","value":"stax"},{"type":"attr","value":"Relu"},{"type":"Call","children":[130,133,136]},{"type":"AttributeLoad","children":[131,132]},{"type":"Name","value":"stax"},{"type":"attr","value":"MaxPool"},{"type":"TupleLoad","children":[134,135]},{"type":"Constant","value":"2"},{"type":"Constant","value":"2"},{"type":"TupleLoad","children":[137,138]},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Call","children":[140,143,144,147,148]},{"type":"AttributeLoad","children":[141,142]},{"type":"Name","value":"stax"},{"type":"attr","value":"Conv"},{"type":"Constant","value":"32"},{"type":"TupleLoad","children":[145,146]},{"type":"Constant","value":"4"},{"type":"Constant","value":"4"},{"type":"keyword","value":"padding"},{"type":"keyword","value":"strides"},{"type":"AttributeLoad","children":[150,151]},{"type":"Name","value":"stax"},{"type":"attr","value":"Relu"},{"type":"Call","children":[153,156,159]},{"type":"AttributeLoad","children":[154,155]},{"type":"Name","value":"stax"},{"type":"attr","value":"MaxPool"},{"type":"TupleLoad","children":[157,158]},{"type":"Constant","value":"2"},{"type":"Constant","value":"2"},{"type":"TupleLoad","children":[160,161]},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"AttributeLoad","children":[163,164]},{"type":"Name","value":"stax"},{"type":"attr","value":"Flatten"},{"type":"Call","children":[166,169]},{"type":"AttributeLoad","children":[167,168]},{"type":"Name","value":"stax"},{"type":"attr","value":"Dense"},{"type":"Constant","value":"32"},{"type":"AttributeLoad","children":[171,172]},{"type":"Name","value":"stax"},{"type":"attr","value":"Relu"},{"type":"Call","children":[174,177]},{"type":"AttributeLoad","children":[175,176]},{"type":"Name","value":"stax"},{"type":"attr","value":"Dense"},{"type":"Constant","value":"10"},{"type":"FunctionDef","value":"loss"},{"type":"FunctionDef","value":"accuracy"},{"type":"FunctionDef","value":"clipped_grad"},{"type":"FunctionDef","value":"private_grad"},{"type":"FunctionDef","value":"shape_as_image"},{"type":"FunctionDef","value":"compute_epsilon"},{"type":"FunctionDef","value":"main"},{"type":"If","children":[186,189]},{"type":"CompareEq","children":[187,188]},{"type":"Name","value":"__name__"},{"type":"Constant","value":"__main__"},{"type":"body","children":[190]},{"type":"Expr","children":[191]},{"type":"Call","children":[192,195]},{"type":"AttributeLoad","children":[193,194]},{"type":"Name","value":"app"},{"type":"attr","value":"run"},{"type":"Name","value":"main"}]
[{"type":"Module","children":[1,3,5,7,9,16,19,21,23,24,25,33,43,75,77,80,96,97,98,102,106,108]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nTitle: Multi-GPU distributed training with TensorFlow\nAuthor: [fchollet](https://twitter.com/fchollet)\nDate created: 2020/04/28\nLast modified: 2023/06/29\nDescription: Guide to multi-GPU training for Keras models with TensorFlow.\nAccelerator: GPU\n"},{"type":"Expr","children":[4]},{"type":"Constant","value":"\n## Introduction\n\nThere are generally two ways to distribute computation across multiple devices:\n\n**Data parallelism**, where a single model gets replicated on multiple devices or\nmultiple machines. Each of them processes different batches of data, then they merge\ntheir results. There exist many variants of this setup, that differ in how the different\nmodel replicas merge results, in whether they stay in sync at every batch or whether they\nare more loosely coupled, etc.\n\n**Model parallelism**, where different parts of a single model run on different devices,\nprocessing a single batch of data together. This works best with models that have a\nnaturally-parallel architecture, such as models that feature multiple branches.\n\nThis guide focuses on data parallelism, in particular **synchronous data parallelism**,\nwhere the different replicas of the model stay in sync after each batch they process.\nSynchronicity keeps the model convergence behavior identical to what you would see for\nsingle-device training.\n\nSpecifically, this guide teaches you how to use the `tf.distribute` API to train Keras\nmodels on multiple GPUs, with minimal changes to your code,\non multiple GPUs (typically 2 to 16) installed on a single machine (single host,\nmulti-device training). This is the most common setup for researchers and small-scale\nindustry workflows.\n"},{"type":"Expr","children":[6]},{"type":"Constant","value":"\n## Setup\n"},{"type":"Import","children":[8]},{"type":"alias","value":"os"},{"type":"Assign","children":[10,15]},{"type":"SubscriptStore","children":[11,14]},{"type":"AttributeLoad","children":[12,13]},{"type":"Name","value":"os"},{"type":"attr","value":"environ"},{"type":"Constant","value":"KERAS_BACKEND"},{"type":"Constant","value":"tensorflow"},{"type":"Import","children":[17]},{"type":"alias","value":"tensorflow","children":[18]},{"type":"identifier","value":"tf"},{"type":"Import","children":[20]},{"type":"alias","value":"keras"},{"type":"Expr","children":[22]},{"type":"Constant","value":"\n## Single-host, multi-device synchronous training\n\nIn this setup, you have one machine with several GPUs on it (typically 2 to 16). Each\ndevice will run a copy of your model (called a **replica**). For simplicity, in what\nfollows, we'll assume we're dealing with 8 GPUs, at no loss of generality.\n\n**How it works**\n\nAt each step of training:\n\n- The current batch of data (called **global batch**) is split into 8 different\nsub-batches (called **local batches**). For instance, if the global batch has 512\nsamples, each of the 8 local batches will have 64 samples.\n- Each of the 8 replicas independently processes a local batch: they run a forward pass,\nthen a backward pass, outputting the gradient of the weights with respect to the loss of\nthe model on the local batch.\n- The weight updates originating from local gradients are efficiently merged across the 8\nreplicas. Because this is done at the end of every step, the replicas always stay in\nsync.\n\nIn practice, the process of synchronously updating the weights of the model replicas is\nhandled at the level of each individual weight variable. This is done through a **mirrored\nvariable** object.\n\n**How to use it**\n\nTo do single-host, multi-device synchronous training with a Keras model, you would use\nthe [`tf.distribute.MirroredStrategy` API](\n    https://www.tensorflow.org/api_docs/python/tf/distribute/MirroredStrategy).\nHere's how it works:\n\n- Instantiate a `MirroredStrategy`, optionally configuring which specific devices you\nwant to use (by default the strategy will use all GPUs available).\n- Use the strategy object to open a scope, and within this scope, create all the Keras\nobjects you need that contain variables. Typically, that means **creating & compiling the\nmodel** inside the distribution scope. In some cases, the first call to `fit()` may also\ncreate variables, so it's a good idea to put your `fit()` call in the scope as well.\n- Train the model via `fit()` as usual.\n\nImportantly, we recommend that you use `tf.data.Dataset` objects to load data\nin a multi-device or distributed workflow.\n\nSchematically, it looks like this:\n\n```python\n# Create a MirroredStrategy.\nstrategy = tf.distribute.MirroredStrategy()\nprint('Number of devices: {}'.format(strategy.num_replicas_in_sync))\n\n# Open a strategy scope.\nwith strategy.scope():\n    # Everything that creates variables should be under the strategy scope.\n    # In general this is only model construction & `compile()`.\n    model = Model(...)\n    model.compile(...)\n\n    # Train the model on all available devices.\n    model.fit(train_dataset, validation_data=val_dataset, ...)\n\n    # Test the model on all available devices.\n    model.evaluate(test_dataset)\n```\n\nHere's a simple end-to-end runnable example:\n"},{"type":"FunctionDef","value":"get_compiled_model"},{"type":"FunctionDef","value":"get_dataset"},{"type":"Assign","children":[26,27]},{"type":"Name","value":"strategy"},{"type":"Call","children":[28]},{"type":"AttributeLoad","children":[29,32]},{"type":"AttributeLoad","children":[30,31]},{"type":"Name","value":"tf"},{"type":"attr","value":"distribute"},{"type":"attr","value":"MirroredStrategy"},{"type":"Expr","children":[34]},{"type":"Call","children":[35,36]},{"type":"Name","value":"print"},{"type":"Call","children":[37,40]},{"type":"AttributeLoad","children":[38,39]},{"type":"Constant","value":"Number of devices: {}"},{"type":"attr","value":"format"},{"type":"AttributeLoad","children":[41,42]},{"type":"Name","value":"strategy"},{"type":"attr","value":"num_replicas_in_sync"},{"type":"With","children":[44,49]},{"type":"withitem","children":[45]},{"type":"Call","children":[46]},{"type":"AttributeLoad","children":[47,48]},{"type":"Name","value":"strategy"},{"type":"attr","value":"scope"},{"type":"body","children":[50,54,61,69]},{"type":"Assign","children":[51,52]},{"type":"Name","value":"model"},{"type":"Call","children":[53]},{"type":"Name","value":"get_compiled_model"},{"type":"Assign","children":[55,59]},{"type":"TupleStore","children":[56,57,58]},{"type":"Name","value":"train_dataset"},{"type":"Name","value":"val_dataset"},{"type":"Name","value":"test_dataset"},{"type":"Call","children":[60]},{"type":"Name","value":"get_dataset"},{"type":"Expr","children":[62]},{"type":"Call","children":[63,66,67,68]},{"type":"AttributeLoad","children":[64,65]},{"type":"Name","value":"model"},{"type":"attr","value":"fit"},{"type":"Name","value":"train_dataset"},{"type":"keyword","value":"epochs"},{"type":"keyword","value":"validation_data"},{"type":"Expr","children":[70]},{"type":"Call","children":[71,74]},{"type":"AttributeLoad","children":[72,73]},{"type":"Name","value":"model"},{"type":"attr","value":"evaluate"},{"type":"Name","value":"test_dataset"},{"type":"Expr","children":[76]},{"type":"Constant","value":"\n## Using callbacks to ensure fault tolerance\n\nWhen using distributed training, you should always make sure you have a strategy to\nrecover from failure (fault tolerance). The simplest way to handle this is to pass\n`ModelCheckpoint` callback to `fit()`, to save your model\nat regular intervals (e.g. every 100 batches or every epoch). You can then restart\ntraining from your saved model.\n\nHere's a simple example:\n"},{"type":"Assign","children":[78,79]},{"type":"Name","value":"checkpoint_dir"},{"type":"Constant","value":"./ckpt"},{"type":"If","children":[81,89]},{"type":"UnaryOpNot","children":[82]},{"type":"Call","children":[83,88]},{"type":"AttributeLoad","children":[84,87]},{"type":"AttributeLoad","children":[85,86]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"exists"},{"type":"Name","value":"checkpoint_dir"},{"type":"body","children":[90]},{"type":"Expr","children":[91]},{"type":"Call","children":[92,95]},{"type":"AttributeLoad","children":[93,94]},{"type":"Name","value":"os"},{"type":"attr","value":"makedirs"},{"type":"Name","value":"checkpoint_dir"},{"type":"FunctionDef","value":"make_or_restore_model"},{"type":"FunctionDef","value":"run_training"},{"type":"Expr","children":[99]},{"type":"Call","children":[100,101]},{"type":"Name","value":"run_training"},{"type":"keyword","value":"epochs"},{"type":"Expr","children":[103]},{"type":"Call","children":[104,105]},{"type":"Name","value":"run_training"},{"type":"keyword","value":"epochs"},{"type":"Expr","children":[107]},{"type":"Constant","value":"\n## `tf.data` performance tips\n\nWhen doing distributed training, the efficiency with which you load data can often become\ncritical. Here are a few tips to make sure your `tf.data` pipelines\nrun as fast as possible.\n\n**Note about dataset batching**\n\nWhen creating your dataset, make sure it is batched with the global batch size.\nFor instance, if each of your 8 GPUs is capable of running a batch of 64 samples, you\ncall use a global batch size of 512.\n\n**Calling `dataset.cache()`**\n\nIf you call `.cache()` on a dataset, its data will be cached after running through the\nfirst iteration over the data. Every subsequent iteration will use the cached data. The\ncache can be in memory (default) or to a local file you specify.\n\nThis can improve performance when:\n\n- Your data is not expected to change from iteration to iteration\n- You are reading data from a remote distributed filesystem\n- You are reading data from local disk, but your data would fit in memory and your\nworkflow is significantly IO-bound (e.g. reading & decoding image files).\n\n**Calling `dataset.prefetch(buffer_size)`**\n\nYou should almost always call `.prefetch(buffer_size)` after creating a dataset. It means\nyour data pipeline will run asynchronously from your model,\nwith new samples being preprocessed and stored in a buffer while the current batch\nsamples are used to train the model. The next batch will be prefetched in GPU memory by\nthe time the current batch is over.\n"},{"type":"Expr","children":[109]},{"type":"Constant","value":"\nThat's it!\n"}]
[{"type":"Module","children":[1,2,5,8,9,10,11]},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[3]},{"type":"alias","value":"tensorflow.compat.v1","children":[4]},{"type":"identifier","value":"tf"},{"type":"Import","children":[6]},{"type":"alias","value":"numpy","children":[7]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"helpers.trainer"},{"type":"ImportFrom","value":"helpers.evaluator"},{"type":"ImportFrom","value":"utils"},{"type":"ClassDef","value":"DNN"}]
[{"type":"Module","children":[1,3,4,5,128,143,150]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Specifies sources of doc strings for API modules."},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ClassDef","value":"DocSource"},{"type":"Assign","children":[6,7]},{"type":"Name","value":"_TENSORFLOW_DOC_SOURCES"},{"type":"Dict","children":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,44,47,50,53,56,59,62,65,68,71,74,77,80,83,86,89,92,95,98,101,104,107,110,113,116,119,122,125]},{"type":"Constant","value":"app"},{"type":"Constant","value":"bitwise"},{"type":"Constant","value":"compat"},{"type":"Constant","value":"distribute"},{"type":"Constant","value":"distributions"},{"type":"Constant","value":"errors"},{"type":"Constant","value":"experimental.numpy"},{"type":"Constant","value":"gfile"},{"type":"Constant","value":"graph_util"},{"type":"Constant","value":"image"},{"type":"Constant","value":"linalg"},{"type":"Constant","value":"logging"},{"type":"Constant","value":"losses"},{"type":"Constant","value":"manip"},{"type":"Constant","value":"math"},{"type":"Constant","value":"metrics"},{"type":"Constant","value":"nest"},{"type":"Constant","value":"nn"},{"type":"Constant","value":"nn.rnn_cell"},{"type":"Constant","value":"python_io"},{"type":"Constant","value":"ragged"},{"type":"Constant","value":"resource_loader"},{"type":"Constant","value":"sets"},{"type":"Constant","value":"signal"},{"type":"Constant","value":"sparse"},{"type":"Constant","value":"strings"},{"type":"Constant","value":"summary"},{"type":"Constant","value":"sysconfig"},{"type":"Constant","value":"test"},{"type":"Constant","value":"train"},{"type":"Call","children":[39,40]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[42,43]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[45,46]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[48,49]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[51,52]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[54,55]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[57,58]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[60,61]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[63,64]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[66,67]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[69,70]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[72,73]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[75,76]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[78,79]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[81,82]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[84,85]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[87,88]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[90,91]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[93,94]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[96,97]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[99,100]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[102,103]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[105,106]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[108,109]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[111,112]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[114,115]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[117,118]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[120,121]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[123,124]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Call","children":[126,127]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring"},{"type":"Assign","children":[129,130]},{"type":"Name","value":"_ESTIMATOR_DOC_SOURCES"},{"type":"Dict","children":[131,132,133,134,137,140]},{"type":"Constant","value":"estimator"},{"type":"Constant","value":"estimator.export"},{"type":"Constant","value":"estimator.inputs"},{"type":"Call","children":[135,136]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[138,139]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Call","children":[141,142]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"Assign","children":[144,145]},{"type":"Name","value":"_KERAS_DOC_SOURCES"},{"type":"Dict","children":[146,147]},{"type":"Constant","value":"keras.optimizers.experimental"},{"type":"Call","children":[148,149]},{"type":"Name","value":"DocSource"},{"type":"keyword","value":"docstring_module_name"},{"type":"FunctionDef","value":"get_doc_sources"}]
[{"type":"Module","children":[1,2,3,6,8,11,14,15,16,17,18,19,20,21,22,23]},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"builtins"},{"type":"Import","children":[4]},{"type":"alias","value":"numpy","children":[5]},{"type":"identifier","value":"np"},{"type":"Import","children":[7]},{"type":"alias","value":"theano"},{"type":"Import","children":[9]},{"type":"alias","value":"theano.tensor","children":[10]},{"type":"identifier","value":"T"},{"type":"Import","children":[12]},{"type":"alias","value":"matplotlib.pyplot","children":[13]},{"type":"identifier","value":"plt"},{"type":"ImportFrom","value":"theano.tensor.shared_randomstreams"},{"type":"ImportFrom","value":"util"},{"type":"ImportFrom","value":"sklearn.utils"},{"type":"FunctionDef","value":"momentum_updates"},{"type":"ClassDef","value":"HiddenLayer"},{"type":"ClassDef","value":"ANN"},{"type":"FunctionDef","value":"error_rate"},{"type":"FunctionDef","value":"relu"},{"type":"FunctionDef","value":"main"},{"type":"If","children":[24,27]},{"type":"CompareEq","children":[25,26]},{"type":"Name","value":"__name__"},{"type":"Constant","value":"__main__"},{"type":"body","children":[28]},{"type":"Expr","children":[29]},{"type":"Call","children":[30]},{"type":"Name","value":"main"}]
[{"type":"Module","children":[1,3,4,5,7,10,13,14,15,16,17,18,19,20,21,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172]},{"type":"Expr","children":[2]},{"type":"Constant","value":" The EfficientNet Family in PyTorch\n\nAn implementation of EfficienNet that covers variety of related models with efficient architectures:\n\n* EfficientNet-V2\n  - `EfficientNetV2: Smaller Models and Faster Training` - https://arxiv.org/abs/2104.00298\n\n* EfficientNet (B0-B8, L2 + Tensorflow pretrained AutoAug/RandAug/AdvProp/NoisyStudent weight ports)\n  - EfficientNet: Rethinking Model Scaling for CNNs - https://arxiv.org/abs/1905.11946\n  - CondConv: Conditionally Parameterized Convolutions for Efficient Inference - https://arxiv.org/abs/1904.04971\n  - Adversarial Examples Improve Image Recognition - https://arxiv.org/abs/1911.09665\n  - Self-training with Noisy Student improves ImageNet classification - https://arxiv.org/abs/1911.04252\n\n* MixNet (Small, Medium, and Large)\n  - MixConv: Mixed Depthwise Convolutional Kernels - https://arxiv.org/abs/1907.09595\n\n* MNasNet B1, A1 (SE), Small\n  - MnasNet: Platform-Aware Neural Architecture Search for Mobile - https://arxiv.org/abs/1807.11626\n\n* FBNet-C\n  - FBNet: Hardware-Aware Efficient ConvNet Design via Differentiable NAS - https://arxiv.org/abs/1812.03443\n\n* Single-Path NAS Pixel1\n  - Single-Path NAS: Designing Hardware-Efficient ConvNets - https://arxiv.org/abs/1904.02877\n\n* TinyNet\n    - Model Rubik's Cube: Twisting Resolution, Depth and Width for TinyNets - https://arxiv.org/abs/2010.14819\n    - Definitions & weights borrowed from https://github.com/huawei-noah/CV-Backbones/tree/master/tinynet_pytorch\n\n* And likely more...\n\nThe majority of the above models (EfficientNet*, MixNet, MnasNet) and original weights were made available\nby Mingxing Tan, Quoc Le, and other members of their Google Brain team. Thanks for consistently releasing\nthe models and weights open source!\n\nHacked together by / Copyright 2019, Ross Wightman\n"},{"type":"ImportFrom","value":"functools"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[6]},{"type":"alias","value":"torch"},{"type":"Import","children":[8]},{"type":"alias","value":"torch.nn","children":[9]},{"type":"identifier","value":"nn"},{"type":"Import","children":[11]},{"type":"alias","value":"torch.nn.functional","children":[12]},{"type":"identifier","value":"F"},{"type":"ImportFrom","value":"torch.utils.checkpoint"},{"type":"ImportFrom","value":"timm.data"},{"type":"ImportFrom","value":"timm.layers"},{"type":"ImportFrom","value":"_builder"},{"type":"ImportFrom","value":"_efficientnet_blocks"},{"type":"ImportFrom","value":"_efficientnet_builder"},{"type":"ImportFrom","value":"_features"},{"type":"ImportFrom","value":"_manipulate"},{"type":"ImportFrom","value":"_registry"},{"type":"Assign","children":[23,24]},{"type":"Name","value":"__all__"},{"type":"ListLoad","children":[25,26]},{"type":"Constant","value":"EfficientNet"},{"type":"Constant","value":"EfficientNetFeatures"},{"type":"ClassDef","value":"EfficientNet"},{"type":"ClassDef","value":"EfficientNetFeatures"},{"type":"FunctionDef","value":"_create_effnet"},{"type":"FunctionDef","value":"_gen_mnasnet_a1"},{"type":"FunctionDef","value":"_gen_mnasnet_b1"},{"type":"FunctionDef","value":"_gen_mnasnet_small"},{"type":"FunctionDef","value":"_gen_mobilenet_v2"},{"type":"FunctionDef","value":"_gen_fbnetc"},{"type":"FunctionDef","value":"_gen_spnasnet"},{"type":"FunctionDef","value":"_gen_efficientnet"},{"type":"FunctionDef","value":"_gen_efficientnet_edge"},{"type":"FunctionDef","value":"_gen_efficientnet_condconv"},{"type":"FunctionDef","value":"_gen_efficientnet_lite"},{"type":"FunctionDef","value":"_gen_efficientnetv2_base"},{"type":"FunctionDef","value":"_gen_efficientnetv2_s"},{"type":"FunctionDef","value":"_gen_efficientnetv2_m"},{"type":"FunctionDef","value":"_gen_efficientnetv2_l"},{"type":"FunctionDef","value":"_gen_efficientnetv2_xl"},{"type":"FunctionDef","value":"_gen_mixnet_s"},{"type":"FunctionDef","value":"_gen_mixnet_m"},{"type":"FunctionDef","value":"_gen_tinynet"},{"type":"FunctionDef","value":"_cfg"},{"type":"Assign","children":[50,51]},{"type":"Name","value":"default_cfgs"},{"type":"Call","children":[52,53]},{"type":"Name","value":"generate_default_cfgs"},{"type":"Dict","children":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,193,197,199,201,205,209,211,215,217,222,224,228,232,236,240,245,250,254,260,268,276,284,291,298,304,310,316,322,324,326,328,334,340,344,351,358,362,369,371,373,378,382,387,392,397,402,411,420,429,437,445,453,461,467,473,479,485,490,497,504,511,518,525,532,539,546,553,560,569,578,587,596,605,614,623,632,639,646,653,658,665,672,679,686,693,700,707,712,719,726,733,740,747,754,763,772,778,784,793,800,810,820,830,840,850,861,872,883,893,904,915,926,938,950,962,969,977,985,995,1003,1013,1017,1021,1025,1029,1031,1035,1039,1043,1049,1055,1061,1067]},{"type":"Constant","value":"mnasnet_050.untrained"},{"type":"Constant","value":"mnasnet_075.untrained"},{"type":"Constant","value":"mnasnet_100.rmsp_in1k"},{"type":"Constant","value":"mnasnet_140.untrained"},{"type":"Constant","value":"semnasnet_050.untrained"},{"type":"Constant","value":"semnasnet_075.rmsp_in1k"},{"type":"Constant","value":"semnasnet_100.rmsp_in1k"},{"type":"Constant","value":"semnasnet_140.untrained"},{"type":"Constant","value":"mnasnet_small.lamb_in1k"},{"type":"Constant","value":"mobilenetv2_035.untrained"},{"type":"Constant","value":"mobilenetv2_050.lamb_in1k"},{"type":"Constant","value":"mobilenetv2_075.untrained"},{"type":"Constant","value":"mobilenetv2_100.ra_in1k"},{"type":"Constant","value":"mobilenetv2_110d.ra_in1k"},{"type":"Constant","value":"mobilenetv2_120d.ra_in1k"},{"type":"Constant","value":"mobilenetv2_140.ra_in1k"},{"type":"Constant","value":"fbnetc_100.rmsp_in1k"},{"type":"Constant","value":"spnasnet_100.rmsp_in1k"},{"type":"Constant","value":"efficientnet_b0.ra_in1k"},{"type":"Constant","value":"efficientnet_b1.ft_in1k"},{"type":"Constant","value":"efficientnet_b2.ra_in1k"},{"type":"Constant","value":"efficientnet_b3.ra2_in1k"},{"type":"Constant","value":"efficientnet_b4.ra2_in1k"},{"type":"Constant","value":"efficientnet_b5.sw_in12k_ft_in1k"},{"type":"Constant","value":"efficientnet_b5.sw_in12k"},{"type":"Constant","value":"efficientnet_b6.untrained"},{"type":"Constant","value":"efficientnet_b7.untrained"},{"type":"Constant","value":"efficientnet_b8.untrained"},{"type":"Constant","value":"efficientnet_l2.untrained"},{"type":"Constant","value":"efficientnet_b0_gn.untrained"},{"type":"Constant","value":"efficientnet_b0_g8_gn.untrained"},{"type":"Constant","value":"efficientnet_b0_g16_evos.untrained"},{"type":"Constant","value":"efficientnet_b3_gn.untrained"},{"type":"Constant","value":"efficientnet_b3_g8_gn.untrained"},{"type":"Constant","value":"efficientnet_es.ra_in1k"},{"type":"Constant","value":"efficientnet_em.ra2_in1k"},{"type":"Constant","value":"efficientnet_el.ra_in1k"},{"type":"Constant","value":"efficientnet_es_pruned.in1k"},{"type":"Constant","value":"efficientnet_el_pruned.in1k"},{"type":"Constant","value":"efficientnet_cc_b0_4e.untrained"},{"type":"Constant","value":"efficientnet_cc_b0_8e.untrained"},{"type":"Constant","value":"efficientnet_cc_b1_8e.untrained"},{"type":"Constant","value":"efficientnet_lite0.ra_in1k"},{"type":"Constant","value":"efficientnet_lite1.untrained"},{"type":"Constant","value":"efficientnet_lite2.untrained"},{"type":"Constant","value":"efficientnet_lite3.untrained"},{"type":"Constant","value":"efficientnet_lite4.untrained"},{"type":"Constant","value":"efficientnet_b1_pruned.in1k"},{"type":"Constant","value":"efficientnet_b2_pruned.in1k"},{"type":"Constant","value":"efficientnet_b3_pruned.in1k"},{"type":"Constant","value":"efficientnetv2_rw_t.ra2_in1k"},{"type":"Constant","value":"gc_efficientnetv2_rw_t.agc_in1k"},{"type":"Constant","value":"efficientnetv2_rw_s.ra2_in1k"},{"type":"Constant","value":"efficientnetv2_rw_m.agc_in1k"},{"type":"Constant","value":"efficientnetv2_s.untrained"},{"type":"Constant","value":"efficientnetv2_m.untrained"},{"type":"Constant","value":"efficientnetv2_l.untrained"},{"type":"Constant","value":"efficientnetv2_xl.untrained"},{"type":"Constant","value":"tf_efficientnet_b0.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b1.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b2.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b3.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b4.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b5.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b6.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b7.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_l2.ns_jft_in1k_475"},{"type":"Constant","value":"tf_efficientnet_l2.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b0.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b1.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b2.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b3.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b4.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b5.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b6.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b7.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b8.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b5.ra_in1k"},{"type":"Constant","value":"tf_efficientnet_b7.ra_in1k"},{"type":"Constant","value":"tf_efficientnet_b8.ra_in1k"},{"type":"Constant","value":"tf_efficientnet_b0.aa_in1k"},{"type":"Constant","value":"tf_efficientnet_b1.aa_in1k"},{"type":"Constant","value":"tf_efficientnet_b2.aa_in1k"},{"type":"Constant","value":"tf_efficientnet_b3.aa_in1k"},{"type":"Constant","value":"tf_efficientnet_b4.aa_in1k"},{"type":"Constant","value":"tf_efficientnet_b5.aa_in1k"},{"type":"Constant","value":"tf_efficientnet_b6.aa_in1k"},{"type":"Constant","value":"tf_efficientnet_b7.aa_in1k"},{"type":"Constant","value":"tf_efficientnet_b0.in1k"},{"type":"Constant","value":"tf_efficientnet_b1.in1k"},{"type":"Constant","value":"tf_efficientnet_b2.in1k"},{"type":"Constant","value":"tf_efficientnet_b3.in1k"},{"type":"Constant","value":"tf_efficientnet_b4.in1k"},{"type":"Constant","value":"tf_efficientnet_b5.in1k"},{"type":"Constant","value":"tf_efficientnet_es.in1k"},{"type":"Constant","value":"tf_efficientnet_em.in1k"},{"type":"Constant","value":"tf_efficientnet_el.in1k"},{"type":"Constant","value":"tf_efficientnet_cc_b0_4e.in1k"},{"type":"Constant","value":"tf_efficientnet_cc_b0_8e.in1k"},{"type":"Constant","value":"tf_efficientnet_cc_b1_8e.in1k"},{"type":"Constant","value":"tf_efficientnet_lite0.in1k"},{"type":"Constant","value":"tf_efficientnet_lite1.in1k"},{"type":"Constant","value":"tf_efficientnet_lite2.in1k"},{"type":"Constant","value":"tf_efficientnet_lite3.in1k"},{"type":"Constant","value":"tf_efficientnet_lite4.in1k"},{"type":"Constant","value":"tf_efficientnetv2_s.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_m.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_l.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_xl.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_s.in1k"},{"type":"Constant","value":"tf_efficientnetv2_m.in1k"},{"type":"Constant","value":"tf_efficientnetv2_l.in1k"},{"type":"Constant","value":"tf_efficientnetv2_s.in21k"},{"type":"Constant","value":"tf_efficientnetv2_m.in21k"},{"type":"Constant","value":"tf_efficientnetv2_l.in21k"},{"type":"Constant","value":"tf_efficientnetv2_xl.in21k"},{"type":"Constant","value":"tf_efficientnetv2_b0.in1k"},{"type":"Constant","value":"tf_efficientnetv2_b1.in1k"},{"type":"Constant","value":"tf_efficientnetv2_b2.in1k"},{"type":"Constant","value":"tf_efficientnetv2_b3.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_b3.in1k"},{"type":"Constant","value":"tf_efficientnetv2_b3.in21k"},{"type":"Constant","value":"mixnet_s.ft_in1k"},{"type":"Constant","value":"mixnet_m.ft_in1k"},{"type":"Constant","value":"mixnet_l.ft_in1k"},{"type":"Constant","value":"mixnet_xl.ra_in1k"},{"type":"Constant","value":"mixnet_xxl.untrained"},{"type":"Constant","value":"tf_mixnet_s.in1k"},{"type":"Constant","value":"tf_mixnet_m.in1k"},{"type":"Constant","value":"tf_mixnet_l.in1k"},{"type":"Constant","value":"tinynet_a.in1k"},{"type":"Constant","value":"tinynet_b.in1k"},{"type":"Constant","value":"tinynet_c.in1k"},{"type":"Constant","value":"tinynet_d.in1k"},{"type":"Constant","value":"tinynet_e.in1k"},{"type":"Call","children":[190]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[192]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[194,195,196]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[198]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[200]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[202,203,204]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[206,207,208]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[210]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[212,213,214]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[216]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[218,219,220,221]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"interpolation"},{"type":"Call","children":[223]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[225,226,227]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[229,230,231]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[233,234,235]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[237,238,239]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[241,242,243,244]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"interpolation"},{"type":"Call","children":[246,247,248,249]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"interpolation"},{"type":"Call","children":[251,252,253]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[255,256,257,258,259]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[261,262,263,264,265,266,267]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[269,270,271,272,273,274,275]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[277,278,279,280,281,282,283]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[285,286,287,288,289,290]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[292,293,294,295,296,297]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"num_classes"},{"type":"Call","children":[299,300,301,302,303]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[305,306,307,308,309]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[311,312,313,314,315]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[317,318,319,320,321]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[323]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[325]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[327]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[329,330,331,332,333]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[335,336,337,338,339]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[341,342,343]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[345,346,347,348,349,350]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[352,353,354,355,356,357]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[359,360,361]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[363,364,365,366,367,368]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[370]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[372]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[374,375,376,377]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[379,380,381]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[383,384,385,386]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[388,389,390,391]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[393,394,395,396]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[398,399,400,401]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[403,404,405,406,407,408,409,410]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"Call","children":[412,413,414,415,416,417,418,419]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"Call","children":[421,422,423,424,425,426,427,428]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"Call","children":[430,431,432,433,434,435,436]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[438,439,440,441,442,443,444]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[446,447,448,449,450,451,452]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[454,455,456,457,458,459,460]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[462,463,464,465,466]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[468,469,470,471,472]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[474,475,476,477,478]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[480,481,482,483,484]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[486,487,488,489]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"Call","children":[491,492,493,494,495,496]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[498,499,500,501,502,503]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[505,506,507,508,509,510]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[512,513,514,515,516,517]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[519,520,521,522,523,524]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[526,527,528,529,530,531]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[533,534,535,536,537,538]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[540,541,542,543,544,545]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[547,548,549,550,551,552]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[554,555,556,557,558,559]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"Call","children":[561,562,563,564,565,566,567,568]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[570,571,572,573,574,575,576,577]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[579,580,581,582,583,584,585,586]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[588,589,590,591,592,593,594,595]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[597,598,599,600,601,602,603,604]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[606,607,608,609,610,611,612,613]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[615,616,617,618,619,620,621,622]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[624,625,626,627,628,629,630,631]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[633,634,635,636,637,638]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[640,641,642,643,644,645]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[647,648,649,650,651,652]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[654,655,656,657]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"Call","children":[659,660,661,662,663,664]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[666,667,668,669,670,671]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[673,674,675,676,677,678]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[680,681,682,683,684,685]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[687,688,689,690,691,692]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[694,695,696,697,698,699]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[701,702,703,704,705,706]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[708,709,710,711]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"Call","children":[713,714,715,716,717,718]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[720,721,722,723,724,725]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[727,728,729,730,731,732]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[734,735,736,737,738,739]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[741,742,743,744,745,746]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[748,749,750,751,752,753]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"Call","children":[755,756,757,758,759,760,761,762]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[764,765,766,767,768,769,770,771]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[773,774,775,776,777]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"Call","children":[779,780,781,782,783]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"Call","children":[785,786,787,788,789,790,791,792]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[794,795,796,797,798,799]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"interpolation"},{"type":"Call","children":[801,802,803,804,805,806,807,808,809]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"interpolation"},{"type":"Call","children":[811,812,813,814,815,816,817,818,819]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"interpolation"},{"type":"Call","children":[821,822,823,824,825,826,827,828,829]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"interpolation"},{"type":"Call","children":[831,832,833,834,835,836,837,838,839]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"interpolation"},{"type":"Call","children":[841,842,843,844,845,846,847,848,849]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[851,852,853,854,855,856,857,858,859,860]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[862,863,864,865,866,867,868,869,870,871]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[873,874,875,876,877,878,879,880,881,882]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[884,885,886,887,888,889,890,891,892]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[894,895,896,897,898,899,900,901,902,903]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[905,906,907,908,909,910,911,912,913,914]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[916,917,918,919,920,921,922,923,924,925]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"num_classes"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[927,928,929,930,931,932,933,934,935,936,937]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"num_classes"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[939,940,941,942,943,944,945,946,947,948,949]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"num_classes"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[951,952,953,954,955,956,957,958,959,960,961]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"num_classes"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[963,964,965,966,967,968]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"Call","children":[970,971,972,973,974,975,976]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[978,979,980,981,982,983,984]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[986,987,988,989,990,991,992,993,994]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"keyword","value":"crop_mode"},{"type":"Call","children":[996,997,998,999,1000,1001,1002]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[1004,1005,1006,1007,1008,1009,1010,1011,1012]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"hf_hub_id"},{"type":"keyword","value":"mean"},{"type":"keyword","value":"std"},{"type":"keyword","value":"num_classes"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"test_input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"crop_pct"},{"type":"Call","children":[1014,1015,1016]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1018,1019,1020]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1022,1023,1024]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1026,1027,1028]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1030]},{"type":"Name","value":"_cfg"},{"type":"Call","children":[1032,1033,1034]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1036,1037,1038]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1040,1041,1042]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1044,1045,1046,1047,1048]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1050,1051,1052,1053,1054]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1056,1057,1058,1059,1060]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1062,1063,1064,1065,1066]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"Call","children":[1068,1069,1070,1071,1072]},{"type":"Name","value":"_cfg"},{"type":"keyword","value":"input_size"},{"type":"keyword","value":"pool_size"},{"type":"keyword","value":"url"},{"type":"keyword","value":"hf_hub_id"},{"type":"FunctionDef","value":"mnasnet_050"},{"type":"FunctionDef","value":"mnasnet_075"},{"type":"FunctionDef","value":"mnasnet_100"},{"type":"FunctionDef","value":"mnasnet_140"},{"type":"FunctionDef","value":"semnasnet_050"},{"type":"FunctionDef","value":"semnasnet_075"},{"type":"FunctionDef","value":"semnasnet_100"},{"type":"FunctionDef","value":"semnasnet_140"},{"type":"FunctionDef","value":"mnasnet_small"},{"type":"FunctionDef","value":"mobilenetv2_035"},{"type":"FunctionDef","value":"mobilenetv2_050"},{"type":"FunctionDef","value":"mobilenetv2_075"},{"type":"FunctionDef","value":"mobilenetv2_100"},{"type":"FunctionDef","value":"mobilenetv2_140"},{"type":"FunctionDef","value":"mobilenetv2_110d"},{"type":"FunctionDef","value":"mobilenetv2_120d"},{"type":"FunctionDef","value":"fbnetc_100"},{"type":"FunctionDef","value":"spnasnet_100"},{"type":"FunctionDef","value":"efficientnet_b0"},{"type":"FunctionDef","value":"efficientnet_b1"},{"type":"FunctionDef","value":"efficientnet_b2"},{"type":"FunctionDef","value":"efficientnet_b3"},{"type":"FunctionDef","value":"efficientnet_b4"},{"type":"FunctionDef","value":"efficientnet_b5"},{"type":"FunctionDef","value":"efficientnet_b6"},{"type":"FunctionDef","value":"efficientnet_b7"},{"type":"FunctionDef","value":"efficientnet_b8"},{"type":"FunctionDef","value":"efficientnet_l2"},{"type":"FunctionDef","value":"efficientnet_b0_gn"},{"type":"FunctionDef","value":"efficientnet_b0_g8_gn"},{"type":"FunctionDef","value":"efficientnet_b0_g16_evos"},{"type":"FunctionDef","value":"efficientnet_b3_gn"},{"type":"FunctionDef","value":"efficientnet_b3_g8_gn"},{"type":"FunctionDef","value":"efficientnet_es"},{"type":"FunctionDef","value":"efficientnet_es_pruned"},{"type":"FunctionDef","value":"efficientnet_em"},{"type":"FunctionDef","value":"efficientnet_el"},{"type":"FunctionDef","value":"efficientnet_el_pruned"},{"type":"FunctionDef","value":"efficientnet_cc_b0_4e"},{"type":"FunctionDef","value":"efficientnet_cc_b0_8e"},{"type":"FunctionDef","value":"efficientnet_cc_b1_8e"},{"type":"FunctionDef","value":"efficientnet_lite0"},{"type":"FunctionDef","value":"efficientnet_lite1"},{"type":"FunctionDef","value":"efficientnet_lite2"},{"type":"FunctionDef","value":"efficientnet_lite3"},{"type":"FunctionDef","value":"efficientnet_lite4"},{"type":"FunctionDef","value":"efficientnet_b1_pruned"},{"type":"FunctionDef","value":"efficientnet_b2_pruned"},{"type":"FunctionDef","value":"efficientnet_b3_pruned"},{"type":"FunctionDef","value":"efficientnetv2_rw_t"},{"type":"FunctionDef","value":"gc_efficientnetv2_rw_t"},{"type":"FunctionDef","value":"efficientnetv2_rw_s"},{"type":"FunctionDef","value":"efficientnetv2_rw_m"},{"type":"FunctionDef","value":"efficientnetv2_s"},{"type":"FunctionDef","value":"efficientnetv2_m"},{"type":"FunctionDef","value":"efficientnetv2_l"},{"type":"FunctionDef","value":"efficientnetv2_xl"},{"type":"FunctionDef","value":"tf_efficientnet_b0"},{"type":"FunctionDef","value":"tf_efficientnet_b1"},{"type":"FunctionDef","value":"tf_efficientnet_b2"},{"type":"FunctionDef","value":"tf_efficientnet_b3"},{"type":"FunctionDef","value":"tf_efficientnet_b4"},{"type":"FunctionDef","value":"tf_efficientnet_b5"},{"type":"FunctionDef","value":"tf_efficientnet_b6"},{"type":"FunctionDef","value":"tf_efficientnet_b7"},{"type":"FunctionDef","value":"tf_efficientnet_b8"},{"type":"FunctionDef","value":"tf_efficientnet_l2"},{"type":"FunctionDef","value":"tf_efficientnet_es"},{"type":"FunctionDef","value":"tf_efficientnet_em"},{"type":"FunctionDef","value":"tf_efficientnet_el"},{"type":"FunctionDef","value":"tf_efficientnet_cc_b0_4e"},{"type":"FunctionDef","value":"tf_efficientnet_cc_b0_8e"},{"type":"FunctionDef","value":"tf_efficientnet_cc_b1_8e"},{"type":"FunctionDef","value":"tf_efficientnet_lite0"},{"type":"FunctionDef","value":"tf_efficientnet_lite1"},{"type":"FunctionDef","value":"tf_efficientnet_lite2"},{"type":"FunctionDef","value":"tf_efficientnet_lite3"},{"type":"FunctionDef","value":"tf_efficientnet_lite4"},{"type":"FunctionDef","value":"tf_efficientnetv2_s"},{"type":"FunctionDef","value":"tf_efficientnetv2_m"},{"type":"FunctionDef","value":"tf_efficientnetv2_l"},{"type":"FunctionDef","value":"tf_efficientnetv2_xl"},{"type":"FunctionDef","value":"tf_efficientnetv2_b0"},{"type":"FunctionDef","value":"tf_efficientnetv2_b1"},{"type":"FunctionDef","value":"tf_efficientnetv2_b2"},{"type":"FunctionDef","value":"tf_efficientnetv2_b3"},{"type":"FunctionDef","value":"mixnet_s"},{"type":"FunctionDef","value":"mixnet_m"},{"type":"FunctionDef","value":"mixnet_l"},{"type":"FunctionDef","value":"mixnet_xl"},{"type":"FunctionDef","value":"mixnet_xxl"},{"type":"FunctionDef","value":"tf_mixnet_s"},{"type":"FunctionDef","value":"tf_mixnet_m"},{"type":"FunctionDef","value":"tf_mixnet_l"},{"type":"FunctionDef","value":"tinynet_a"},{"type":"FunctionDef","value":"tinynet_b"},{"type":"FunctionDef","value":"tinynet_c"},{"type":"FunctionDef","value":"tinynet_d"},{"type":"FunctionDef","value":"tinynet_e"},{"type":"Expr","children":[1173]},{"type":"Call","children":[1174,1175,1176]},{"type":"Name","value":"register_model_deprecations"},{"type":"Name","value":"__name__"},{"type":"Dict","children":[1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238]},{"type":"Constant","value":"tf_efficientnet_b0_ap"},{"type":"Constant","value":"tf_efficientnet_b1_ap"},{"type":"Constant","value":"tf_efficientnet_b2_ap"},{"type":"Constant","value":"tf_efficientnet_b3_ap"},{"type":"Constant","value":"tf_efficientnet_b4_ap"},{"type":"Constant","value":"tf_efficientnet_b5_ap"},{"type":"Constant","value":"tf_efficientnet_b6_ap"},{"type":"Constant","value":"tf_efficientnet_b7_ap"},{"type":"Constant","value":"tf_efficientnet_b8_ap"},{"type":"Constant","value":"tf_efficientnet_b0_ns"},{"type":"Constant","value":"tf_efficientnet_b1_ns"},{"type":"Constant","value":"tf_efficientnet_b2_ns"},{"type":"Constant","value":"tf_efficientnet_b3_ns"},{"type":"Constant","value":"tf_efficientnet_b4_ns"},{"type":"Constant","value":"tf_efficientnet_b5_ns"},{"type":"Constant","value":"tf_efficientnet_b6_ns"},{"type":"Constant","value":"tf_efficientnet_b7_ns"},{"type":"Constant","value":"tf_efficientnet_l2_ns_475"},{"type":"Constant","value":"tf_efficientnet_l2_ns"},{"type":"Constant","value":"tf_efficientnetv2_s_in21ft1k"},{"type":"Constant","value":"tf_efficientnetv2_m_in21ft1k"},{"type":"Constant","value":"tf_efficientnetv2_l_in21ft1k"},{"type":"Constant","value":"tf_efficientnetv2_xl_in21ft1k"},{"type":"Constant","value":"tf_efficientnetv2_s_in21k"},{"type":"Constant","value":"tf_efficientnetv2_m_in21k"},{"type":"Constant","value":"tf_efficientnetv2_l_in21k"},{"type":"Constant","value":"tf_efficientnetv2_xl_in21k"},{"type":"Constant","value":"efficientnet_b2a"},{"type":"Constant","value":"efficientnet_b3a"},{"type":"Constant","value":"mnasnet_a1"},{"type":"Constant","value":"mnasnet_b1"},{"type":"Constant","value":"tf_efficientnet_b0.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b1.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b2.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b3.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b4.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b5.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b6.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b7.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b8.ap_in1k"},{"type":"Constant","value":"tf_efficientnet_b0.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b1.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b2.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b3.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b4.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b5.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b6.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_b7.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnet_l2.ns_jft_in1k_475"},{"type":"Constant","value":"tf_efficientnet_l2.ns_jft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_s.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_m.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_l.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_xl.in21k_ft_in1k"},{"type":"Constant","value":"tf_efficientnetv2_s.in21k"},{"type":"Constant","value":"tf_efficientnetv2_m.in21k"},{"type":"Constant","value":"tf_efficientnetv2_l.in21k"},{"type":"Constant","value":"tf_efficientnetv2_xl.in21k"},{"type":"Constant","value":"efficientnet_b2"},{"type":"Constant","value":"efficientnet_b3"},{"type":"Constant","value":"semnasnet_100"},{"type":"Constant","value":"mnasnet_100"}]
[{"type":"Module","children":[1,3,4,5,8,16,24,29,30,31,32,33,34]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Genarates a TF-Hub module for arbitrary image stylization.\n\nThe module is compatible with TF-2 and is intended as a demonstration of TF-Hub\nmodule creation based on TF-1 models.\n\nThe created hub module can be used for image stylization with:\n  m = hub.load('hub_handle')\n  stylized_image = m(content_image, style_image)\n\nwhere content_image, style_image and the generated stylized_image are 4d arrays,\nwith the first being the batch dimension, that can be 1 for individual images.\nThe input and output values of the images should be in the range [0, 1].\nThe shapes of content and style image don't have to match. Output image shape\nis the same as the content image shape.\n\nA pre-trained checkpoint for the given model is available at\nhttps://storage.googleapis.com/download.magenta.tensorflow.org/models/arbitrary_style_transfer.tar.gz\nOne can download and extract this tar file and to provide the path to the\ncheckpoint in it to the checkpoint flag.\n"},{"type":"ImportFrom","value":"absl"},{"type":"ImportFrom","value":"magenta.models.arbitrary_image_stylization"},{"type":"Import","children":[6]},{"type":"alias","value":"tensorflow.compat.v1","children":[7]},{"type":"identifier","value":"tf"},{"type":"Expr","children":[9]},{"type":"Call","children":[10,13,14,15]},{"type":"AttributeLoad","children":[11,12]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"checkpoint"},{"type":"Constant","value":"None"},{"type":"Constant","value":"Path to the model checkpoint."},{"type":"Expr","children":[17]},{"type":"Call","children":[18,21,22,23]},{"type":"AttributeLoad","children":[19,20]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"export_path"},{"type":"Constant","value":"None"},{"type":"Constant","value":"Path where to save the hub module."},{"type":"Assign","children":[25,26]},{"type":"Name","value":"FLAGS"},{"type":"AttributeLoad","children":[27,28]},{"type":"Name","value":"flags"},{"type":"attr","value":"FLAGS"},{"type":"FunctionDef","value":"build_network"},{"type":"FunctionDef","value":"get_stylize_fn"},{"type":"FunctionDef","value":"create_hub_module_object"},{"type":"FunctionDef","value":"main"},{"type":"FunctionDef","value":"console_entry_point"},{"type":"If","children":[35,38]},{"type":"CompareEq","children":[36,37]},{"type":"Name","value":"__name__"},{"type":"Constant","value":"__main__"},{"type":"body","children":[39]},{"type":"Expr","children":[40]},{"type":"Call","children":[41]},{"type":"Name","value":"console_entry_point"}]
[{"type":"Module","children":[1,3,4,5,6,7,8,9,10,11,12,13,14,15,16]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Contains common factory functions yolo neural networks."},{"type":"ImportFrom","value":"absl"},{"type":"ImportFrom","value":"official.projects.yolo.configs"},{"type":"ImportFrom","value":"official.projects.yolo.modeling"},{"type":"ImportFrom","value":"official.projects.yolo.modeling"},{"type":"ImportFrom","value":"official.projects.yolo.modeling.heads"},{"type":"ImportFrom","value":"official.projects.yolo.modeling.heads"},{"type":"ImportFrom","value":"official.projects.yolo.modeling.layers"},{"type":"ImportFrom","value":"official.vision.modeling.backbones"},{"type":"ImportFrom","value":"official.vision.modeling.decoders"},{"type":"FunctionDef","value":"build_yolo_detection_generator"},{"type":"FunctionDef","value":"build_yolo_head"},{"type":"FunctionDef","value":"build_yolo"},{"type":"FunctionDef","value":"build_yolov7_detection_generator"},{"type":"FunctionDef","value":"build_yolov7"}]
[{"type":"Module","children":[1,3,4,5,6,9,11,14,15,16,17,27,37,47,57,67,77,84,104,111,112,113]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Logistic factor analysis on MNIST. Using Monte Carlo EM, with HMC\nfor the E-step and MAP for the M-step. We fit to just one data\npoint in MNIST.\n"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[7]},{"type":"alias","value":"edward","children":[8]},{"type":"identifier","value":"ed"},{"type":"Import","children":[10]},{"type":"alias","value":"os"},{"type":"Import","children":[12]},{"type":"alias","value":"tensorflow","children":[13]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"edward.models"},{"type":"ImportFrom","value":"observations"},{"type":"ImportFrom","value":"scipy.misc"},{"type":"Expr","children":[18]},{"type":"Call","children":[19,24,25,26]},{"type":"AttributeLoad","children":[20,23]},{"type":"AttributeLoad","children":[21,22]},{"type":"Name","value":"tf"},{"type":"attr","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"data_dir"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[28]},{"type":"Call","children":[29,34,35,36]},{"type":"AttributeLoad","children":[30,33]},{"type":"AttributeLoad","children":[31,32]},{"type":"Name","value":"tf"},{"type":"attr","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"out_dir"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[38]},{"type":"Call","children":[39,44,45,46]},{"type":"AttributeLoad","children":[40,43]},{"type":"AttributeLoad","children":[41,42]},{"type":"Name","value":"tf"},{"type":"attr","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"N"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[48]},{"type":"Call","children":[49,54,55,56]},{"type":"AttributeLoad","children":[50,53]},{"type":"AttributeLoad","children":[51,52]},{"type":"Name","value":"tf"},{"type":"attr","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"d"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[58]},{"type":"Call","children":[59,64,65,66]},{"type":"AttributeLoad","children":[60,63]},{"type":"AttributeLoad","children":[61,62]},{"type":"Name","value":"tf"},{"type":"attr","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"n_iter_per_epoch"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[68]},{"type":"Call","children":[69,74,75,76]},{"type":"AttributeLoad","children":[70,73]},{"type":"AttributeLoad","children":[71,72]},{"type":"Name","value":"tf"},{"type":"attr","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"n_epoch"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Assign","children":[78,79]},{"type":"Name","value":"FLAGS"},{"type":"AttributeLoad","children":[80,83]},{"type":"AttributeLoad","children":[81,82]},{"type":"Name","value":"tf"},{"type":"attr","value":"flags"},{"type":"attr","value":"FLAGS"},{"type":"If","children":[85,95]},{"type":"UnaryOpNot","children":[86]},{"type":"Call","children":[87,92]},{"type":"AttributeLoad","children":[88,91]},{"type":"AttributeLoad","children":[89,90]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"exists"},{"type":"AttributeLoad","children":[93,94]},{"type":"Name","value":"FLAGS"},{"type":"attr","value":"out_dir"},{"type":"body","children":[96]},{"type":"Expr","children":[97]},{"type":"Call","children":[98,101]},{"type":"AttributeLoad","children":[99,100]},{"type":"Name","value":"os"},{"type":"attr","value":"makedirs"},{"type":"AttributeLoad","children":[102,103]},{"type":"Name","value":"FLAGS"},{"type":"attr","value":"out_dir"},{"type":"Assign","children":[105,106]},{"type":"Name","value":"FLAGS"},{"type":"AttributeLoad","children":[107,110]},{"type":"AttributeLoad","children":[108,109]},{"type":"Name","value":"tf"},{"type":"attr","value":"flags"},{"type":"attr","value":"FLAGS"},{"type":"FunctionDef","value":"generative_network"},{"type":"FunctionDef","value":"main"},{"type":"If","children":[114,117]},{"type":"CompareEq","children":[115,116]},{"type":"Name","value":"__name__"},{"type":"Constant","value":"__main__"},{"type":"body","children":[118]},{"type":"Expr","children":[119]},{"type":"Call","children":[120]},{"type":"AttributeLoad","children":[121,124]},{"type":"AttributeLoad","children":[122,123]},{"type":"Name","value":"tf"},{"type":"attr","value":"app"},{"type":"attr","value":"run"}]
[{"type":"Module","children":[1,3,6,7,13,21,24,27,30,33,36,39,42,55,67,94,119,120,127,141,154,172,186]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nThis code is a modified version of the code from this link:\nhttps://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/recurrent_network.py\n\nHis code is a very good one for RNN beginners. Feel free to check it out.\n"},{"type":"Import","children":[4]},{"type":"alias","value":"tensorflow","children":[5]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"tensorflow.examples.tutorials.mnist"},{"type":"Expr","children":[8]},{"type":"Call","children":[9,12]},{"type":"AttributeLoad","children":[10,11]},{"type":"Name","value":"tf"},{"type":"attr","value":"set_random_seed"},{"type":"Constant","value":"1"},{"type":"Assign","children":[14,15]},{"type":"Name","value":"mnist"},{"type":"Call","children":[16,19,20]},{"type":"AttributeLoad","children":[17,18]},{"type":"Name","value":"input_data"},{"type":"attr","value":"read_data_sets"},{"type":"Constant","value":"MNIST_data"},{"type":"keyword","value":"one_hot"},{"type":"Assign","children":[22,23]},{"type":"Name","value":"lr"},{"type":"Constant","value":"0.001"},{"type":"Assign","children":[25,26]},{"type":"Name","value":"training_iters"},{"type":"Constant","value":"100000"},{"type":"Assign","children":[28,29]},{"type":"Name","value":"batch_size"},{"type":"Constant","value":"128"},{"type":"Assign","children":[31,32]},{"type":"Name","value":"n_inputs"},{"type":"Constant","value":"28"},{"type":"Assign","children":[34,35]},{"type":"Name","value":"n_steps"},{"type":"Constant","value":"28"},{"type":"Assign","children":[37,38]},{"type":"Name","value":"n_hidden_units"},{"type":"Constant","value":"128"},{"type":"Assign","children":[40,41]},{"type":"Name","value":"n_classes"},{"type":"Constant","value":"10"},{"type":"Assign","children":[43,44]},{"type":"Name","value":"x"},{"type":"Call","children":[45,48,51]},{"type":"AttributeLoad","children":[46,47]},{"type":"Name","value":"tf"},{"type":"attr","value":"placeholder"},{"type":"AttributeLoad","children":[49,50]},{"type":"Name","value":"tf"},{"type":"attr","value":"float32"},{"type":"ListLoad","children":[52,53,54]},{"type":"Constant","value":"None"},{"type":"Name","value":"n_steps"},{"type":"Name","value":"n_inputs"},{"type":"Assign","children":[56,57]},{"type":"Name","value":"y"},{"type":"Call","children":[58,61,64]},{"type":"AttributeLoad","children":[59,60]},{"type":"Name","value":"tf"},{"type":"attr","value":"placeholder"},{"type":"AttributeLoad","children":[62,63]},{"type":"Name","value":"tf"},{"type":"attr","value":"float32"},{"type":"ListLoad","children":[65,66]},{"type":"Constant","value":"None"},{"type":"Name","value":"n_classes"},{"type":"Assign","children":[68,69]},{"type":"Name","value":"weights"},{"type":"Dict","children":[70,71,72,83]},{"type":"Constant","value":"in"},{"type":"Constant","value":"out"},{"type":"Call","children":[73,76]},{"type":"AttributeLoad","children":[74,75]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[77,80]},{"type":"AttributeLoad","children":[78,79]},{"type":"Name","value":"tf"},{"type":"attr","value":"random_normal"},{"type":"ListLoad","children":[81,82]},{"type":"Name","value":"n_inputs"},{"type":"Name","value":"n_hidden_units"},{"type":"Call","children":[84,87]},{"type":"AttributeLoad","children":[85,86]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[88,91]},{"type":"AttributeLoad","children":[89,90]},{"type":"Name","value":"tf"},{"type":"attr","value":"random_normal"},{"type":"ListLoad","children":[92,93]},{"type":"Name","value":"n_hidden_units"},{"type":"Name","value":"n_classes"},{"type":"Assign","children":[95,96]},{"type":"Name","value":"biases"},{"type":"Dict","children":[97,98,99,109]},{"type":"Constant","value":"in"},{"type":"Constant","value":"out"},{"type":"Call","children":[100,103]},{"type":"AttributeLoad","children":[101,102]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[104,107,108]},{"type":"AttributeLoad","children":[105,106]},{"type":"Name","value":"tf"},{"type":"attr","value":"constant"},{"type":"Constant","value":"0.1"},{"type":"keyword","value":"shape"},{"type":"Call","children":[110,113]},{"type":"AttributeLoad","children":[111,112]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[114,117,118]},{"type":"AttributeLoad","children":[115,116]},{"type":"Name","value":"tf"},{"type":"attr","value":"constant"},{"type":"Constant","value":"0.1"},{"type":"keyword","value":"shape"},{"type":"FunctionDef","value":"RNN"},{"type":"Assign","children":[121,122]},{"type":"Name","value":"pred"},{"type":"Call","children":[123,124,125,126]},{"type":"Name","value":"RNN"},{"type":"Name","value":"x"},{"type":"Name","value":"weights"},{"type":"Name","value":"biases"},{"type":"Assign","children":[128,129]},{"type":"Name","value":"cost"},{"type":"Call","children":[130,133]},{"type":"AttributeLoad","children":[131,132]},{"type":"Name","value":"tf"},{"type":"attr","value":"reduce_mean"},{"type":"Call","children":[134,139,140]},{"type":"AttributeLoad","children":[135,138]},{"type":"AttributeLoad","children":[136,137]},{"type":"Name","value":"tf"},{"type":"attr","value":"nn"},{"type":"attr","value":"softmax_cross_entropy_with_logits"},{"type":"keyword","value":"logits"},{"type":"keyword","value":"labels"},{"type":"Assign","children":[142,143]},{"type":"Name","value":"train_op"},{"type":"Call","children":[144,153]},{"type":"AttributeLoad","children":[145,152]},{"type":"Call","children":[146,151]},{"type":"AttributeLoad","children":[147,150]},{"type":"AttributeLoad","children":[148,149]},{"type":"Name","value":"tf"},{"type":"attr","value":"train"},{"type":"attr","value":"AdamOptimizer"},{"type":"Name","value":"lr"},{"type":"attr","value":"minimize"},{"type":"Name","value":"cost"},{"type":"Assign","children":[155,156]},{"type":"Name","value":"correct_pred"},{"type":"Call","children":[157,160,166]},{"type":"AttributeLoad","children":[158,159]},{"type":"Name","value":"tf"},{"type":"attr","value":"equal"},{"type":"Call","children":[161,164,165]},{"type":"AttributeLoad","children":[162,163]},{"type":"Name","value":"tf"},{"type":"attr","value":"argmax"},{"type":"Name","value":"pred"},{"type":"Constant","value":"1"},{"type":"Call","children":[167,170,171]},{"type":"AttributeLoad","children":[168,169]},{"type":"Name","value":"tf"},{"type":"attr","value":"argmax"},{"type":"Name","value":"y"},{"type":"Constant","value":"1"},{"type":"Assign","children":[173,174]},{"type":"Name","value":"accuracy"},{"type":"Call","children":[175,178]},{"type":"AttributeLoad","children":[176,177]},{"type":"Name","value":"tf"},{"type":"attr","value":"reduce_mean"},{"type":"Call","children":[179,182,183]},{"type":"AttributeLoad","children":[180,181]},{"type":"Name","value":"tf"},{"type":"attr","value":"cast"},{"type":"Name","value":"correct_pred"},{"type":"AttributeLoad","children":[184,185]},{"type":"Name","value":"tf"},{"type":"attr","value":"float32"},{"type":"With","children":[187,193]},{"type":"withitem","children":[188,192]},{"type":"Call","children":[189]},{"type":"AttributeLoad","children":[190,191]},{"type":"Name","value":"tf"},{"type":"attr","value":"Session"},{"type":"Name","value":"sess"},{"type":"body","children":[194,236,242,245]},{"type":"If","children":[195,222,229]},{"type":"BoolOpAnd","children":[196,209]},{"type":"CompareLt","children":[197,208]},{"type":"Call","children":[198,199]},{"type":"Name","value":"int"},{"type":"SubscriptLoad","children":[200,207]},{"type":"Call","children":[201,206]},{"type":"AttributeLoad","children":[202,205]},{"type":"AttributeLoad","children":[203,204]},{"type":"Name","value":"tf"},{"type":"attr","value":"__version__"},{"type":"attr","value":"split"},{"type":"Constant","value":"."},{"type":"Constant","value":"1"},{"type":"Constant","value":"12"},{"type":"CompareLt","children":[210,221]},{"type":"Call","children":[211,212]},{"type":"Name","value":"int"},{"type":"SubscriptLoad","children":[213,220]},{"type":"Call","children":[214,219]},{"type":"AttributeLoad","children":[215,218]},{"type":"AttributeLoad","children":[216,217]},{"type":"Name","value":"tf"},{"type":"attr","value":"__version__"},{"type":"attr","value":"split"},{"type":"Constant","value":"."},{"type":"Constant","value":"0"},{"type":"Constant","value":"1"},{"type":"body","children":[223]},{"type":"Assign","children":[224,225]},{"type":"Name","value":"init"},{"type":"Call","children":[226]},{"type":"AttributeLoad","children":[227,228]},{"type":"Name","value":"tf"},{"type":"attr","value":"initialize_all_variables"},{"type":"orelse","children":[230]},{"type":"Assign","children":[231,232]},{"type":"Name","value":"init"},{"type":"Call","children":[233]},{"type":"AttributeLoad","children":[234,235]},{"type":"Name","value":"tf"},{"type":"attr","value":"global_variables_initializer"},{"type":"Expr","children":[237]},{"type":"Call","children":[238,241]},{"type":"AttributeLoad","children":[239,240]},{"type":"Name","value":"sess"},{"type":"attr","value":"run"},{"type":"Name","value":"init"},{"type":"Assign","children":[243,244]},{"type":"Name","value":"step"},{"type":"Constant","value":"0"},{"type":"While","children":[246,251]},{"type":"CompareLt","children":[247,250]},{"type":"BinOpMult","children":[248,249]},{"type":"Name","value":"step"},{"type":"Name","value":"batch_size"},{"type":"Name","value":"training_iters"},{"type":"body","children":[252,263,273,281,297]},{"type":"Assign","children":[253,256]},{"type":"TupleStore","children":[254,255]},{"type":"Name","value":"batch_xs"},{"type":"Name","value":"batch_ys"},{"type":"Call","children":[257,262]},{"type":"AttributeLoad","children":[258,261]},{"type":"AttributeLoad","children":[259,260]},{"type":"Name","value":"mnist"},{"type":"attr","value":"train"},{"type":"attr","value":"next_batch"},{"type":"Name","value":"batch_size"},{"type":"Assign","children":[264,265]},{"type":"Name","value":"batch_xs"},{"type":"Call","children":[266,269]},{"type":"AttributeLoad","children":[267,268]},{"type":"Name","value":"batch_xs"},{"type":"attr","value":"reshape"},{"type":"ListLoad","children":[270,271,272]},{"type":"Name","value":"batch_size"},{"type":"Name","value":"n_steps"},{"type":"Name","value":"n_inputs"},{"type":"Expr","children":[274]},{"type":"Call","children":[275,278,280]},{"type":"AttributeLoad","children":[276,277]},{"type":"Name","value":"sess"},{"type":"attr","value":"run"},{"type":"ListLoad","children":[279]},{"type":"Name","value":"train_op"},{"type":"keyword","value":"feed_dict"},{"type":"If","children":[282,287]},{"type":"CompareEq","children":[283,286]},{"type":"BinOpMod","children":[284,285]},{"type":"Name","value":"step"},{"type":"Constant","value":"20"},{"type":"Constant","value":"0"},{"type":"body","children":[288]},{"type":"Expr","children":[289]},{"type":"Call","children":[290,291]},{"type":"Name","value":"print"},{"type":"Call","children":[292,295,296]},{"type":"AttributeLoad","children":[293,294]},{"type":"Name","value":"sess"},{"type":"attr","value":"run"},{"type":"Name","value":"accuracy"},{"type":"keyword","value":"feed_dict"},{"type":"AugAssignAdd","children":[298,299]},{"type":"Name","value":"step"},{"type":"Constant","value":"1"}]
[{"type":"Module","children":[1,3,5,9,15,16,17]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Definitions for random feature Gaussian process layer."},{"type":"Import","children":[4]},{"type":"alias","value":"math"},{"type":"Import","children":[6,8]},{"type":"alias","value":"tensorflow","children":[7]},{"type":"identifier","value":"tf"},{"type":"alias","value":"tf_keras"},{"type":"Assign","children":[10,11]},{"type":"Name","value":"_SUPPORTED_LIKELIHOOD"},{"type":"TupleLoad","children":[12,13,14]},{"type":"Constant","value":"binary_logistic"},{"type":"Constant","value":"poisson"},{"type":"Constant","value":"gaussian"},{"type":"ClassDef","value":"RandomFeatureGaussianProcess"},{"type":"ClassDef","value":"LaplaceRandomFeatureCovariance"},{"type":"FunctionDef","value":"mean_field_logits"}]
[{"type":"Module","children":[1,3,18,21,32,48,49,52,63,66,77,80,91,94,105,108]},{"type":"Import","children":[2]},{"type":"alias","value":"json"},{"type":"With","children":[4,10]},{"type":"withitem","children":[5,9]},{"type":"Call","children":[6,7,8]},{"type":"Name","value":"open"},{"type":"Constant","value":"content.json"},{"type":"Constant","value":"r"},{"type":"Name","value":"f"},{"type":"body","children":[11]},{"type":"Assign","children":[12,13]},{"type":"Name","value":"data"},{"type":"Call","children":[14,17]},{"type":"AttributeLoad","children":[15,16]},{"type":"Name","value":"json"},{"type":"attr","value":"load"},{"type":"Name","value":"f"},{"type":"Assign","children":[19,20]},{"type":"Name","value":"model_metadata"},{"type":"Dict"},{"type":"For","children":[22,23,26]},{"type":"Name","value":"type"},{"type":"SubscriptLoad","children":[24,25]},{"type":"Name","value":"data"},{"type":"Constant","value":"types"},{"type":"body","children":[27]},{"type":"Assign","children":[28,31]},{"type":"SubscriptStore","children":[29,30]},{"type":"Name","value":"model_metadata"},{"type":"Name","value":"type"},{"type":"ListLoad"},{"type":"For","children":[33,34,37]},{"type":"Name","value":"model"},{"type":"SubscriptLoad","children":[35,36]},{"type":"Name","value":"data"},{"type":"Constant","value":"models"},{"type":"body","children":[38]},{"type":"Expr","children":[39]},{"type":"Call","children":[40,47]},{"type":"AttributeLoad","children":[41,46]},{"type":"SubscriptLoad","children":[42,43]},{"type":"Name","value":"model_metadata"},{"type":"SubscriptLoad","children":[44,45]},{"type":"Name","value":"model"},{"type":"Constant","value":"type"},{"type":"attr","value":"append"},{"type":"Name","value":"model"},{"type":"FunctionDef","value":"render_model_line"},{"type":"Assign","children":[50,51]},{"type":"Name","value":"content"},{"type":"Constant","value":"\n\n<!--\nTitle: Awesome Core ML Models\nDescription: A curated list of machine learning models in Core ML format.\nAuthor: Kedan Li\n-->\n<p align=\"center\">\n<img src=\"images/coreml.png\" width=\"329\" height=\"295\"/>\n</p>\n\n\nSince iOS 11, Apple released Core ML framework to help developers integrate machine learning models into applications. [The official documentation](https://developer.apple.com/documentation/coreml)\n\nWe've put up the largest collection of machine learning models in Core ML format, to help  iOS, macOS, tvOS, and watchOS developers experiment with machine learning techniques.\n\nIf you've converted a Core ML model, feel free to submit a [pull request](https://github.com/likedan/Awesome-CoreML-Models/compare).\n\nRecently, we've included visualization tools. And here's one [Netron](https://lutzroeder.github.io/Netron).\n\n[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n\n# Models\n\n## Image - Metadata/Text\n*Models that takes image data as input and output useful information about the image.*\n"},{"type":"For","children":[53,54,57]},{"type":"Name","value":"model"},{"type":"SubscriptLoad","children":[55,56]},{"type":"Name","value":"model_metadata"},{"type":"Constant","value":"image"},{"type":"body","children":[58]},{"type":"AugAssignAdd","children":[59,60]},{"type":"Name","value":"content"},{"type":"Call","children":[61,62]},{"type":"Name","value":"render_model_line"},{"type":"Name","value":"model"},{"type":"AugAssignAdd","children":[64,65]},{"type":"Name","value":"content"},{"type":"Constant","value":"\n\n## Image - Image\n*Models that transform image.*\n"},{"type":"For","children":[67,68,71]},{"type":"Name","value":"model"},{"type":"SubscriptLoad","children":[69,70]},{"type":"Name","value":"model_metadata"},{"type":"Constant","value":"image-image"},{"type":"body","children":[72]},{"type":"AugAssignAdd","children":[73,74]},{"type":"Name","value":"content"},{"type":"Call","children":[75,76]},{"type":"Name","value":"render_model_line"},{"type":"Name","value":"model"},{"type":"AugAssignAdd","children":[78,79]},{"type":"Name","value":"content"},{"type":"Constant","value":"\n\n## Text - Metadata/Text\n*Models that process text data*\n"},{"type":"For","children":[81,82,85]},{"type":"Name","value":"model"},{"type":"SubscriptLoad","children":[83,84]},{"type":"Name","value":"model_metadata"},{"type":"Constant","value":"text"},{"type":"body","children":[86]},{"type":"AugAssignAdd","children":[87,88]},{"type":"Name","value":"content"},{"type":"Call","children":[89,90]},{"type":"Name","value":"render_model_line"},{"type":"Name","value":"model"},{"type":"AugAssignAdd","children":[92,93]},{"type":"Name","value":"content"},{"type":"Constant","value":"## Miscellaneous\n"},{"type":"For","children":[95,96,99]},{"type":"Name","value":"model"},{"type":"SubscriptLoad","children":[97,98]},{"type":"Name","value":"model_metadata"},{"type":"Constant","value":"miscellaneous"},{"type":"body","children":[100]},{"type":"AugAssignAdd","children":[101,102]},{"type":"Name","value":"content"},{"type":"Call","children":[103,104]},{"type":"Name","value":"render_model_line"},{"type":"Name","value":"model"},{"type":"AugAssignAdd","children":[106,107]},{"type":"Name","value":"content"},{"type":"Constant","value":"\n\n# Visualization Tools\n*Tools that helps visualize CoreML Models*\n* [Netron](https://lutzroeder.github.io/Netron)\n\n# Supported formats\n*List of model formats that could be converted to Core ML with examples*\n* [Caffe](https://apple.github.io/coremltools/generated/coremltools.converters.caffe.convert.html)\n* [Keras](https://apple.github.io/coremltools/generated/coremltools.converters.keras.convert.html)\n* [XGBoost](https://apple.github.io/coremltools/generated/coremltools.converters.xgboost.convert.html)\n* [Scikit-learn](https://apple.github.io/coremltools/generated/coremltools.converters.sklearn.convert.html)\n* [MXNet](https://aws.amazon.com/blogs/ai/bring-machine-learning-to-ios-apps-using-apache-mxnet-and-apple-core-ml/)\n* [LibSVM](https://apple.github.io/coremltools/generated/coremltools.converters.libsvm.convert.html)\n* [Torch7](https://github.com/prisma-ai/torch2coreml)\n\n# The Gold\n*Collections of machine learning models that could be converted to Core ML*\n\n* [Caffe Model Zoo](https://github.com/BVLC/caffe/wiki/Model-Zoo) - Big list of models in Caffe format.\n* [TensorFlow Models](https://github.com/tensorflow/models) - Models for TensorFlow.\n* [TensorFlow Slim Models](https://github.com/tensorflow/models/tree/master/research/slim/README.md) - Another collection of TensorFlow Models.\n* [MXNet Model Zoo](https://mxnet.incubator.apache.org/model_zoo/) - Collection of MXNet models.\n\n*Individual machine learning models that could be converted to Core ML. We'll keep adjusting the list as they become converted.*\n* [LaMem](https://github.com/MiyainNYC/Visual-Memorability-through-Caffe) Score the memorability of pictures.\n* [ILGnet](https://github.com/BestiVictory/ILGnet) The aesthetic evaluation of images.\n* [Colorization](https://github.com/richzhang/colorization) Automatic colorization using deep neural networks.\n* [Illustration2Vec](https://github.com/rezoo/illustration2vec) Estimating a set of tags and extracting semantic feature vectors from given illustrations.\n* [CTPN](https://github.com/tianzhi0549/CTPN) Detecting text in natural image.\n* [Image Analogy](https://github.com/msracver/Deep-Image-Analogy) Find semantically-meaningful dense correspondences between two input images.\n* [iLID](https://github.com/twerkmeister/iLID) Automatic spoken language identification.\n* [Fashion Detection](https://github.com/liuziwei7/fashion-detection) Cloth detection from images.\n* [Saliency](https://github.com/imatge-upc/saliency-2016-cvpr) The prediction of salient areas in images has been traditionally addressed with hand-crafted features.\n* [Face Detection](https://github.com/DolotovEvgeniy/DeepPyramid) Detect face from image.\n* [mtcnn](https://github.com/CongWeilin/mtcnn-caffe) Joint Face Detection and Alignment.\n* [deephorizon](https://github.com/scottworkman/deephorizon) Single image horizon line estimation.\n\n# Contributing and License\n* [See the guide](https://github.com/likedan/Awesome-CoreML-Models/blob/master/.github/CONTRIBUTING.md)\n* Distributed under the MIT license. See LICENSE for more information.\n"},{"type":"With","children":[109,115]},{"type":"withitem","children":[110,114]},{"type":"Call","children":[111,112,113]},{"type":"Name","value":"open"},{"type":"Constant","value":"README.md"},{"type":"Constant","value":"w"},{"type":"Name","value":"out"},{"type":"body","children":[116]},{"type":"Expr","children":[117]},{"type":"Call","children":[118,121]},{"type":"AttributeLoad","children":[119,120]},{"type":"Name","value":"out"},{"type":"attr","value":"write"},{"type":"BinOpAdd","children":[122,123]},{"type":"Name","value":"content"},{"type":"Constant","value":"\n"}]
[{"type":"Module","children":[1,3,4,12,14,15,17,18,19,20,21,22,26,35,37,38,42,46,47,48,49]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nGraphModelSpace representation for engines based on graph.\n"},{"type":"ImportFrom","value":"__future__"},{"type":"Assign","children":[5,6]},{"type":"Name","value":"__all__"},{"type":"ListLoad","children":[7,8,9,10,11]},{"type":"Constant","value":"GraphModelSpace"},{"type":"Constant","value":"Graph"},{"type":"Constant","value":"Node"},{"type":"Constant","value":"Edge"},{"type":"Constant","value":"IllegalGraphError"},{"type":"Import","children":[13]},{"type":"alias","value":"json"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[16]},{"type":"alias","value":"nni"},{"type":"ImportFrom","value":"nni.common.device"},{"type":"ImportFrom","value":"nni.mutable"},{"type":"ImportFrom","value":"graph_op"},{"type":"ImportFrom","value":"mutator"},{"type":"ImportFrom","value":"space"},{"type":"If","children":[23,24]},{"type":"Name","value":"TYPE_CHECKING"},{"type":"body","children":[25]},{"type":"ImportFrom","value":"nni.nas.evaluator"},{"type":"Assign","children":[27,28]},{"type":"Name","value":"EdgeEndpoint"},{"type":"SubscriptLoad","children":[29,30]},{"type":"Name","value":"Tuple"},{"type":"TupleLoad","children":[31,32]},{"type":"Constant","value":"Node"},{"type":"SubscriptLoad","children":[33,34]},{"type":"Name","value":"Optional"},{"type":"Name","value":"int"},{"type":"Expr","children":[36]},{"type":"Constant","value":"\nType hint for edge's endpoint. The int indicates nodes' order.\n"},{"type":"ClassDef","value":"GraphModelSpace"},{"type":"Assign","children":[39,40]},{"type":"Name","value":"_InputPseudoUid"},{"type":"UnaryOpUSub","children":[41]},{"type":"Constant","value":"1"},{"type":"Assign","children":[43,44]},{"type":"Name","value":"_OutputPseudoUid"},{"type":"UnaryOpUSub","children":[45]},{"type":"Constant","value":"2"},{"type":"ClassDef","value":"Graph"},{"type":"ClassDef","value":"Node"},{"type":"ClassDef","value":"Edge"},{"type":"ClassDef","value":"IllegalGraphError"}]
[{"type":"Module","children":[1,2,3,4,5,6,7,8,12]},{"type":"ImportFrom","value":"typing"},{"type":"ImportFrom","value":"ray.air.config"},{"type":"ImportFrom","value":"ray.train"},{"type":"ImportFrom","value":"ray.train.data_parallel_trainer"},{"type":"ImportFrom","value":"ray.train.horovod.config"},{"type":"ImportFrom","value":"ray.train.trainer"},{"type":"ImportFrom","value":"ray.util.annotations"},{"type":"If","children":[9,10]},{"type":"Name","value":"TYPE_CHECKING"},{"type":"body","children":[11]},{"type":"ImportFrom","value":"ray.data.preprocessor"},{"type":"ClassDef","value":"HorovodTrainer"}]
[{"type":"Module","children":[1,4,7,9,11,13,16,19,29,39,49,52,55,58,61,64,65,66,67,68,69]},{"type":"Import","children":[2]},{"type":"alias","value":"numpy","children":[3]},{"type":"identifier","value":"np"},{"type":"Import","children":[5]},{"type":"alias","value":"tensorflow","children":[6]},{"type":"identifier","value":"tf"},{"type":"Import","children":[8]},{"type":"alias","value":"download"},{"type":"Import","children":[10]},{"type":"alias","value":"os"},{"type":"Import","children":[12]},{"type":"alias","value":"sys"},{"type":"Assign","children":[14,15]},{"type":"Name","value":"data_url"},{"type":"Constant","value":"http://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz"},{"type":"Assign","children":[17,18]},{"type":"Name","value":"data_dir"},{"type":"Constant","value":"inception/"},{"type":"Assign","children":[20,21]},{"type":"Name","value":"path_uid_to_cls"},{"type":"Call","children":[22,27,28]},{"type":"AttributeLoad","children":[23,26]},{"type":"AttributeLoad","children":[24,25]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"join"},{"type":"Name","value":"data_dir"},{"type":"Constant","value":"imagenet_2012_challenge_label_map_proto.pbtxt"},{"type":"Assign","children":[30,31]},{"type":"Name","value":"path_uid_to_name"},{"type":"Call","children":[32,37,38]},{"type":"AttributeLoad","children":[33,36]},{"type":"AttributeLoad","children":[34,35]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"join"},{"type":"Name","value":"data_dir"},{"type":"Constant","value":"imagenet_synset_to_human_label_map.txt"},{"type":"Assign","children":[40,41]},{"type":"Name","value":"path_graph_def"},{"type":"Call","children":[42,47,48]},{"type":"AttributeLoad","children":[43,46]},{"type":"AttributeLoad","children":[44,45]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"join"},{"type":"Name","value":"data_dir"},{"type":"Constant","value":"classify_image_graph_def.pb"},{"type":"Assign","children":[50,51]},{"type":"Name","value":"tensor_name_input_jpeg"},{"type":"Constant","value":"DecodeJpeg/contents:0"},{"type":"Assign","children":[53,54]},{"type":"Name","value":"tensor_name_input_image"},{"type":"Constant","value":"DecodeJpeg:0"},{"type":"Assign","children":[56,57]},{"type":"Name","value":"tensor_name_resized_image"},{"type":"Constant","value":"ResizeBilinear:0"},{"type":"Assign","children":[59,60]},{"type":"Name","value":"tensor_name_softmax"},{"type":"Constant","value":"softmax:0"},{"type":"Assign","children":[62,63]},{"type":"Name","value":"tensor_name_transfer_layer"},{"type":"Constant","value":"pool_3:0"},{"type":"FunctionDef","value":"maybe_download"},{"type":"ClassDef","value":"NameLookup"},{"type":"ClassDef","value":"Inception"},{"type":"FunctionDef","value":"process_images"},{"type":"FunctionDef","value":"transfer_values_cache"},{"type":"If","children":[70,73]},{"type":"CompareEq","children":[71,72]},{"type":"Name","value":"__name__"},{"type":"Constant","value":"__main__"},{"type":"body","children":[74,80,83,87,97,104,111]},{"type":"Expr","children":[75]},{"type":"Call","children":[76,77]},{"type":"Name","value":"print"},{"type":"AttributeLoad","children":[78,79]},{"type":"Name","value":"tf"},{"type":"attr","value":"__version__"},{"type":"Expr","children":[81]},{"type":"Call","children":[82]},{"type":"Name","value":"maybe_download"},{"type":"Assign","children":[84,85]},{"type":"Name","value":"model"},{"type":"Call","children":[86]},{"type":"Name","value":"Inception"},{"type":"Assign","children":[88,89]},{"type":"Name","value":"image_path"},{"type":"Call","children":[90,95,96]},{"type":"AttributeLoad","children":[91,94]},{"type":"AttributeLoad","children":[92,93]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"join"},{"type":"Name","value":"data_dir"},{"type":"Constant","value":"cropped_panda.jpg"},{"type":"Assign","children":[98,99]},{"type":"Name","value":"pred"},{"type":"Call","children":[100,103]},{"type":"AttributeLoad","children":[101,102]},{"type":"Name","value":"model"},{"type":"attr","value":"classify"},{"type":"keyword","value":"image_path"},{"type":"Expr","children":[105]},{"type":"Call","children":[106,109,110]},{"type":"AttributeLoad","children":[107,108]},{"type":"Name","value":"model"},{"type":"attr","value":"print_scores"},{"type":"keyword","value":"pred"},{"type":"keyword","value":"k"},{"type":"Expr","children":[112]},{"type":"Call","children":[113]},{"type":"AttributeLoad","children":[114,115]},{"type":"Name","value":"model"},{"type":"attr","value":"close"}]
[{"type":"Module","children":[1,3,5,8,9,10,11,12,13,14,15,16,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,36,39,42,45,48,51,54,57,60,63,66,69,70,71,72,73,74,75,79,83,86,90,94,97,100,103,106]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Initializers for TF 2."},{"type":"Import","children":[4]},{"type":"alias","value":"math"},{"type":"Import","children":[6]},{"type":"alias","value":"numpy","children":[7]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.init_ops"},{"type":"ImportFrom","value":"tensorflow.python.util.tf_export"},{"type":"Assign","children":[19,20]},{"type":"Name","value":"_PARTITION_SHAPE"},{"type":"Constant","value":"partition_shape"},{"type":"Assign","children":[22,23]},{"type":"Name","value":"_PARTITION_OFFSET"},{"type":"Constant","value":"partition_offset"},{"type":"ClassDef","value":"Initializer"},{"type":"ClassDef","value":"Zeros"},{"type":"ClassDef","value":"Ones"},{"type":"ClassDef","value":"Constant"},{"type":"ClassDef","value":"RandomUniform"},{"type":"ClassDef","value":"RandomNormal"},{"type":"ClassDef","value":"TruncatedNormal"},{"type":"ClassDef","value":"VarianceScaling"},{"type":"ClassDef","value":"Orthogonal"},{"type":"ClassDef","value":"Identity"},{"type":"ClassDef","value":"GlorotUniform"},{"type":"ClassDef","value":"GlorotNormal"},{"type":"Assign","children":[37,38]},{"type":"Name","value":"zeros_initializer"},{"type":"Name","value":"Zeros"},{"type":"Assign","children":[40,41]},{"type":"Name","value":"ones_initializer"},{"type":"Name","value":"Ones"},{"type":"Assign","children":[43,44]},{"type":"Name","value":"constant_initializer"},{"type":"Name","value":"Constant"},{"type":"Assign","children":[46,47]},{"type":"Name","value":"random_uniform_initializer"},{"type":"Name","value":"RandomUniform"},{"type":"Assign","children":[49,50]},{"type":"Name","value":"random_normal_initializer"},{"type":"Name","value":"RandomNormal"},{"type":"Assign","children":[52,53]},{"type":"Name","value":"truncated_normal_initializer"},{"type":"Name","value":"TruncatedNormal"},{"type":"Assign","children":[55,56]},{"type":"Name","value":"variance_scaling_initializer"},{"type":"Name","value":"VarianceScaling"},{"type":"Assign","children":[58,59]},{"type":"Name","value":"glorot_uniform_initializer"},{"type":"Name","value":"GlorotUniform"},{"type":"Assign","children":[61,62]},{"type":"Name","value":"glorot_normal_initializer"},{"type":"Name","value":"GlorotNormal"},{"type":"Assign","children":[64,65]},{"type":"Name","value":"orthogonal_initializer"},{"type":"Name","value":"Orthogonal"},{"type":"Assign","children":[67,68]},{"type":"Name","value":"identity_initializer"},{"type":"Name","value":"Identity"},{"type":"FunctionDef","value":"lecun_normal"},{"type":"FunctionDef","value":"lecun_uniform"},{"type":"FunctionDef","value":"he_normal"},{"type":"FunctionDef","value":"he_uniform"},{"type":"FunctionDef","value":"_assert_float_dtype"},{"type":"ClassDef","value":"_RandomGenerator"},{"type":"Assign","children":[76,77,78]},{"type":"Name","value":"zero"},{"type":"Name","value":"zeros"},{"type":"Name","value":"Zeros"},{"type":"Assign","children":[80,81,82]},{"type":"Name","value":"one"},{"type":"Name","value":"ones"},{"type":"Name","value":"Ones"},{"type":"Assign","children":[84,85]},{"type":"Name","value":"constant"},{"type":"Name","value":"Constant"},{"type":"Assign","children":[87,88,89]},{"type":"Name","value":"uniform"},{"type":"Name","value":"random_uniform"},{"type":"Name","value":"RandomUniform"},{"type":"Assign","children":[91,92,93]},{"type":"Name","value":"normal"},{"type":"Name","value":"random_normal"},{"type":"Name","value":"RandomNormal"},{"type":"Assign","children":[95,96]},{"type":"Name","value":"truncated_normal"},{"type":"Name","value":"TruncatedNormal"},{"type":"Assign","children":[98,99]},{"type":"Name","value":"identity"},{"type":"Name","value":"Identity"},{"type":"Assign","children":[101,102]},{"type":"Name","value":"orthogonal"},{"type":"Name","value":"Orthogonal"},{"type":"Assign","children":[104,105]},{"type":"Name","value":"glorot_normal"},{"type":"Name","value":"GlorotNormal"},{"type":"Assign","children":[107,108]},{"type":"Name","value":"glorot_uniform"},{"type":"Name","value":"GlorotUniform"}]
[{"type":"Module","children":[1,3,6,8,11,12,13]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nWrapper class you can use to make any Keras model compatible with :py:class:`CleanLearning <cleanlab.classification.CleanLearning>` and sklearn.\nUse :py:class:`KerasWrapperModel<cleanlab.experimental.keras.KerasWrapperModel>` to wrap existing functional API code for ``keras.Model`` objects,\nand :py:class:`KerasWrapperSequential<cleanlab.experimental.keras.KerasWrapperSequential>` to wrap existing ``tf.keras.models.Sequential`` objects.\nMost of the instance methods of this class work the same as the ones for the wrapped Keras model,\nsee the `Keras documentation <https://keras.io/>`_ for details.\n\nThis is a good example of making any bespoke neural network compatible with cleanlab.\n\nYou must have `Tensorflow 2 installed <https://www.tensorflow.org/install>`_ (only compatible with Python versions >= 3.7).\nThis wrapper class is only fully compatible with ``tensorflow<2.11``, if using ``tensorflow>=2.11``, \nplease replace your Optimizer class with the legacy Optimizer `here <https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/legacy/Optimizer>`_.\n\nTips:\n\n* If this class lacks certain functionality, you can alternatively try `scikeras <https://github.com/adriangb/scikeras>`_.\n* Unlike scikeras, our `KerasWrapper` classes can operate directly on ``tensorflow.data.Dataset`` objects (like regular Keras models).\n* To call ``fit()`` on a tensorflow ``Dataset`` object with a Keras model, the ``Dataset`` should already be batched.\n* Check out our example using this class: `huggingface_keras_imdb <https://github.com/cleanlab/examples/blob/master/huggingface_keras_imdb/huggingface_keras_imdb.ipynb>`_\n* Our `unit tests <https://github.com/cleanlab/cleanlab/blob/master/tests/test_frameworks.py>`_ also provide basic usage examples.\n\n"},{"type":"Import","children":[4]},{"type":"alias","value":"tensorflow","children":[5]},{"type":"identifier","value":"tf"},{"type":"Import","children":[7]},{"type":"alias","value":"keras"},{"type":"Import","children":[9]},{"type":"alias","value":"numpy","children":[10]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"typing"},{"type":"ClassDef","value":"KerasWrapperModel"},{"type":"ClassDef","value":"KerasWrapperSequential"}]
[{"type":"Module","children":[1,3,6,9,10,11,12,13,14,15,16,17,18,19,20,21]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Layers for a progressive GAN model.\n\nThis module contains basic building blocks to build a progressive GAN model.\n\nSee https://arxiv.org/abs/1710.10196 for details about the model.\n\nSee https://github.com/tkarras/progressive_growing_of_gans for the original\ntheano implementation.\n"},{"type":"Import","children":[4]},{"type":"alias","value":"numpy","children":[5]},{"type":"identifier","value":"np"},{"type":"Import","children":[7]},{"type":"alias","value":"tensorflow.compat.v1","children":[8]},{"type":"identifier","value":"tf"},{"type":"FunctionDef","value":"pixel_norm"},{"type":"FunctionDef","value":"_get_validated_scale"},{"type":"FunctionDef","value":"downscale"},{"type":"FunctionDef","value":"upscale"},{"type":"FunctionDef","value":"downscale_height"},{"type":"FunctionDef","value":"upscale_height"},{"type":"FunctionDef","value":"minibatch_mean_stddev"},{"type":"FunctionDef","value":"scalar_concat"},{"type":"FunctionDef","value":"he_initializer_scale"},{"type":"FunctionDef","value":"debugprint"},{"type":"FunctionDef","value":"_custom_layer_impl"},{"type":"FunctionDef","value":"custom_conv2d"},{"type":"FunctionDef","value":"custom_dense"}]
[{"type":"Module","children":[1,2,3,5,6,8,10,11,12,13,14,15,16,17,18,19,20,21,25,26,27]},{"type":"ImportFrom","value":"collections"},{"type":"ImportFrom","value":"functools"},{"type":"Import","children":[4]},{"type":"alias","value":"pathlib"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[7]},{"type":"alias","value":"uuid"},{"type":"Import","children":[9]},{"type":"alias","value":"ray"},{"type":"ImportFrom","value":"ray.rllib.core.learner.reduce_result_dict_fn"},{"type":"ImportFrom","value":"ray.rllib.core.rl_module.rl_module"},{"type":"ImportFrom","value":"ray.rllib.core.learner.learner"},{"type":"ImportFrom","value":"ray.rllib.policy.sample_batch"},{"type":"ImportFrom","value":"ray.rllib.utils.actor_manager"},{"type":"ImportFrom","value":"ray.rllib.utils.minibatch_utils"},{"type":"ImportFrom","value":"ray.rllib.utils.typing"},{"type":"ImportFrom","value":"ray.rllib.utils.numpy"},{"type":"ImportFrom","value":"ray.train._internal.backend_executor"},{"type":"ImportFrom","value":"ray.tune.utils.file_transfer"},{"type":"ImportFrom","value":"ray.util.annotations"},{"type":"If","children":[22,23]},{"type":"Name","value":"TYPE_CHECKING"},{"type":"body","children":[24]},{"type":"ImportFrom","value":"ray.rllib.core.learner.learner"},{"type":"FunctionDef","value":"_get_backend_config"},{"type":"FunctionDef","value":"_is_module_trainable"},{"type":"ClassDef","value":"LearnerGroup"}]
[{"type":"Module","children":[1,3,4]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Loss operations for use in neural networks.\n\nNote: All the losses are added to the `GraphKeys.LOSSES` collection by default.\n\nAPI docstring: tensorflow.losses\n"},{"type":"ImportFrom","value":"tensorflow.python.ops.losses.losses_impl"},{"type":"ImportFrom","value":"tensorflow.python.ops.losses.util"}]
[{"type":"Module","children":[1,3,8,9,10]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Multi Channel Deep Convolution Neural Network (MCDCNN)."},{"type":"Assign","children":[4,5]},{"type":"Name","value":"__author__"},{"type":"ListLoad","children":[6,7]},{"type":"Constant","value":"James Large"},{"type":"Constant","value":"Withington"},{"type":"ImportFrom","value":"sktime.networks.base"},{"type":"ImportFrom","value":"sktime.utils.validation._dependencies"},{"type":"ClassDef","value":"MCDCNNNetwork"}]
[{"type":"Module","children":[1,3,4,5,6,8,9,10,11,14,15,23,31,39,47,55,63,71,79,87,95,103,111,119,124,125,126,127,128,129,130,131]},{"type":"Expr","children":[2]},{"type":"Constant","value":"MNIST model training using TPUs.\n\nThis program demonstrates training of the convolutional neural network model\ndefined in mnist.py on Google Cloud TPUs (https://cloud.google.com/tpu/).\n\nIf you are not interested in TPUs, you should ignore this file.\n"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[7]},{"type":"alias","value":"os"},{"type":"ImportFrom","value":"absl"},{"type":"ImportFrom","value":"absl"},{"type":"ImportFrom","value":"absl"},{"type":"Import","children":[12]},{"type":"alias","value":"tensorflow.compat.v1","children":[13]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"tensorflow.compat.v1"},{"type":"Expr","children":[16]},{"type":"Call","children":[17,20,21,22]},{"type":"AttributeLoad","children":[18,19]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"tpu"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[24]},{"type":"Call","children":[25,28,29,30]},{"type":"AttributeLoad","children":[26,27]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"tpu_zone"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[32]},{"type":"Call","children":[33,36,37,38]},{"type":"AttributeLoad","children":[34,35]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"gcp_project"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[40]},{"type":"Call","children":[41,44,45,46]},{"type":"AttributeLoad","children":[42,43]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"data_dir"},{"type":"Constant","value":""},{"type":"Constant","value":"Path to directory containing the MNIST dataset"},{"type":"Expr","children":[48]},{"type":"Call","children":[49,52,53,54]},{"type":"AttributeLoad","children":[50,51]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_string"},{"type":"Constant","value":"model_dir"},{"type":"Constant","value":"None"},{"type":"Constant","value":"Estimator model_dir"},{"type":"Expr","children":[56]},{"type":"Call","children":[57,60,61,62]},{"type":"AttributeLoad","children":[58,59]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"batch_size"},{"type":"Constant","value":"1024"},{"type":"Constant","value":"Mini-batch size for the training. Note that this is the global batch size and not the per-shard batch."},{"type":"Expr","children":[64]},{"type":"Call","children":[65,68,69,70]},{"type":"AttributeLoad","children":[66,67]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"train_steps"},{"type":"Constant","value":"1000"},{"type":"Constant","value":"Total number of training steps."},{"type":"Expr","children":[72]},{"type":"Call","children":[73,76,77,78]},{"type":"AttributeLoad","children":[74,75]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"eval_steps"},{"type":"Constant","value":"0"},{"type":"Constant","value":"Total number of evaluation steps. If `0`, evaluation after training is skipped."},{"type":"Expr","children":[80]},{"type":"Call","children":[81,84,85,86]},{"type":"AttributeLoad","children":[82,83]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_float"},{"type":"Constant","value":"learning_rate"},{"type":"Constant","value":"0.05"},{"type":"Constant","value":"Learning rate."},{"type":"Expr","children":[88]},{"type":"Call","children":[89,92,93,94]},{"type":"AttributeLoad","children":[90,91]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_bool"},{"type":"Constant","value":"use_tpu"},{"type":"Constant","value":"True"},{"type":"Constant","value":"Use TPUs rather than plain CPUs"},{"type":"Expr","children":[96]},{"type":"Call","children":[97,100,101,102]},{"type":"AttributeLoad","children":[98,99]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_bool"},{"type":"Constant","value":"enable_predict"},{"type":"Constant","value":"True"},{"type":"Constant","value":"Do some predictions at the end"},{"type":"Expr","children":[104]},{"type":"Call","children":[105,108,109,110]},{"type":"AttributeLoad","children":[106,107]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"iterations"},{"type":"Constant","value":"50"},{"type":"Constant","value":"Number of iterations per TPU training loop."},{"type":"Expr","children":[112]},{"type":"Call","children":[113,116,117,118]},{"type":"AttributeLoad","children":[114,115]},{"type":"Name","value":"flags"},{"type":"attr","value":"DEFINE_integer"},{"type":"Constant","value":"num_shards"},{"type":"Constant","value":"8"},{"type":"Constant","value":"Number of shards (TPU chips)."},{"type":"Assign","children":[120,121]},{"type":"Name","value":"FLAGS"},{"type":"AttributeLoad","children":[122,123]},{"type":"Name","value":"flags"},{"type":"attr","value":"FLAGS"},{"type":"FunctionDef","value":"metric_fn"},{"type":"FunctionDef","value":"model_fn"},{"type":"FunctionDef","value":"dataset"},{"type":"FunctionDef","value":"train_input_fn"},{"type":"FunctionDef","value":"eval_input_fn"},{"type":"FunctionDef","value":"predict_input_fn"},{"type":"FunctionDef","value":"main"},{"type":"If","children":[132,135]},{"type":"CompareEq","children":[133,134]},{"type":"Name","value":"__name__"},{"type":"Constant","value":"__main__"},{"type":"body","children":[136]},{"type":"Expr","children":[137]},{"type":"Call","children":[138,141]},{"type":"AttributeLoad","children":[139,140]},{"type":"Name","value":"app"},{"type":"attr","value":"run"},{"type":"Name","value":"main"}]
[{"type":"Module","children":[1,3,5,6,10,11,12,13,14,15,20,21,23,121,123,271,273,501,689,691,974,976,1174,1392,1610,1810,1998,2021,2022,2023,2024]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Contains definitions of MobileNet Networks."},{"type":"Import","children":[4]},{"type":"alias","value":"dataclasses"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[7,9]},{"type":"alias","value":"tensorflow","children":[8]},{"type":"identifier","value":"tf"},{"type":"alias","value":"tf_keras"},{"type":"ImportFrom","value":"official.modeling"},{"type":"ImportFrom","value":"official.modeling"},{"type":"ImportFrom","value":"official.vision.modeling.backbones"},{"type":"ImportFrom","value":"official.vision.modeling.layers"},{"type":"ImportFrom","value":"official.vision.modeling.layers"},{"type":"Assign","children":[16,17]},{"type":"Name","value":"layers"},{"type":"AttributeLoad","children":[18,19]},{"type":"Name","value":"tf_keras"},{"type":"attr","value":"layers"},{"type":"ClassDef","value":"Conv2DBNBlock"},{"type":"Expr","children":[22]},{"type":"Constant","value":"\nArchitecture: https://arxiv.org/abs/1704.04861.\n\n\"MobileNets: Efficient Convolutional Neural Networks for Mobile Vision\nApplications\" Andrew G. Howard, Menglong Zhu, Bo Chen, Dmitry Kalenichenko,\nWeijun Wang, Tobias Weyand, Marco Andreetto, Hartwig Adam\n"},{"type":"Assign","children":[24,25]},{"type":"Name","value":"MNV1_BLOCK_SPECS"},{"type":"Dict","children":[26,27,28,29,30,36]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetV1"},{"type":"ListLoad","children":[31,32,33,34,35]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[37,43,49,55,61,67,73,79,85,91,97,103,109,115]},{"type":"TupleLoad","children":[38,39,40,41,42]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[44,45,46,47,48]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[50,51,52,53,54]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"128"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[56,57,58,59,60]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[62,63,64,65,66]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"256"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[68,69,70,71,72]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"256"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[74,75,76,77,78]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"512"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[80,81,82,83,84]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"512"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[86,87,88,89,90]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"512"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[92,93,94,95,96]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"512"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[98,99,100,101,102]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"512"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[104,105,106,107,108]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"512"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[110,111,112,113,114]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"1024"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[116,117,118,119,120]},{"type":"Constant","value":"depsepconv"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1024"},{"type":"Constant","value":"True"},{"type":"Expr","children":[122]},{"type":"Constant","value":"\nArchitecture: https://arxiv.org/abs/1801.04381\n\n\"MobileNetV2: Inverted Residuals and Linear Bottlenecks\"\nMark Sandler, Andrew Howard, Menglong Zhu, Andrey Zhmoginov, Liang-Chieh Chen\n"},{"type":"Assign","children":[124,125]},{"type":"Name","value":"MNV2_BLOCK_SPECS"},{"type":"Dict","children":[126,127,128,129,130,137]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetV2"},{"type":"ListLoad","children":[131,132,133,134,135,136]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[138,145,152,159,166,173,180,187,194,201,208,215,222,229,236,243,250,257,264]},{"type":"TupleLoad","children":[139,140,141,142,143,144]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[146,147,148,149,150,151]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"16"},{"type":"Constant","value":"1.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[153,154,155,156,157,158]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"24"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[160,161,162,163,164,165]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"24"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[167,168,169,170,171,172]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[174,175,176,177,178,179]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"32"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[181,182,183,184,185,186]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"32"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[188,189,190,191,192,193]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"64"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[195,196,197,198,199,200]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[202,203,204,205,206,207]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[209,210,211,212,213,214]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[216,217,218,219,220,221]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[223,224,225,226,227,228]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[230,231,232,233,234,235]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[237,238,239,240,241,242]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"160"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[244,245,246,247,248,249]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[251,252,253,254,255,256]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[258,259,260,261,262,263]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"320"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[265,266,267,268,269,270]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1280"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Expr","children":[272]},{"type":"Constant","value":"\nArchitecture: https://arxiv.org/abs/1905.02244\n\n\"Searching for MobileNetV3\"\nAndrew Howard, Mark Sandler, Grace Chu, Liang-Chieh Chen, Bo Chen, Mingxing Tan,\nWeijun Wang, Yukun Zhu, Ruoming Pang, Vijay Vasudevan, Quoc V. Le, Hartwig Adam\n"},{"type":"Assign","children":[274,275]},{"type":"Name","value":"MNV3Large_BLOCK_SPECS"},{"type":"Dict","children":[276,277,278,279,280,291]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetV3Large"},{"type":"ListLoad","children":[281,282,283,284,285,286,287,288,289,290]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"se_ratio"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"use_normalization"},{"type":"Constant","value":"use_bias"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[292,303,314,325,336,347,358,369,380,391,402,413,424,435,446,457,468,479,490]},{"type":"TupleLoad","children":[293,294,295,296,297,298,299,300,301,302]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"16"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[304,305,306,307,308,309,310,311,312,313]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"16"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"1.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[315,316,317,318,319,320,321,322,323,324]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"24"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[326,327,328,329,330,331,332,333,334,335]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"24"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[337,338,339,340,341,342,343,344,345,346]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"40"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[348,349,350,351,352,353,354,355,356,357]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"40"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[359,360,361,362,363,364,365,366,367,368]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"40"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[370,371,372,373,374,375,376,377,378,379]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"80"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[381,382,383,384,385,386,387,388,389,390]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"80"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"2.5"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[392,393,394,395,396,397,398,399,400,401]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"80"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"2.3"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[403,404,405,406,407,408,409,410,411,412]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"80"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"2.3"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[414,415,416,417,418,419,420,421,422,423]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"112"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[425,426,427,428,429,430,431,432,433,434]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"112"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[436,437,438,439,440,441,442,443,444,445]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"160"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[447,448,449,450,451,452,453,454,455,456]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[458,459,460,461,462,463,464,465,466,467]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[469,470,471,472,473,474,475,476,477,478]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"960"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[480,481,482,483,484,485,486,487,488,489]},{"type":"Constant","value":"gpooling"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[491,492,493,494,495,496,497,498,499,500]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1280"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Assign","children":[502,503]},{"type":"Name","value":"MNV3Small_BLOCK_SPECS"},{"type":"Dict","children":[504,505,506,507,508,519]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetV3Small"},{"type":"ListLoad","children":[509,510,511,512,513,514,515,516,517,518]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"se_ratio"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"use_normalization"},{"type":"Constant","value":"use_bias"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[520,531,542,555,568,579,590,601,612,623,634,645,656,667,678]},{"type":"TupleLoad","children":[521,522,523,524,525,526,527,528,529,530]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"16"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[532,533,534,535,536,537,538,539,540,541]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"16"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"1"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[543,544,545,546,547,548,549,552,553,554]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"24"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"BinOpDiv","children":[550,551]},{"type":"Constant","value":"72.0"},{"type":"Constant","value":"16"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[556,557,558,559,560,561,562,565,566,567]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"24"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"BinOpDiv","children":[563,564]},{"type":"Constant","value":"88.0"},{"type":"Constant","value":"24"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[569,570,571,572,573,574,575,576,577,578]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"40"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[580,581,582,583,584,585,586,587,588,589]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"40"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[591,592,593,594,595,596,597,598,599,600]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"40"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[602,603,604,605,606,607,608,609,610,611]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[613,614,615,616,617,618,619,620,621,622]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[624,625,626,627,628,629,630,631,632,633]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"96"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[635,636,637,638,639,640,641,642,643,644]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[646,647,648,649,650,651,652,653,654,655]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[657,658,659,660,661,662,663,664,665,666]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"576"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[668,669,670,671,672,673,674,675,676,677]},{"type":"Constant","value":"gpooling"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[679,680,681,682,683,684,685,686,687,688]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1024"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Expr","children":[690]},{"type":"Constant","value":"\nThe EdgeTPU version is taken from\ngithub.com/tensorflow/models/blob/master/research/slim/nets/mobilenet/mobilenet_v3.py\n"},{"type":"Assign","children":[692,693]},{"type":"Name","value":"MNV3EdgeTPU_BLOCK_SPECS"},{"type":"Dict","children":[694,695,696,697,698,709]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetV3EdgeTPU"},{"type":"ListLoad","children":[699,700,701,702,703,704,705,706,707,708]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"se_ratio"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"use_residual"},{"type":"Constant","value":"use_depthwise"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[710,721,732,743,754,765,776,787,798,809,820,831,842,853,864,875,886,897,908,919,930,941,952,963]},{"type":"TupleLoad","children":[711,712,713,714,715,716,717,718,719,720]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[722,723,724,725,726,727,728,729,730,731]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"16"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"1.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[733,734,735,736,737,738,739,740,741,742]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"8.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[744,745,746,747,748,749,750,751,752,753]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[755,756,757,758,759,760,761,762,763,764]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[766,767,768,769,770,771,772,773,774,775]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[777,778,779,780,781,782,783,784,785,786]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"48"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"8.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[788,789,790,791,792,793,794,795,796,797]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[799,800,801,802,803,804,805,806,807,808]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[810,811,812,813,814,815,816,817,818,819]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[821,822,823,824,825,826,827,828,829,830]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"8.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[832,833,834,835,836,837,838,839,840,841]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[843,844,845,846,847,848,849,850,851,852]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[854,855,856,857,858,859,860,861,862,863]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[865,866,867,868,869,870,871,872,873,874]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"8.0"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[876,877,878,879,880,881,882,883,884,885]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[887,888,889,890,891,892,893,894,895,896]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[898,899,900,901,902,903,904,905,906,907]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[909,910,911,912,913,914,915,916,917,918]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"8.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[920,921,922,923,924,925,926,927,928,929]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[931,932,933,934,935,936,937,938,939,940]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[942,943,944,945,946,947,948,949,950,951]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[953,954,955,956,957,958,959,960,961,962]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"192"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"8.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[964,965,966,967,968,969,970,971,972,973]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1280"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Expr","children":[975]},{"type":"Constant","value":"\nArchitecture: https://arxiv.org/pdf/2008.08178.pdf\n\n\"Discovering Multi-Hardware Mobile Models via Architecture Search\"\nGrace Chu, Okan Arikan, Gabriel Bender, Weijun Wang,\nAchille Brighton, Pieter-Jan Kindermans, Hanxiao Liu,\nBerkin Akin, Suyog Gupta, and Andrew Howard\n"},{"type":"Assign","children":[977,978]},{"type":"Name","value":"MNMultiMAX_BLOCK_SPECS"},{"type":"Dict","children":[979,980,981,982,983,993]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetMultiMAX"},{"type":"ListLoad","children":[984,985,986,987,988,989,990,991,992]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"use_normalization"},{"type":"Constant","value":"use_bias"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[994,1004,1014,1024,1034,1044,1054,1064,1074,1084,1094,1104,1114,1124,1134,1144,1154,1164]},{"type":"TupleLoad","children":[995,996,997,998,999,1000,1001,1002,1003]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1005,1006,1007,1008,1009,1010,1011,1012,1013]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1015,1016,1017,1018,1019,1020,1021,1022,1023]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1025,1026,1027,1028,1029,1030,1031,1032,1033]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1035,1036,1037,1038,1039,1040,1041,1042,1043]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1045,1046,1047,1048,1049,1050,1051,1052,1053]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1055,1056,1057,1058,1059,1060,1061,1062,1063]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1065,1066,1067,1068,1069,1070,1071,1072,1073]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1075,1076,1077,1078,1079,1080,1081,1082,1083]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1085,1086,1087,1088,1089,1090,1091,1092,1093]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1095,1096,1097,1098,1099,1100,1101,1102,1103]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1105,1106,1107,1108,1109,1110,1111,1112,1113]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1115,1116,1117,1118,1119,1120,1121,1122,1123]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1125,1126,1127,1128,1129,1130,1131,1132,1133]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"5.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1135,1136,1137,1138,1139,1140,1141,1142,1143]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1145,1146,1147,1148,1149,1150,1151,1152,1153]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"960"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1155,1156,1157,1158,1159,1160,1161,1162,1163]},{"type":"Constant","value":"gpooling"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1165,1166,1167,1168,1169,1170,1171,1172,1173]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1280"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"Assign","children":[1175,1176]},{"type":"Name","value":"MNMultiAVG_BLOCK_SPECS"},{"type":"Dict","children":[1177,1178,1179,1180,1181,1191]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetMultiAVG"},{"type":"ListLoad","children":[1182,1183,1184,1185,1186,1187,1188,1189,1190]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"use_normalization"},{"type":"Constant","value":"use_bias"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[1192,1202,1212,1222,1232,1242,1252,1262,1272,1282,1292,1302,1312,1322,1332,1342,1352,1362,1372,1382]},{"type":"TupleLoad","children":[1193,1194,1195,1196,1197,1198,1199,1200,1201]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1203,1204,1205,1206,1207,1208,1209,1210,1211]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1213,1214,1215,1216,1217,1218,1219,1220,1221]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1223,1224,1225,1226,1227,1228,1229,1230,1231]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"5.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1233,1234,1235,1236,1237,1238,1239,1240,1241]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1243,1244,1245,1246,1247,1248,1249,1250,1251]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1253,1254,1255,1256,1257,1258,1259,1260,1261]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1263,1264,1265,1266,1267,1268,1269,1270,1271]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1273,1274,1275,1276,1277,1278,1279,1280,1281]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1283,1284,1285,1286,1287,1288,1289,1290,1291]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1293,1294,1295,1296,1297,1298,1299,1300,1301]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1303,1304,1305,1306,1307,1308,1309,1310,1311]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1313,1314,1315,1316,1317,1318,1319,1320,1321]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1323,1324,1325,1326,1327,1328,1329,1330,1331]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"192"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1333,1334,1335,1336,1337,1338,1339,1340,1341]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"192"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1343,1344,1345,1346,1347,1348,1349,1350,1351]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"192"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1353,1354,1355,1356,1357,1358,1359,1360,1361]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"192"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1363,1364,1365,1366,1367,1368,1369,1370,1371]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"960"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1373,1374,1375,1376,1377,1378,1379,1380,1381]},{"type":"Constant","value":"gpooling"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1383,1384,1385,1386,1387,1388,1389,1390,1391]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1280"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"Assign","children":[1393,1394]},{"type":"Name","value":"MNMultiAVG_SEG_BLOCK_SPECS"},{"type":"Dict","children":[1395,1396,1397,1398,1399,1409]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetMultiAVGSeg"},{"type":"ListLoad","children":[1400,1401,1402,1403,1404,1405,1406,1407,1408]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"use_normalization"},{"type":"Constant","value":"use_bias"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[1410,1420,1430,1440,1450,1460,1470,1480,1490,1500,1510,1520,1530,1540,1550,1560,1570,1580,1590,1600]},{"type":"TupleLoad","children":[1411,1412,1413,1414,1415,1416,1417,1418,1419]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1421,1422,1423,1424,1425,1426,1427,1428,1429]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1431,1432,1433,1434,1435,1436,1437,1438,1439]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1441,1442,1443,1444,1445,1446,1447,1448,1449]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"5.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1451,1452,1453,1454,1455,1456,1457,1458,1459]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1461,1462,1463,1464,1465,1466,1467,1468,1469]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1471,1472,1473,1474,1475,1476,1477,1478,1479]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1481,1482,1483,1484,1485,1486,1487,1488,1489]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1491,1492,1493,1494,1495,1496,1497,1498,1499]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1501,1502,1503,1504,1505,1506,1507,1508,1509]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1511,1512,1513,1514,1515,1516,1517,1518,1519]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1521,1522,1523,1524,1525,1526,1527,1528,1529]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1531,1532,1533,1534,1535,1536,1537,1538,1539]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1541,1542,1543,1544,1545,1546,1547,1548,1549]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"192"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1551,1552,1553,1554,1555,1556,1557,1558,1559]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1561,1562,1563,1564,1565,1566,1567,1568,1569]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1571,1572,1573,1574,1575,1576,1577,1578,1579]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1581,1582,1583,1584,1585,1586,1587,1588,1589]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"448"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1591,1592,1593,1594,1595,1596,1597,1598,1599]},{"type":"Constant","value":"gpooling"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1601,1602,1603,1604,1605,1606,1607,1608,1609]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1280"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"Assign","children":[1611,1612]},{"type":"Name","value":"MNMultiMAX_SEG_BLOCK_SPECS"},{"type":"Dict","children":[1613,1614,1615,1616,1617,1627]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobileNetMultiMAXSeg"},{"type":"ListLoad","children":[1618,1619,1620,1621,1622,1623,1624,1625,1626]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"use_normalization"},{"type":"Constant","value":"use_bias"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[1628,1638,1648,1658,1668,1678,1688,1698,1708,1718,1728,1738,1748,1758,1768,1780,1790,1800]},{"type":"TupleLoad","children":[1629,1630,1631,1632,1633,1634,1635,1636,1637]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1639,1640,1641,1642,1643,1644,1645,1646,1647]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"32"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1649,1650,1651,1652,1653,1654,1655,1656,1657]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1659,1660,1661,1662,1663,1664,1665,1666,1667]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1669,1670,1671,1672,1673,1674,1675,1676,1677]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"64"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1679,1680,1681,1682,1683,1684,1685,1686,1687]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1689,1690,1691,1692,1693,1694,1695,1696,1697]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1699,1700,1701,1702,1703,1704,1705,1706,1707]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1709,1710,1711,1712,1713,1714,1715,1716,1717]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1719,1720,1721,1722,1723,1724,1725,1726,1727]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1729,1730,1731,1732,1733,1734,1735,1736,1737]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"128"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"3.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1739,1740,1741,1742,1743,1744,1745,1746,1747]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"160"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"6.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1749,1750,1751,1752,1753,1754,1755,1756,1757]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"2.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1759,1760,1761,1762,1763,1764,1765,1766,1767]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"4.0"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1769,1770,1771,1772,1773,1774,1777,1778,1779]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"96"},{"type":"Constant","value":"relu"},{"type":"BinOpDiv","children":[1775,1776]},{"type":"Constant","value":"320.0"},{"type":"Constant","value":"96"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1781,1782,1783,1784,1785,1786,1787,1788,1789]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"448"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1791,1792,1793,1794,1795,1796,1797,1798,1799]},{"type":"Constant","value":"gpooling"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1801,1802,1803,1804,1805,1806,1807,1808,1809]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1280"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"Assign","children":[1811,1812]},{"type":"Name","value":"MNV3SmallReducedFilters"},{"type":"Dict","children":[1813,1814,1815,1816,1817,1828]},{"type":"Constant","value":"spec_name"},{"type":"Constant","value":"block_spec_schema"},{"type":"Constant","value":"block_specs"},{"type":"Constant","value":"MobilenetV3SmallReducedFilters"},{"type":"ListLoad","children":[1818,1819,1820,1821,1822,1823,1824,1825,1826,1827]},{"type":"Constant","value":"block_fn"},{"type":"Constant","value":"kernel_size"},{"type":"Constant","value":"strides"},{"type":"Constant","value":"filters"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"se_ratio"},{"type":"Constant","value":"expand_ratio"},{"type":"Constant","value":"use_normalization"},{"type":"Constant","value":"use_bias"},{"type":"Constant","value":"is_output"},{"type":"ListLoad","children":[1829,1840,1851,1864,1877,1888,1899,1910,1921,1932,1943,1954,1965,1976,1987]},{"type":"TupleLoad","children":[1830,1831,1832,1833,1834,1835,1836,1837,1838,1839]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"16"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1841,1842,1843,1844,1845,1846,1847,1848,1849,1850]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"16"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"1"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1852,1853,1854,1855,1856,1857,1858,1861,1862,1863]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"2"},{"type":"Constant","value":"24"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"BinOpDiv","children":[1859,1860]},{"type":"Constant","value":"72.0"},{"type":"Constant","value":"16"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1865,1866,1867,1868,1869,1870,1871,1874,1875,1876]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"3"},{"type":"Constant","value":"1"},{"type":"Constant","value":"24"},{"type":"Constant","value":"relu"},{"type":"Constant","value":"None"},{"type":"BinOpDiv","children":[1872,1873]},{"type":"Constant","value":"88.0"},{"type":"Constant","value":"24"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1878,1879,1880,1881,1882,1883,1884,1885,1886,1887]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"40"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"4"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1889,1890,1891,1892,1893,1894,1895,1896,1897,1898]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"40"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1900,1901,1902,1903,1904,1905,1906,1907,1908,1909]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"40"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1911,1912,1913,1914,1915,1916,1917,1918,1919,1920]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"3"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1922,1923,1924,1925,1926,1927,1928,1929,1930,1931]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"3"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1933,1934,1935,1936,1937,1938,1939,1940,1941,1942]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"2"},{"type":"Constant","value":"48"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"3"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1944,1945,1946,1947,1948,1949,1950,1951,1952,1953]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1955,1956,1957,1958,1959,1960,1961,1962,1963,1964]},{"type":"Constant","value":"invertedbottleneck"},{"type":"Constant","value":"5"},{"type":"Constant","value":"1"},{"type":"Constant","value":"48"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"0.25"},{"type":"Constant","value":"6"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"TupleLoad","children":[1966,1967,1968,1969,1970,1971,1972,1973,1974,1975]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"288"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1977,1978,1979,1980,1981,1982,1983,1984,1985,1986]},{"type":"Constant","value":"gpooling"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"TupleLoad","children":[1988,1989,1990,1991,1992,1993,1994,1995,1996,1997]},{"type":"Constant","value":"convbn"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1"},{"type":"Constant","value":"1024"},{"type":"Constant","value":"hard_swish"},{"type":"Constant","value":"None"},{"type":"Constant","value":"None"},{"type":"Constant","value":"False"},{"type":"Constant","value":"True"},{"type":"Constant","value":"False"},{"type":"Assign","children":[1999,2000]},{"type":"Name","value":"SUPPORTED_SPECS_MAP"},{"type":"Dict","children":[2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020]},{"type":"Constant","value":"MobileNetV1"},{"type":"Constant","value":"MobileNetV2"},{"type":"Constant","value":"MobileNetV3Large"},{"type":"Constant","value":"MobileNetV3Small"},{"type":"Constant","value":"MobileNetV3EdgeTPU"},{"type":"Constant","value":"MobileNetMultiMAX"},{"type":"Constant","value":"MobileNetMultiAVG"},{"type":"Constant","value":"MobileNetMultiAVGSeg"},{"type":"Constant","value":"MobileNetMultiMAXSeg"},{"type":"Constant","value":"MobileNetV3SmallReducedFilters"},{"type":"Name","value":"MNV1_BLOCK_SPECS"},{"type":"Name","value":"MNV2_BLOCK_SPECS"},{"type":"Name","value":"MNV3Large_BLOCK_SPECS"},{"type":"Name","value":"MNV3Small_BLOCK_SPECS"},{"type":"Name","value":"MNV3EdgeTPU_BLOCK_SPECS"},{"type":"Name","value":"MNMultiMAX_BLOCK_SPECS"},{"type":"Name","value":"MNMultiAVG_BLOCK_SPECS"},{"type":"Name","value":"MNMultiAVG_SEG_BLOCK_SPECS"},{"type":"Name","value":"MNMultiMAX_SEG_BLOCK_SPECS"},{"type":"Name","value":"MNV3SmallReducedFilters"},{"type":"ClassDef","value":"BlockSpec"},{"type":"FunctionDef","value":"block_spec_decoder"},{"type":"ClassDef","value":"MobileNet"},{"type":"FunctionDef","value":"build_mobilenet"}]
[{"type":"Module","children":[1,3,4,6,9,10,11,12,13,14]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nThe Model class and related functionality.\n"},{"type":"ImportFrom","value":"abc"},{"type":"Import","children":[5]},{"type":"alias","value":"warnings"},{"type":"Import","children":[7]},{"type":"alias","value":"tensorflow","children":[8]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"cleverhans"},{"type":"ClassDef","value":"Model"},{"type":"ClassDef","value":"CallableModelWrapper"},{"type":"FunctionDef","value":"wrapper_warning"},{"type":"FunctionDef","value":"wrapper_warning_logits"},{"type":"ClassDef","value":"NoSuchLayerError"}]
[{"type":"Module","children":[1,3,5,6,8,10,11,12,13,14,15,16,17,24,27,30,37,40,43,47,48,49,50,51,52,53,54,55,56,59,62,63,64]},{"type":"Expr","children":[2]},{"type":"Constant","value":" PyTorch PoolFormer model."},{"type":"Import","children":[4]},{"type":"alias","value":"collections.abc"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[7]},{"type":"alias","value":"torch"},{"type":"Import","children":[9]},{"type":"alias","value":"torch.utils.checkpoint"},{"type":"ImportFrom","value":"torch"},{"type":"ImportFrom","value":"torch.nn"},{"type":"ImportFrom","value":"activations"},{"type":"ImportFrom","value":"modeling_outputs"},{"type":"ImportFrom","value":"modeling_utils"},{"type":"ImportFrom","value":"utils"},{"type":"ImportFrom","value":"configuration_poolformer"},{"type":"Assign","children":[18,19]},{"type":"Name","value":"logger"},{"type":"Call","children":[20,23]},{"type":"AttributeLoad","children":[21,22]},{"type":"Name","value":"logging"},{"type":"attr","value":"get_logger"},{"type":"Name","value":"__name__"},{"type":"Assign","children":[25,26]},{"type":"Name","value":"_CONFIG_FOR_DOC"},{"type":"Constant","value":"PoolFormerConfig"},{"type":"Assign","children":[28,29]},{"type":"Name","value":"_CHECKPOINT_FOR_DOC"},{"type":"Constant","value":"sail/poolformer_s12"},{"type":"Assign","children":[31,32]},{"type":"Name","value":"_EXPECTED_OUTPUT_SHAPE"},{"type":"ListLoad","children":[33,34,35,36]},{"type":"Constant","value":"1"},{"type":"Constant","value":"512"},{"type":"Constant","value":"7"},{"type":"Constant","value":"7"},{"type":"Assign","children":[38,39]},{"type":"Name","value":"_IMAGE_CLASS_CHECKPOINT"},{"type":"Constant","value":"sail/poolformer_s12"},{"type":"Assign","children":[41,42]},{"type":"Name","value":"_IMAGE_CLASS_EXPECTED_OUTPUT"},{"type":"Constant","value":"tabby, tabby cat"},{"type":"Assign","children":[44,45]},{"type":"Name","value":"POOLFORMER_PRETRAINED_MODEL_ARCHIVE_LIST"},{"type":"ListLoad","children":[46]},{"type":"Constant","value":"sail/poolformer_s12"},{"type":"FunctionDef","value":"drop_path"},{"type":"ClassDef","value":"PoolFormerDropPath"},{"type":"ClassDef","value":"PoolFormerEmbeddings"},{"type":"ClassDef","value":"PoolFormerGroupNorm"},{"type":"ClassDef","value":"PoolFormerPooling"},{"type":"ClassDef","value":"PoolFormerOutput"},{"type":"ClassDef","value":"PoolFormerLayer"},{"type":"ClassDef","value":"PoolFormerEncoder"},{"type":"ClassDef","value":"PoolFormerPreTrainedModel"},{"type":"Assign","children":[57,58]},{"type":"Name","value":"POOLFORMER_START_DOCSTRING"},{"type":"Constant","value":"\n    This model is a PyTorch [torch.nn.Module](https://pytorch.org/docs/stable/nn.html#torch.nn.Module) sub-class. Use\n    it as a regular PyTorch Module and refer to the PyTorch documentation for all matter related to general usage and\n    behavior.\n\n    Parameters:\n        config ([`PoolFormerConfig`]): Model configuration class with all the parameters of the model.\n            Initializing with a config file does not load the weights associated with the model, only the\n            configuration. Check out the [`~PreTrainedModel.from_pretrained`] method to load the model weights.\n"},{"type":"Assign","children":[60,61]},{"type":"Name","value":"POOLFORMER_INPUTS_DOCSTRING"},{"type":"Constant","value":"\n    Args:\n        pixel_values (`torch.FloatTensor` of shape `(batch_size, num_channels, height, width)`):\n            Pixel values. Pixel values can be obtained using [`AutoImageProcessor`]. See\n            [`PoolFormerImageProcessor.__call__`] for details.\n"},{"type":"ClassDef","value":"PoolFormerModel"},{"type":"ClassDef","value":"PoolFormerFinalPooler"},{"type":"ClassDef","value":"PoolFormerForImageClassification"}]
[{"type":"Module","children":[1,3,5,6,8,10,13,15,18,21,23,24,25,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Definition of models."},{"type":"Import","children":[4]},{"type":"alias","value":"abc"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[7]},{"type":"alias","value":"chex"},{"type":"Import","children":[9]},{"type":"alias","value":"distrax"},{"type":"Import","children":[11]},{"type":"alias","value":"flax.linen","children":[12]},{"type":"identifier","value":"nn"},{"type":"Import","children":[14]},{"type":"alias","value":"jax"},{"type":"Import","children":[16]},{"type":"alias","value":"jax.numpy","children":[17]},{"type":"identifier","value":"jnp"},{"type":"Import","children":[19]},{"type":"alias","value":"numpy","children":[20]},{"type":"identifier","value":"np"},{"type":"Import","children":[22]},{"type":"alias","value":"optax"},{"type":"FunctionDef","value":"inverse_leaky_relu"},{"type":"FunctionDef","value":"inverse_softplus"},{"type":"Assign","children":[26,27]},{"type":"Name","value":"_CUSTOM_ACTIVATIONS"},{"type":"Dict","children":[28,29,30,35]},{"type":"Constant","value":"leaky_relu"},{"type":"Constant","value":"softplus"},{"type":"AttributeLoad","children":[31,34]},{"type":"AttributeLoad","children":[32,33]},{"type":"Name","value":"jax"},{"type":"attr","value":"nn"},{"type":"attr","value":"leaky_relu"},{"type":"AttributeLoad","children":[36,39]},{"type":"AttributeLoad","children":[37,38]},{"type":"Name","value":"jax"},{"type":"attr","value":"nn"},{"type":"attr","value":"softplus"},{"type":"Assign","children":[41,42]},{"type":"Name","value":"_INVERSE_CUSTOM_ACTIVATIONS"},{"type":"Dict","children":[43,44,45,46]},{"type":"Constant","value":"leaky_relu"},{"type":"Constant","value":"softplus"},{"type":"Name","value":"inverse_leaky_relu"},{"type":"Name","value":"inverse_softplus"},{"type":"FunctionDef","value":"create_activation_bijector"},{"type":"FunctionDef","value":"cartesian_to_polar"},{"type":"FunctionDef","value":"polar_to_cartesian"},{"type":"ClassDef","value":"MLP"},{"type":"ClassDef","value":"NormalizingFlow"},{"type":"ClassDef","value":"MaskedCouplingFlowConditioner"},{"type":"ClassDef","value":"MaskedCouplingNormalizingFlow"},{"type":"ClassDef","value":"OneDimensionalNormalizingFlow"},{"type":"ClassDef","value":"PointwiseNormalizingFlow"},{"type":"ClassDef","value":"LinearBasedConditioner"},{"type":"ClassDef","value":"ActivationBasedConditioner"},{"type":"ClassDef","value":"GradientBasedConditioner"},{"type":"ClassDef","value":"ShearNormalizingFlow"},{"type":"ClassDef","value":"SymplecticLinearFlow"},{"type":"ClassDef","value":"SequentialFlow"},{"type":"ClassDef","value":"CoordinateEncoder"},{"type":"ClassDef","value":"CoordinateDecoder"},{"type":"ClassDef","value":"MLPEncoder"},{"type":"ClassDef","value":"MLPDecoder"},{"type":"ClassDef","value":"FlowEncoder"},{"type":"ClassDef","value":"FlowDecoder"},{"type":"ClassDef","value":"ActionAngleNetwork"},{"type":"ClassDef","value":"EulerUpdateNetwork"}]
[{"type":"Module","children":[1,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,25,32,33,34,35]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Modules encapsulate building stateful components."},{"type":"Import","children":[4]},{"type":"alias","value":"re"},{"type":"ImportFrom","value":"tensorflow.python"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.trackable"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util.tf_export"},{"type":"ClassDef","value":"Module"},{"type":"FunctionDef","value":"_is_variable"},{"type":"FunctionDef","value":"_is_trainable_variable"},{"type":"FunctionDef","value":"_is_non_trainable_variable"},{"type":"FunctionDef","value":"_is_module"},{"type":"Assign","children":[19,20]},{"type":"Name","value":"_CAMEL_TO_SNAKE_R"},{"type":"Call","children":[21,24]},{"type":"AttributeLoad","children":[22,23]},{"type":"Name","value":"re"},{"type":"attr","value":"compile"},{"type":"Constant","value":"((?<=[a-z0-9])[A-Z]|(?!^)[A-Z](?=[a-z]))"},{"type":"Assign","children":[26,27]},{"type":"Name","value":"_VALID_IDENTIFIER"},{"type":"Call","children":[28,31]},{"type":"AttributeLoad","children":[29,30]},{"type":"Name","value":"re"},{"type":"attr","value":"compile"},{"type":"Constant","value":"^[a-zA-Z_]([a-zA-Z0-9_])*$"},{"type":"FunctionDef","value":"valid_identifier"},{"type":"FunctionDef","value":"camel_to_snake"},{"type":"FunctionDef","value":"_flatten_non_variable_composites_with_tuple_path"},{"type":"FunctionDef","value":"_flatten_module"}]
[{"type":"Module","children":[1,3,4,5,6,9,12,13]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Neural nets utility for L2HMC compatible with TensorFlow's eager execution.\n\nReference [Generalizing Hamiltonian Monte Carlo with Neural\nNetworks](https://arxiv.org/pdf/1711.09268.pdf)\n\nCode adapted from the released TensorFlow graph implementation by original\nauthors https://github.com/brain-research/l2hmc.\n"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[7]},{"type":"alias","value":"tensorflow","children":[8]},{"type":"identifier","value":"tf"},{"type":"Import","children":[10]},{"type":"alias","value":"tensorflow.contrib.eager","children":[11]},{"type":"identifier","value":"tfe"},{"type":"ClassDef","value":"GenericNet"},{"type":"FunctionDef","value":"_custom_dense"}]
[{"type":"Module","children":[1,3,4,5,13,16,19,22,25,28,31,34,37,40,41,42,51,66,73,87,94]},{"type":"Expr","children":[2]},{"type":"Constant","value":" Neural Network.\n\nA 2-Hidden Layers Fully Connected Neural Network (a.k.a Multilayer Perceptron)\nimplementation with TensorFlow. This example is using the MNIST database\nof handwritten digits (http://yann.lecun.com/exdb/mnist/).\n\nThis example is using TensorFlow layers, see 'neural_network_raw' example for\na raw implementation with variables.\n\nLinks:\n    [MNIST Dataset](http://yann.lecun.com/exdb/mnist/).\n\nAuthor: Aymeric Damien\nProject: https://github.com/aymericdamien/TensorFlow-Examples/\n"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"tensorflow.examples.tutorials.mnist"},{"type":"Assign","children":[6,7]},{"type":"Name","value":"mnist"},{"type":"Call","children":[8,11,12]},{"type":"AttributeLoad","children":[9,10]},{"type":"Name","value":"input_data"},{"type":"attr","value":"read_data_sets"},{"type":"Constant","value":"/tmp/data/"},{"type":"keyword","value":"one_hot"},{"type":"Import","children":[14]},{"type":"alias","value":"tensorflow","children":[15]},{"type":"identifier","value":"tf"},{"type":"Assign","children":[17,18]},{"type":"Name","value":"learning_rate"},{"type":"Constant","value":"0.1"},{"type":"Assign","children":[20,21]},{"type":"Name","value":"num_steps"},{"type":"Constant","value":"1000"},{"type":"Assign","children":[23,24]},{"type":"Name","value":"batch_size"},{"type":"Constant","value":"128"},{"type":"Assign","children":[26,27]},{"type":"Name","value":"display_step"},{"type":"Constant","value":"100"},{"type":"Assign","children":[29,30]},{"type":"Name","value":"n_hidden_1"},{"type":"Constant","value":"256"},{"type":"Assign","children":[32,33]},{"type":"Name","value":"n_hidden_2"},{"type":"Constant","value":"256"},{"type":"Assign","children":[35,36]},{"type":"Name","value":"num_input"},{"type":"Constant","value":"784"},{"type":"Assign","children":[38,39]},{"type":"Name","value":"num_classes"},{"type":"Constant","value":"10"},{"type":"FunctionDef","value":"neural_net"},{"type":"FunctionDef","value":"model_fn"},{"type":"Assign","children":[43,44]},{"type":"Name","value":"model"},{"type":"Call","children":[45,50]},{"type":"AttributeLoad","children":[46,49]},{"type":"AttributeLoad","children":[47,48]},{"type":"Name","value":"tf"},{"type":"attr","value":"estimator"},{"type":"attr","value":"Estimator"},{"type":"Name","value":"model_fn"},{"type":"Assign","children":[52,53]},{"type":"Name","value":"input_fn"},{"type":"Call","children":[54,61,62,63,64,65]},{"type":"AttributeLoad","children":[55,60]},{"type":"AttributeLoad","children":[56,59]},{"type":"AttributeLoad","children":[57,58]},{"type":"Name","value":"tf"},{"type":"attr","value":"estimator"},{"type":"attr","value":"inputs"},{"type":"attr","value":"numpy_input_fn"},{"type":"keyword","value":"x"},{"type":"keyword","value":"y"},{"type":"keyword","value":"batch_size"},{"type":"keyword","value":"num_epochs"},{"type":"keyword","value":"shuffle"},{"type":"Expr","children":[67]},{"type":"Call","children":[68,71,72]},{"type":"AttributeLoad","children":[69,70]},{"type":"Name","value":"model"},{"type":"attr","value":"train"},{"type":"Name","value":"input_fn"},{"type":"keyword","value":"steps"},{"type":"Assign","children":[74,75]},{"type":"Name","value":"input_fn"},{"type":"Call","children":[76,83,84,85,86]},{"type":"AttributeLoad","children":[77,82]},{"type":"AttributeLoad","children":[78,81]},{"type":"AttributeLoad","children":[79,80]},{"type":"Name","value":"tf"},{"type":"attr","value":"estimator"},{"type":"attr","value":"inputs"},{"type":"attr","value":"numpy_input_fn"},{"type":"keyword","value":"x"},{"type":"keyword","value":"y"},{"type":"keyword","value":"batch_size"},{"type":"keyword","value":"shuffle"},{"type":"Assign","children":[88,89]},{"type":"Name","value":"e"},{"type":"Call","children":[90,93]},{"type":"AttributeLoad","children":[91,92]},{"type":"Name","value":"model"},{"type":"attr","value":"evaluate"},{"type":"Name","value":"input_fn"},{"type":"Expr","children":[95]},{"type":"Call","children":[96,97,98]},{"type":"Name","value":"print"},{"type":"Constant","value":"Testing Accuracy:"},{"type":"SubscriptLoad","children":[99,100]},{"type":"Name","value":"e"},{"type":"Constant","value":"accuracy"}]
[{"type":"Module","children":[1,3,4,5,13,16,19,22,25,28,31,34,37,40,50,60,99,135,136,141,150,164,173,180,198,212,218]},{"type":"Expr","children":[2]},{"type":"Constant","value":" Neural Network.\n\nA 2-Hidden Layers Fully Connected Neural Network (a.k.a Multilayer Perceptron)\nimplementation with TensorFlow. This example is using the MNIST database\nof handwritten digits (http://yann.lecun.com/exdb/mnist/).\n\nLinks:\n    [MNIST Dataset](http://yann.lecun.com/exdb/mnist/).\n\nAuthor: Aymeric Damien\nProject: https://github.com/aymericdamien/TensorFlow-Examples/\n"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"tensorflow.examples.tutorials.mnist"},{"type":"Assign","children":[6,7]},{"type":"Name","value":"mnist"},{"type":"Call","children":[8,11,12]},{"type":"AttributeLoad","children":[9,10]},{"type":"Name","value":"input_data"},{"type":"attr","value":"read_data_sets"},{"type":"Constant","value":"/tmp/data/"},{"type":"keyword","value":"one_hot"},{"type":"Import","children":[14]},{"type":"alias","value":"tensorflow","children":[15]},{"type":"identifier","value":"tf"},{"type":"Assign","children":[17,18]},{"type":"Name","value":"learning_rate"},{"type":"Constant","value":"0.1"},{"type":"Assign","children":[20,21]},{"type":"Name","value":"num_steps"},{"type":"Constant","value":"500"},{"type":"Assign","children":[23,24]},{"type":"Name","value":"batch_size"},{"type":"Constant","value":"128"},{"type":"Assign","children":[26,27]},{"type":"Name","value":"display_step"},{"type":"Constant","value":"100"},{"type":"Assign","children":[29,30]},{"type":"Name","value":"n_hidden_1"},{"type":"Constant","value":"256"},{"type":"Assign","children":[32,33]},{"type":"Name","value":"n_hidden_2"},{"type":"Constant","value":"256"},{"type":"Assign","children":[35,36]},{"type":"Name","value":"num_input"},{"type":"Constant","value":"784"},{"type":"Assign","children":[38,39]},{"type":"Name","value":"num_classes"},{"type":"Constant","value":"10"},{"type":"Assign","children":[41,42]},{"type":"Name","value":"X"},{"type":"Call","children":[43,46,47]},{"type":"AttributeLoad","children":[44,45]},{"type":"Name","value":"tf"},{"type":"attr","value":"placeholder"},{"type":"Constant","value":"float"},{"type":"ListLoad","children":[48,49]},{"type":"Constant","value":"None"},{"type":"Name","value":"num_input"},{"type":"Assign","children":[51,52]},{"type":"Name","value":"Y"},{"type":"Call","children":[53,56,57]},{"type":"AttributeLoad","children":[54,55]},{"type":"Name","value":"tf"},{"type":"attr","value":"placeholder"},{"type":"Constant","value":"float"},{"type":"ListLoad","children":[58,59]},{"type":"Constant","value":"None"},{"type":"Name","value":"num_classes"},{"type":"Assign","children":[61,62]},{"type":"Name","value":"weights"},{"type":"Dict","children":[63,64,65,66,77,88]},{"type":"Constant","value":"h1"},{"type":"Constant","value":"h2"},{"type":"Constant","value":"out"},{"type":"Call","children":[67,70]},{"type":"AttributeLoad","children":[68,69]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[71,74]},{"type":"AttributeLoad","children":[72,73]},{"type":"Name","value":"tf"},{"type":"attr","value":"random_normal"},{"type":"ListLoad","children":[75,76]},{"type":"Name","value":"num_input"},{"type":"Name","value":"n_hidden_1"},{"type":"Call","children":[78,81]},{"type":"AttributeLoad","children":[79,80]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[82,85]},{"type":"AttributeLoad","children":[83,84]},{"type":"Name","value":"tf"},{"type":"attr","value":"random_normal"},{"type":"ListLoad","children":[86,87]},{"type":"Name","value":"n_hidden_1"},{"type":"Name","value":"n_hidden_2"},{"type":"Call","children":[89,92]},{"type":"AttributeLoad","children":[90,91]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[93,96]},{"type":"AttributeLoad","children":[94,95]},{"type":"Name","value":"tf"},{"type":"attr","value":"random_normal"},{"type":"ListLoad","children":[97,98]},{"type":"Name","value":"n_hidden_2"},{"type":"Name","value":"num_classes"},{"type":"Assign","children":[100,101]},{"type":"Name","value":"biases"},{"type":"Dict","children":[102,103,104,105,115,125]},{"type":"Constant","value":"b1"},{"type":"Constant","value":"b2"},{"type":"Constant","value":"out"},{"type":"Call","children":[106,109]},{"type":"AttributeLoad","children":[107,108]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[110,113]},{"type":"AttributeLoad","children":[111,112]},{"type":"Name","value":"tf"},{"type":"attr","value":"random_normal"},{"type":"ListLoad","children":[114]},{"type":"Name","value":"n_hidden_1"},{"type":"Call","children":[116,119]},{"type":"AttributeLoad","children":[117,118]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[120,123]},{"type":"AttributeLoad","children":[121,122]},{"type":"Name","value":"tf"},{"type":"attr","value":"random_normal"},{"type":"ListLoad","children":[124]},{"type":"Name","value":"n_hidden_2"},{"type":"Call","children":[126,129]},{"type":"AttributeLoad","children":[127,128]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[130,133]},{"type":"AttributeLoad","children":[131,132]},{"type":"Name","value":"tf"},{"type":"attr","value":"random_normal"},{"type":"ListLoad","children":[134]},{"type":"Name","value":"num_classes"},{"type":"FunctionDef","value":"neural_net"},{"type":"Assign","children":[137,138]},{"type":"Name","value":"logits"},{"type":"Call","children":[139,140]},{"type":"Name","value":"neural_net"},{"type":"Name","value":"X"},{"type":"Assign","children":[142,143]},{"type":"Name","value":"prediction"},{"type":"Call","children":[144,149]},{"type":"AttributeLoad","children":[145,148]},{"type":"AttributeLoad","children":[146,147]},{"type":"Name","value":"tf"},{"type":"attr","value":"nn"},{"type":"attr","value":"softmax"},{"type":"Name","value":"logits"},{"type":"Assign","children":[151,152]},{"type":"Name","value":"loss_op"},{"type":"Call","children":[153,156]},{"type":"AttributeLoad","children":[154,155]},{"type":"Name","value":"tf"},{"type":"attr","value":"reduce_mean"},{"type":"Call","children":[157,162,163]},{"type":"AttributeLoad","children":[158,161]},{"type":"AttributeLoad","children":[159,160]},{"type":"Name","value":"tf"},{"type":"attr","value":"nn"},{"type":"attr","value":"softmax_cross_entropy_with_logits"},{"type":"keyword","value":"logits"},{"type":"keyword","value":"labels"},{"type":"Assign","children":[165,166]},{"type":"Name","value":"optimizer"},{"type":"Call","children":[167,172]},{"type":"AttributeLoad","children":[168,171]},{"type":"AttributeLoad","children":[169,170]},{"type":"Name","value":"tf"},{"type":"attr","value":"train"},{"type":"attr","value":"AdamOptimizer"},{"type":"keyword","value":"learning_rate"},{"type":"Assign","children":[174,175]},{"type":"Name","value":"train_op"},{"type":"Call","children":[176,179]},{"type":"AttributeLoad","children":[177,178]},{"type":"Name","value":"optimizer"},{"type":"attr","value":"minimize"},{"type":"Name","value":"loss_op"},{"type":"Assign","children":[181,182]},{"type":"Name","value":"correct_pred"},{"type":"Call","children":[183,186,192]},{"type":"AttributeLoad","children":[184,185]},{"type":"Name","value":"tf"},{"type":"attr","value":"equal"},{"type":"Call","children":[187,190,191]},{"type":"AttributeLoad","children":[188,189]},{"type":"Name","value":"tf"},{"type":"attr","value":"argmax"},{"type":"Name","value":"prediction"},{"type":"Constant","value":"1"},{"type":"Call","children":[193,196,197]},{"type":"AttributeLoad","children":[194,195]},{"type":"Name","value":"tf"},{"type":"attr","value":"argmax"},{"type":"Name","value":"Y"},{"type":"Constant","value":"1"},{"type":"Assign","children":[199,200]},{"type":"Name","value":"accuracy"},{"type":"Call","children":[201,204]},{"type":"AttributeLoad","children":[202,203]},{"type":"Name","value":"tf"},{"type":"attr","value":"reduce_mean"},{"type":"Call","children":[205,208,209]},{"type":"AttributeLoad","children":[206,207]},{"type":"Name","value":"tf"},{"type":"attr","value":"cast"},{"type":"Name","value":"correct_pred"},{"type":"AttributeLoad","children":[210,211]},{"type":"Name","value":"tf"},{"type":"attr","value":"float32"},{"type":"Assign","children":[213,214]},{"type":"Name","value":"init"},{"type":"Call","children":[215]},{"type":"AttributeLoad","children":[216,217]},{"type":"Name","value":"tf"},{"type":"attr","value":"global_variables_initializer"},{"type":"With","children":[219,225]},{"type":"withitem","children":[220,224]},{"type":"Call","children":[221]},{"type":"AttributeLoad","children":[222,223]},{"type":"Name","value":"tf"},{"type":"attr","value":"Session"},{"type":"Name","value":"sess"},{"type":"body","children":[226,232,306,310]},{"type":"Expr","children":[227]},{"type":"Call","children":[228,231]},{"type":"AttributeLoad","children":[229,230]},{"type":"Name","value":"sess"},{"type":"attr","value":"run"},{"type":"Name","value":"init"},{"type":"For","children":[233,234,240]},{"type":"Name","value":"step"},{"type":"Call","children":[235,236,237]},{"type":"Name","value":"range"},{"type":"Constant","value":"1"},{"type":"BinOpAdd","children":[238,239]},{"type":"Name","value":"num_steps"},{"type":"Constant","value":"1"},{"type":"body","children":[241,252,259]},{"type":"Assign","children":[242,245]},{"type":"TupleStore","children":[243,244]},{"type":"Name","value":"batch_x"},{"type":"Name","value":"batch_y"},{"type":"Call","children":[246,251]},{"type":"AttributeLoad","children":[247,250]},{"type":"AttributeLoad","children":[248,249]},{"type":"Name","value":"mnist"},{"type":"attr","value":"train"},{"type":"attr","value":"next_batch"},{"type":"Name","value":"batch_size"},{"type":"Expr","children":[253]},{"type":"Call","children":[254,257,258]},{"type":"AttributeLoad","children":[255,256]},{"type":"Name","value":"sess"},{"type":"attr","value":"run"},{"type":"Name","value":"train_op"},{"type":"keyword","value":"feed_dict"},{"type":"If","children":[260,269]},{"type":"BoolOpOr","children":[261,266]},{"type":"CompareEq","children":[262,265]},{"type":"BinOpMod","children":[263,264]},{"type":"Name","value":"step"},{"type":"Name","value":"display_step"},{"type":"Constant","value":"0"},{"type":"CompareEq","children":[267,268]},{"type":"Name","value":"step"},{"type":"Constant","value":"1"},{"type":"body","children":[270,282]},{"type":"Assign","children":[271,274]},{"type":"TupleStore","children":[272,273]},{"type":"Name","value":"loss"},{"type":"Name","value":"acc"},{"type":"Call","children":[275,278,281]},{"type":"AttributeLoad","children":[276,277]},{"type":"Name","value":"sess"},{"type":"attr","value":"run"},{"type":"ListLoad","children":[279,280]},{"type":"Name","value":"loss_op"},{"type":"Name","value":"accuracy"},{"type":"keyword","value":"feed_dict"},{"type":"Expr","children":[283]},{"type":"Call","children":[284,285]},{"type":"Name","value":"print"},{"type":"BinOpAdd","children":[286,301]},{"type":"BinOpAdd","children":[287,300]},{"type":"BinOpAdd","children":[288,295]},{"type":"BinOpAdd","children":[289,294]},{"type":"BinOpAdd","children":[290,291]},{"type":"Constant","value":"Step "},{"type":"Call","children":[292,293]},{"type":"Name","value":"str"},{"type":"Name","value":"step"},{"type":"Constant","value":", Minibatch Loss= "},{"type":"Call","children":[296,299]},{"type":"AttributeLoad","children":[297,298]},{"type":"Constant","value":"{:.4f}"},{"type":"attr","value":"format"},{"type":"Name","value":"loss"},{"type":"Constant","value":", Training Accuracy= "},{"type":"Call","children":[302,305]},{"type":"AttributeLoad","children":[303,304]},{"type":"Constant","value":"{:.3f}"},{"type":"attr","value":"format"},{"type":"Name","value":"acc"},{"type":"Expr","children":[307]},{"type":"Call","children":[308,309]},{"type":"Name","value":"print"},{"type":"Constant","value":"Optimization Finished!"},{"type":"Expr","children":[311]},{"type":"Call","children":[312,313,314]},{"type":"Name","value":"print"},{"type":"Constant","value":"Testing Accuracy:"},{"type":"Call","children":[315,318,319]},{"type":"AttributeLoad","children":[316,317]},{"type":"Name","value":"sess"},{"type":"attr","value":"run"},{"type":"Name","value":"accuracy"},{"type":"keyword","value":"feed_dict"}]
[{"type":"Module","children":[1,3,5,7,10,13,15,16,26,36,39,42,45,48,61,64,73,75,76,82,88,90,91,92,94,95,96,97,98,100,108,125,133,135,143,146,147,149,150,152,171,176,181,190,193,259,261,269]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nTitle: Neural style transfer\nAuthor: [fchollet](https://twitter.com/fchollet)\nDate created: 2016/01/11\nLast modified: 2020/05/02\nDescription: Transferring the style of a reference image to target image using gradient descent.\nAccelerator: GPU\n"},{"type":"Expr","children":[4]},{"type":"Constant","value":"\n## Introduction\n\nStyle transfer consists in generating an image\nwith the same \"content\" as a base image, but with the\n\"style\" of a different picture (typically artistic).\nThis is achieved through the optimization of a loss function\nthat has 3 components: \"style loss\", \"content loss\",\nand \"total variation loss\":\n\n- The total variation loss imposes local spatial continuity between\nthe pixels of the combination image, giving it visual coherence.\n- The style loss is where the deep learning keeps in --that one is defined\nusing a deep convolutional neural network. Precisely, it consists in a sum of\nL2 distances between the Gram matrices of the representations of\nthe base image and the style reference image, extracted from\ndifferent layers of a convnet (trained on ImageNet). The general idea\nis to capture color/texture information at different spatial\nscales (fairly large scales --defined by the depth of the layer considered).\n- The content loss is a L2 distance between the features of the base\nimage (extracted from a deep layer) and the features of the combination image,\nkeeping the generated image close enough to the original one.\n\n**Reference:** [A Neural Algorithm of Artistic Style](\n  http://arxiv.org/abs/1508.06576)\n"},{"type":"Expr","children":[6]},{"type":"Constant","value":"\n## Setup\n"},{"type":"Import","children":[8]},{"type":"alias","value":"numpy","children":[9]},{"type":"identifier","value":"np"},{"type":"Import","children":[11]},{"type":"alias","value":"tensorflow","children":[12]},{"type":"identifier","value":"tf"},{"type":"Import","children":[14]},{"type":"alias","value":"keras"},{"type":"ImportFrom","value":"keras.applications"},{"type":"Assign","children":[17,18]},{"type":"Name","value":"base_image_path"},{"type":"Call","children":[19,24,25]},{"type":"AttributeLoad","children":[20,23]},{"type":"AttributeLoad","children":[21,22]},{"type":"Name","value":"keras"},{"type":"attr","value":"utils"},{"type":"attr","value":"get_file"},{"type":"Constant","value":"paris.jpg"},{"type":"Constant","value":"https://i.imgur.com/F28w3Ac.jpg"},{"type":"Assign","children":[27,28]},{"type":"Name","value":"style_reference_image_path"},{"type":"Call","children":[29,34,35]},{"type":"AttributeLoad","children":[30,33]},{"type":"AttributeLoad","children":[31,32]},{"type":"Name","value":"keras"},{"type":"attr","value":"utils"},{"type":"attr","value":"get_file"},{"type":"Constant","value":"starry_night.jpg"},{"type":"Constant","value":"https://i.imgur.com/9ooB60I.jpg"},{"type":"Assign","children":[37,38]},{"type":"Name","value":"result_prefix"},{"type":"Constant","value":"paris_generated"},{"type":"Assign","children":[40,41]},{"type":"Name","value":"total_variation_weight"},{"type":"Constant","value":"1e-06"},{"type":"Assign","children":[43,44]},{"type":"Name","value":"style_weight"},{"type":"Constant","value":"1e-06"},{"type":"Assign","children":[46,47]},{"type":"Name","value":"content_weight"},{"type":"Constant","value":"2.5e-08"},{"type":"Assign","children":[49,52]},{"type":"TupleStore","children":[50,51]},{"type":"Name","value":"width"},{"type":"Name","value":"height"},{"type":"AttributeLoad","children":[53,60]},{"type":"Call","children":[54,59]},{"type":"AttributeLoad","children":[55,58]},{"type":"AttributeLoad","children":[56,57]},{"type":"Name","value":"keras"},{"type":"attr","value":"utils"},{"type":"attr","value":"load_img"},{"type":"Name","value":"base_image_path"},{"type":"attr","value":"size"},{"type":"Assign","children":[62,63]},{"type":"Name","value":"img_nrows"},{"type":"Constant","value":"400"},{"type":"Assign","children":[65,66]},{"type":"Name","value":"img_ncols"},{"type":"Call","children":[67,68]},{"type":"Name","value":"int"},{"type":"BinOpDiv","children":[69,72]},{"type":"BinOpMult","children":[70,71]},{"type":"Name","value":"width"},{"type":"Name","value":"img_nrows"},{"type":"Name","value":"height"},{"type":"Expr","children":[74]},{"type":"Constant","value":"\n## Let's take a look at our base (content) image and our style reference image\n"},{"type":"ImportFrom","value":"IPython.display"},{"type":"Expr","children":[77]},{"type":"Call","children":[78,79]},{"type":"Name","value":"display"},{"type":"Call","children":[80,81]},{"type":"Name","value":"Image"},{"type":"Name","value":"base_image_path"},{"type":"Expr","children":[83]},{"type":"Call","children":[84,85]},{"type":"Name","value":"display"},{"type":"Call","children":[86,87]},{"type":"Name","value":"Image"},{"type":"Name","value":"style_reference_image_path"},{"type":"Expr","children":[89]},{"type":"Constant","value":"\n## Image preprocessing / deprocessing utilities\n"},{"type":"FunctionDef","value":"preprocess_image"},{"type":"FunctionDef","value":"deprocess_image"},{"type":"Expr","children":[93]},{"type":"Constant","value":"\n## Compute the style transfer loss\n\nFirst, we need to define 4 utility functions:\n\n- `gram_matrix` (used to compute the style loss)\n- The `style_loss` function, which keeps the generated image close to the local textures\nof the style reference image\n- The `content_loss` function, which keeps the high-level representation of the\ngenerated image close to that of the base image\n- The `total_variation_loss` function, a regularization loss which keeps the generated\nimage locally-coherent\n"},{"type":"FunctionDef","value":"gram_matrix"},{"type":"FunctionDef","value":"style_loss"},{"type":"FunctionDef","value":"content_loss"},{"type":"FunctionDef","value":"total_variation_loss"},{"type":"Expr","children":[99]},{"type":"Constant","value":"\nNext, let's create a feature extraction model that retrieves the intermediate activations\nof VGG19 (as a dict, by name).\n"},{"type":"Assign","children":[101,102]},{"type":"Name","value":"model"},{"type":"Call","children":[103,106,107]},{"type":"AttributeLoad","children":[104,105]},{"type":"Name","value":"vgg19"},{"type":"attr","value":"VGG19"},{"type":"keyword","value":"weights"},{"type":"keyword","value":"include_top"},{"type":"Assign","children":[109,110]},{"type":"Name","value":"outputs_dict"},{"type":"Call","children":[111,112]},{"type":"Name","value":"dict"},{"type":"ListComp","children":[113,120]},{"type":"TupleLoad","children":[114,117]},{"type":"AttributeLoad","children":[115,116]},{"type":"Name","value":"layer"},{"type":"attr","value":"name"},{"type":"AttributeLoad","children":[118,119]},{"type":"Name","value":"layer"},{"type":"attr","value":"output"},{"type":"comprehension","children":[121,122]},{"type":"Name","value":"layer"},{"type":"AttributeLoad","children":[123,124]},{"type":"Name","value":"model"},{"type":"attr","value":"layers"},{"type":"Assign","children":[126,127]},{"type":"Name","value":"feature_extractor"},{"type":"Call","children":[128,131,132]},{"type":"AttributeLoad","children":[129,130]},{"type":"Name","value":"keras"},{"type":"attr","value":"Model"},{"type":"keyword","value":"inputs"},{"type":"keyword","value":"outputs"},{"type":"Expr","children":[134]},{"type":"Constant","value":"\nFinally, here's the code that computes the style transfer loss.\n"},{"type":"Assign","children":[136,137]},{"type":"Name","value":"style_layer_names"},{"type":"ListLoad","children":[138,139,140,141,142]},{"type":"Constant","value":"block1_conv1"},{"type":"Constant","value":"block2_conv1"},{"type":"Constant","value":"block3_conv1"},{"type":"Constant","value":"block4_conv1"},{"type":"Constant","value":"block5_conv1"},{"type":"Assign","children":[144,145]},{"type":"Name","value":"content_layer_name"},{"type":"Constant","value":"block5_conv2"},{"type":"FunctionDef","value":"compute_loss"},{"type":"Expr","children":[148]},{"type":"Constant","value":"\n## Add a tf.function decorator to loss & gradient computation\n\nTo compile it, and thus make it fast.\n"},{"type":"FunctionDef","value":"compute_loss_and_grads"},{"type":"Expr","children":[151]},{"type":"Constant","value":"\n## The training loop\n\nRepeatedly run vanilla gradient descent steps to minimize the loss, and save the\nresulting image every 100 iterations.\n\nWe decay the learning rate by 0.96 every 100 steps.\n"},{"type":"Assign","children":[153,154]},{"type":"Name","value":"optimizer"},{"type":"Call","children":[155,160]},{"type":"AttributeLoad","children":[156,159]},{"type":"AttributeLoad","children":[157,158]},{"type":"Name","value":"keras"},{"type":"attr","value":"optimizers"},{"type":"attr","value":"SGD"},{"type":"Call","children":[161,168,169,170]},{"type":"AttributeLoad","children":[162,167]},{"type":"AttributeLoad","children":[163,166]},{"type":"AttributeLoad","children":[164,165]},{"type":"Name","value":"keras"},{"type":"attr","value":"optimizers"},{"type":"attr","value":"schedules"},{"type":"attr","value":"ExponentialDecay"},{"type":"keyword","value":"initial_learning_rate"},{"type":"keyword","value":"decay_steps"},{"type":"keyword","value":"decay_rate"},{"type":"Assign","children":[172,173]},{"type":"Name","value":"base_image"},{"type":"Call","children":[174,175]},{"type":"Name","value":"preprocess_image"},{"type":"Name","value":"base_image_path"},{"type":"Assign","children":[177,178]},{"type":"Name","value":"style_reference_image"},{"type":"Call","children":[179,180]},{"type":"Name","value":"preprocess_image"},{"type":"Name","value":"style_reference_image_path"},{"type":"Assign","children":[182,183]},{"type":"Name","value":"combination_image"},{"type":"Call","children":[184,187]},{"type":"AttributeLoad","children":[185,186]},{"type":"Name","value":"tf"},{"type":"attr","value":"Variable"},{"type":"Call","children":[188,189]},{"type":"Name","value":"preprocess_image"},{"type":"Name","value":"base_image_path"},{"type":"Assign","children":[191,192]},{"type":"Name","value":"iterations"},{"type":"Constant","value":"4000"},{"type":"For","children":[194,195,201]},{"type":"Name","value":"i"},{"type":"Call","children":[196,197,198]},{"type":"Name","value":"range"},{"type":"Constant","value":"1"},{"type":"BinOpAdd","children":[199,200]},{"type":"Name","value":"iterations"},{"type":"Constant","value":"1"},{"type":"body","children":[202,211,220]},{"type":"Assign","children":[203,206]},{"type":"TupleStore","children":[204,205]},{"type":"Name","value":"loss"},{"type":"Name","value":"grads"},{"type":"Call","children":[207,208,209,210]},{"type":"Name","value":"compute_loss_and_grads"},{"type":"Name","value":"combination_image"},{"type":"Name","value":"base_image"},{"type":"Name","value":"style_reference_image"},{"type":"Expr","children":[212]},{"type":"Call","children":[213,216]},{"type":"AttributeLoad","children":[214,215]},{"type":"Name","value":"optimizer"},{"type":"attr","value":"apply_gradients"},{"type":"ListLoad","children":[217]},{"type":"TupleLoad","children":[218,219]},{"type":"Name","value":"grads"},{"type":"Name","value":"combination_image"},{"type":"If","children":[221,226]},{"type":"CompareEq","children":[222,225]},{"type":"BinOpMod","children":[223,224]},{"type":"Name","value":"i"},{"type":"Constant","value":"100"},{"type":"Constant","value":"0"},{"type":"body","children":[227,235,243,250]},{"type":"Expr","children":[228]},{"type":"Call","children":[229,230]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[231,232]},{"type":"Constant","value":"Iteration %d: loss=%.2f"},{"type":"TupleLoad","children":[233,234]},{"type":"Name","value":"i"},{"type":"Name","value":"loss"},{"type":"Assign","children":[236,237]},{"type":"Name","value":"img"},{"type":"Call","children":[238,239]},{"type":"Name","value":"deprocess_image"},{"type":"Call","children":[240]},{"type":"AttributeLoad","children":[241,242]},{"type":"Name","value":"combination_image"},{"type":"attr","value":"numpy"},{"type":"Assign","children":[244,245]},{"type":"Name","value":"fname"},{"type":"BinOpAdd","children":[246,247]},{"type":"Name","value":"result_prefix"},{"type":"BinOpMod","children":[248,249]},{"type":"Constant","value":"_at_iteration_%d.png"},{"type":"Name","value":"i"},{"type":"Expr","children":[251]},{"type":"Call","children":[252,257,258]},{"type":"AttributeLoad","children":[253,256]},{"type":"AttributeLoad","children":[254,255]},{"type":"Name","value":"keras"},{"type":"attr","value":"utils"},{"type":"attr","value":"save_img"},{"type":"Name","value":"fname"},{"type":"Name","value":"img"},{"type":"Expr","children":[260]},{"type":"Constant","value":"\nAfter 4000 iterations, you get the following result:\n"},{"type":"Expr","children":[262]},{"type":"Call","children":[263,264]},{"type":"Name","value":"display"},{"type":"Call","children":[265,266]},{"type":"Name","value":"Image"},{"type":"BinOpAdd","children":[267,268]},{"type":"Name","value":"result_prefix"},{"type":"Constant","value":"_at_iteration_4000.png"},{"type":"Expr","children":[270]},{"type":"Constant","value":"\n**Example available on HuggingFace**\nTrained Model | Demo \n--- | --- \n[![Generic badge](https://img.shields.io/badge/%F0%9F%A4%97%20Model-Neural%20style%20transfer-black.svg)](https://huggingface.co/keras-io/VGG19) | [![Generic badge](https://img.shields.io/badge/%F0%9F%A4%97%20Spaces-Neural%20style%20transfer-black.svg)](https://huggingface.co/spaces/keras-io/neural-style-transfer)\n"}]
[{"type":"Module","children":[1,3,6,7,8,9,10,11,12,13,14,15,16,17,18]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Neural network support.\n\nSee the [Neural network](https://tensorflow.org/api_guides/python/nn) guide.\n"},{"type":"Import","children":[4]},{"type":"alias","value":"sys","children":[5]},{"type":"identifier","value":"_sys"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.math_ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.math_ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.ctc_ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.nn_impl"},{"type":"ImportFrom","value":"tensorflow.python.ops.nn_impl_distribute"},{"type":"ImportFrom","value":"tensorflow.python.ops.nn_ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.candidate_sampling_ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.embedding_ops"}]
[{"type":"Module","children":[1,3,4,5,6,10,11,12]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Contains common building blocks for neural networks."},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[7,9]},{"type":"alias","value":"tensorflow","children":[8]},{"type":"identifier","value":"tf"},{"type":"alias","value":"tf_keras"},{"type":"ImportFrom","value":"official.modeling"},{"type":"ClassDef","value":"ResidualBlock"},{"type":"ClassDef","value":"BottleneckBlock"}]
[{"type":"Module","children":[1,3,4,5,9,10,11,20,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Contains common building blocks for neural networks."},{"type":"ImportFrom","value":"typing"},{"type":"ImportFrom","value":"absl"},{"type":"Import","children":[6,8]},{"type":"alias","value":"tensorflow","children":[7]},{"type":"identifier","value":"tf"},{"type":"alias","value":"tf_keras"},{"type":"ImportFrom","value":"official.modeling"},{"type":"ImportFrom","value":"official.vision.ops"},{"type":"Assign","children":[12,13]},{"type":"Name","value":"States"},{"type":"SubscriptLoad","children":[14,15]},{"type":"Name","value":"Dict"},{"type":"TupleLoad","children":[16,17]},{"type":"Name","value":"str"},{"type":"AttributeLoad","children":[18,19]},{"type":"Name","value":"tf"},{"type":"attr","value":"Tensor"},{"type":"Assign","children":[21,22]},{"type":"Name","value":"Activation"},{"type":"SubscriptLoad","children":[23,24]},{"type":"Name","value":"Union"},{"type":"TupleLoad","children":[25,26]},{"type":"Name","value":"str"},{"type":"Name","value":"Callable"},{"type":"FunctionDef","value":"make_divisible"},{"type":"FunctionDef","value":"round_filters"},{"type":"FunctionDef","value":"get_padding_for_kernel_size"},{"type":"ClassDef","value":"SqueezeExcitation"},{"type":"FunctionDef","value":"get_stochastic_depth_rate"},{"type":"ClassDef","value":"StochasticDepth"},{"type":"FunctionDef","value":"pyramid_feature_fusion"},{"type":"ClassDef","value":"PanopticFPNFusion"},{"type":"ClassDef","value":"Scale"},{"type":"ClassDef","value":"TemporalSoftmaxPool"},{"type":"ClassDef","value":"PositionalEncoding"},{"type":"ClassDef","value":"GlobalAveragePool3D"},{"type":"ClassDef","value":"SpatialAveragePool3D"},{"type":"ClassDef","value":"CausalConvMixin"},{"type":"ClassDef","value":"Conv2D"},{"type":"ClassDef","value":"DepthwiseConv2D"},{"type":"ClassDef","value":"Conv3D"},{"type":"ClassDef","value":"SpatialPyramidPooling"},{"type":"ClassDef","value":"MultiHeadAttention"}]
[{"type":"Module","children":[1,3,5,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,44,59,60,61,62,63,64,65,74,75,76,77,78,79,80,81,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,138,147,148,149,155,156,157,158,159,160,167,168,169,170,171,172,173,174,181,182,183,184,185,186,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,252,265,278,291,292,300,308,316]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Primitive Neural Net (NN) Operations.\n\n## Notes on padding\n\nSeveral neural network operations, such as `tf.nn.conv2d` and\n`tf.nn.max_pool2d`, take a `padding` parameter, which controls how the input is\npadded before running the operation. The input is padded by inserting values\n(typically zeros) before and after the tensor in each spatial dimension. The\n`padding` parameter can either be the string `'VALID'`, which means use no\npadding, or `'SAME'` which adds padding according to a formula which is\ndescribed below. Certain ops also allow the amount of padding per dimension to\nbe explicitly specified by passing a list to `padding`.\n\nIn the case of convolutions, the input is padded with zeros. In case of pools,\nthe padded input values are ignored. For example, in a max pool, the sliding\nwindow ignores padded values, which is equivalent to the padded values being\n`-infinity`.\n\n### `'VALID'` padding\n\nPassing `padding='VALID'` to an op causes no padding to be used. This causes the\noutput size to typically be smaller than the input size, even when the stride is\none. In the 2D case, the output size is computed as:\n\n```python\nout_height = ceil((in_height - filter_height + 1) / stride_height)\nout_width  = ceil((in_width - filter_width + 1) / stride_width)\n```\n\nThe 1D and 3D cases are similar. Note `filter_height` and `filter_width` refer\nto the filter size after dilations (if any) for convolutions, and refer to the\nwindow size for pools.\n\n### `'SAME'` padding\n\nWith `'SAME'` padding, padding is applied to each spatial dimension. When the\nstrides are 1, the input is padded such that the output size is the same as the\ninput size. In the 2D case, the output size is computed as:\n\n```python\nout_height = ceil(in_height / stride_height)\nout_width  = ceil(in_width / stride_width)\n```\n\nThe amount of padding used is the smallest amount that results in the output\nsize. The formula for the total amount of padding per dimension is:\n\n```python\nif (in_height % strides[1] == 0):\n  pad_along_height = max(filter_height - stride_height, 0)\nelse:\n  pad_along_height = max(filter_height - (in_height % stride_height), 0)\nif (in_width % strides[2] == 0):\n  pad_along_width = max(filter_width - stride_width, 0)\nelse:\n  pad_along_width = max(filter_width - (in_width % stride_width), 0)\n```\n\nFinally, the padding on the top, bottom, left and right are:\n\n```python\npad_top = pad_along_height // 2\npad_bottom = pad_along_height - pad_top\npad_left = pad_along_width // 2\npad_right = pad_along_width - pad_left\n```\n\nNote that the division by 2 means that there might be cases when the padding on\nboth sides (top vs bottom, right vs left) are off by one. In this case, the\nbottom and right sides always get the one additional padded pixel. For example,\nwhen pad_along_height is 5, we pad 2 pixels at the top and 3 pixels at the\nbottom. Note that this is different from existing libraries such as PyTorch and\nCaffe, which explicitly specify the number of padded pixels and always pad the\nsame number of pixels on both sides.\n\nHere is an example of `'SAME'` padding:\n\n>>> in_height = 5\n>>> filter_height = 3\n>>> stride_height = 2\n>>>\n>>> in_width = 2\n>>> filter_width = 2\n>>> stride_width = 1\n>>>\n>>> inp = tf.ones((2, in_height, in_width, 2))\n>>> filter = tf.ones((filter_height, filter_width, 2, 2))\n>>> strides = [stride_height, stride_width]\n>>> output = tf.nn.conv2d(inp, filter, strides, padding='SAME')\n>>> output.shape[1]  # output_height: ceil(5 / 2)\n3\n>>> output.shape[2] # output_width: ceil(2 / 1)\n2\n\n### Explicit padding\n\nCertain ops, like `tf.nn.conv2d`, also allow a list of explicit padding amounts\nto be passed to the `padding` parameter. This list is in the same format as what\nis passed to `tf.pad`, except the padding must be a nested list, not a tensor.\nFor example, in the 2D case, the list is in the format `[[0, 0], [pad_top,\npad_bottom], [pad_left, pad_right], [0, 0]]` when `data_format` is its default\nvalue of `'NHWC'`. The two `[0, 0]` pairs  indicate the batch and channel\ndimensions have no padding, which is required, as only spatial dimensions can\nhave padding.\n\nFor example:\n\n>>> inp = tf.ones((1, 3, 3, 1))\n>>> filter = tf.ones((2, 2, 1, 1))\n>>> strides = [1, 1]\n>>> padding = [[0, 0], [1, 2], [0, 1], [0, 0]]\n>>> output = tf.nn.conv2d(inp, filter, strides, padding=padding)\n>>> tuple(output.shape)\n(1, 5, 3, 1)\n>>> # Equivalently, tf.pad can be used, since convolutions pad with zeros.\n>>> inp = tf.pad(inp, padding)\n>>> # 'VALID' means to use no padding in conv2d (we already padded inp)\n>>> output2 = tf.nn.conv2d(inp, filter, strides, padding='VALID')\n>>> tf.debugging.assert_equal(output, output2)\n\n### Difference between convolution and pooling layers\nHow padding is used in convolution layers and pooling layers is different. For\nconvolution layers, padding is filled with values of zero, and padding is\nmultiplied with kernels. For pooling layers, padding is excluded from the\ncomputation. For example when applying average pooling to a 4x4 grid, how much\npadding is added will not impact the output. Here is an example that\ndemonstrates the difference.\n\n>>> x_in = np.array([[\n...   [[2], [2]],\n...   [[1], [1]],\n...   [[1], [1]]]])\n>>> kernel_in = np.array([  # simulate the avg_pool with conv2d\n...  [ [[0.25]], [[0.25]] ],\n...  [ [[0.25]], [[0.25]] ]])\n>>> x = tf.constant(x_in, dtype=tf.float32)\n>>> kernel = tf.constant(kernel_in, dtype=tf.float32)\n>>> conv_out = tf.nn.conv2d(x, kernel, strides=[1, 1, 1, 1], padding='SAME')\n>>> pool_out = tf.nn.avg_pool(x, [2, 2], strides=[1, 1, 1, 1], padding='SAME')\n>>> print(conv_out.shape, pool_out.shape)\n(1, 3, 2, 1) (1, 3, 2, 1)\n>>> tf.reshape(conv_out, [3, 2]).numpy()  # conv2d takes account of padding\narray([[1.5 , 0.75],\n       [1.  , 0.5 ],\n       [0.5 , 0.25]], dtype=float32)\n>>> tf.reshape(pool_out, [3, 2]).numpy()  # avg_pool excludes padding\narray([[1.5, 1.5],\n       [1. , 1. ],\n       [1. , 1. ]], dtype=float32)\n\nAPI docstring: tensorflow.nn\n"},{"type":"Import","children":[4]},{"type":"alias","value":"functools"},{"type":"Import","children":[6]},{"type":"alias","value":"numbers"},{"type":"Import","children":[8]},{"type":"alias","value":"numpy","children":[9]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"tensorflow.python.eager"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops.gen_nn_ops"},{"type":"ImportFrom","value":"tensorflow.python.platform"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util.compat"},{"type":"ImportFrom","value":"tensorflow.python.util.deprecation"},{"type":"ImportFrom","value":"tensorflow.python.util.deprecation"},{"type":"ImportFrom","value":"tensorflow.python.util.tf_export"},{"type":"Assign","children":[40,41]},{"type":"Name","value":"local_response_normalization"},{"type":"AttributeLoad","children":[42,43]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"lrn"},{"type":"Assign","children":[45,46]},{"type":"Name","value":"_CHANNELS_LAST_FORMATS"},{"type":"Call","children":[47,48]},{"type":"Name","value":"frozenset"},{"type":"Set","children":[49,50,51,52,53,54,55,56,57,58]},{"type":"Constant","value":"NWC"},{"type":"Constant","value":"NHC"},{"type":"Constant","value":"NHWC"},{"type":"Constant","value":"NWHC"},{"type":"Constant","value":"NDHWC"},{"type":"Constant","value":"NDWHC"},{"type":"Constant","value":"NHDWC"},{"type":"Constant","value":"NHWDC"},{"type":"Constant","value":"NWDHC"},{"type":"Constant","value":"NWHDC"},{"type":"FunctionDef","value":"_get_sequence"},{"type":"FunctionDef","value":"_non_atrous_convolution"},{"type":"ClassDef","value":"_NonAtrousConvolution"},{"type":"FunctionDef","value":"squeeze_batch_dims"},{"type":"FunctionDef","value":"dilation2d_v2"},{"type":"FunctionDef","value":"dilation2d_v1"},{"type":"Assign","children":[66,69]},{"type":"AttributeStore","children":[67,68]},{"type":"Name","value":"dilation2d_v1"},{"type":"attr","value":"__doc__"},{"type":"AttributeLoad","children":[70,73]},{"type":"AttributeLoad","children":[71,72]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"dilation2d"},{"type":"attr","value":"__doc__"},{"type":"FunctionDef","value":"with_space_to_batch"},{"type":"ClassDef","value":"_WithSpaceToBatch"},{"type":"FunctionDef","value":"_with_space_to_batch_base_paddings"},{"type":"FunctionDef","value":"_with_space_to_batch_adjust"},{"type":"FunctionDef","value":"_get_strides_and_dilation_rate"},{"type":"FunctionDef","value":"convolution"},{"type":"FunctionDef","value":"convolution_v2"},{"type":"Assign","children":[82,85]},{"type":"AttributeStore","children":[83,84]},{"type":"Name","value":"convolution_v2"},{"type":"attr","value":"__doc__"},{"type":"Call","children":[86,89,98,99]},{"type":"AttributeLoad","children":[87,88]},{"type":"Name","value":"deprecation"},{"type":"attr","value":"rewrite_argument_docstring"},{"type":"Call","children":[90,93,96,97]},{"type":"AttributeLoad","children":[91,92]},{"type":"Name","value":"deprecation"},{"type":"attr","value":"rewrite_argument_docstring"},{"type":"AttributeLoad","children":[94,95]},{"type":"Name","value":"convolution"},{"type":"attr","value":"__doc__"},{"type":"Constant","value":"dilation_rate"},{"type":"Constant","value":"dilations"},{"type":"Constant","value":"filter"},{"type":"Constant","value":"filters"},{"type":"FunctionDef","value":"convolution_internal"},{"type":"ClassDef","value":"Convolution"},{"type":"FunctionDef","value":"pool"},{"type":"FunctionDef","value":"pool_v2"},{"type":"FunctionDef","value":"atrous_conv2d"},{"type":"FunctionDef","value":"convert_padding"},{"type":"FunctionDef","value":"conv1d"},{"type":"FunctionDef","value":"conv1d_v2"},{"type":"FunctionDef","value":"conv1d_transpose"},{"type":"FunctionDef","value":"conv2d_v2"},{"type":"FunctionDef","value":"conv2d"},{"type":"FunctionDef","value":"conv2d_backprop_filter"},{"type":"FunctionDef","value":"conv2d_backprop_input"},{"type":"FunctionDef","value":"conv2d_transpose"},{"type":"FunctionDef","value":"conv2d_transpose_v2"},{"type":"FunctionDef","value":"_conv2d_expanded_batch"},{"type":"FunctionDef","value":"atrous_conv2d_transpose"},{"type":"FunctionDef","value":"depthwise_conv2d_native"},{"type":"FunctionDef","value":"depthwise_conv2d_native_backprop_input"},{"type":"FunctionDef","value":"depthwise_conv2d_native_backprop_filter"},{"type":"FunctionDef","value":"_conv3d_expanded_batch"},{"type":"FunctionDef","value":"conv3d_v2"},{"type":"FunctionDef","value":"conv3d_v1"},{"type":"Assign","children":[124,127]},{"type":"AttributeStore","children":[125,126]},{"type":"Name","value":"conv3d_v2"},{"type":"attr","value":"__doc__"},{"type":"Call","children":[128,131,136,137]},{"type":"AttributeLoad","children":[129,130]},{"type":"Name","value":"deprecation"},{"type":"attr","value":"rewrite_argument_docstring"},{"type":"AttributeLoad","children":[132,135]},{"type":"AttributeLoad","children":[133,134]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"conv3d"},{"type":"attr","value":"__doc__"},{"type":"Constant","value":"filter"},{"type":"Constant","value":"filters"},{"type":"Assign","children":[139,142]},{"type":"AttributeStore","children":[140,141]},{"type":"Name","value":"conv3d_v1"},{"type":"attr","value":"__doc__"},{"type":"AttributeLoad","children":[143,146]},{"type":"AttributeLoad","children":[144,145]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"conv3d"},{"type":"attr","value":"__doc__"},{"type":"FunctionDef","value":"conv3d_transpose"},{"type":"FunctionDef","value":"conv3d_transpose_v2"},{"type":"Assign","children":[150,151]},{"type":"Name","value":"CONV_TRANSPOSE_OPS"},{"type":"TupleLoad","children":[152,153,154]},{"type":"Name","value":"conv1d_transpose"},{"type":"Name","value":"conv2d_transpose_v2"},{"type":"Name","value":"conv3d_transpose_v2"},{"type":"FunctionDef","value":"conv_transpose"},{"type":"FunctionDef","value":"bias_add"},{"type":"FunctionDef","value":"bias_add_v1"},{"type":"FunctionDef","value":"crelu"},{"type":"FunctionDef","value":"crelu_v2"},{"type":"Assign","children":[161,164]},{"type":"AttributeStore","children":[162,163]},{"type":"Name","value":"crelu_v2"},{"type":"attr","value":"__doc__"},{"type":"AttributeLoad","children":[165,166]},{"type":"Name","value":"crelu"},{"type":"attr","value":"__doc__"},{"type":"FunctionDef","value":"relu6"},{"type":"FunctionDef","value":"leaky_relu"},{"type":"FunctionDef","value":"gelu"},{"type":"FunctionDef","value":"_flatten_outer_dims"},{"type":"FunctionDef","value":"_wrap_2d_function"},{"type":"FunctionDef","value":"softmax_v2"},{"type":"FunctionDef","value":"softmax"},{"type":"Assign","children":[175,178]},{"type":"AttributeStore","children":[176,177]},{"type":"Name","value":"softmax"},{"type":"attr","value":"__doc__"},{"type":"AttributeLoad","children":[179,180]},{"type":"Name","value":"softmax_v2"},{"type":"attr","value":"__doc__"},{"type":"FunctionDef","value":"log_softmax"},{"type":"FunctionDef","value":"log_softmax_v2"},{"type":"FunctionDef","value":"_ensure_xent_args"},{"type":"FunctionDef","value":"softmax_cross_entropy_with_logits_v2"},{"type":"FunctionDef","value":"softmax_cross_entropy_with_logits_v2_helper"},{"type":"Assign","children":[187,188]},{"type":"Name","value":"_XENT_DEPRECATION"},{"type":"Constant","value":"\nFuture major versions of TensorFlow will allow gradients to flow\ninto the labels input on backprop by default.\n\nSee `tf.nn.softmax_cross_entropy_with_logits_v2`.\n"},{"type":"FunctionDef","value":"softmax_cross_entropy_with_logits"},{"type":"FunctionDef","value":"_sparse_softmax_cross_entropy_with_rank_2_logits"},{"type":"FunctionDef","value":"sparse_softmax_cross_entropy_with_logits"},{"type":"FunctionDef","value":"sparse_softmax_cross_entropy_with_logits_v2"},{"type":"FunctionDef","value":"avg_pool_v2"},{"type":"FunctionDef","value":"avg_pool"},{"type":"FunctionDef","value":"avg_pool2d"},{"type":"FunctionDef","value":"avg_pool1d"},{"type":"FunctionDef","value":"avg_pool3d"},{"type":"FunctionDef","value":"max_pool_v2"},{"type":"FunctionDef","value":"max_pool"},{"type":"FunctionDef","value":"max_pool1d"},{"type":"FunctionDef","value":"max_pool2d"},{"type":"FunctionDef","value":"max_pool3d"},{"type":"FunctionDef","value":"max_pool_with_argmax_v2"},{"type":"FunctionDef","value":"max_pool_with_argmax_v1"},{"type":"Assign","children":[206,209]},{"type":"AttributeStore","children":[207,208]},{"type":"Name","value":"max_pool_with_argmax_v1"},{"type":"attr","value":"__doc__"},{"type":"AttributeLoad","children":[210,213]},{"type":"AttributeLoad","children":[211,212]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"max_pool_with_argmax"},{"type":"attr","value":"__doc__"},{"type":"FunctionDef","value":"_calc_conv3d_flops"},{"type":"FunctionDef","value":"_calc_conv_flops"},{"type":"FunctionDef","value":"_calc_depthwise_conv_flops"},{"type":"FunctionDef","value":"_calc_bias_add_flops"},{"type":"FunctionDef","value":"xw_plus_b"},{"type":"FunctionDef","value":"xw_plus_b_v1"},{"type":"FunctionDef","value":"_get_noise_shape"},{"type":"FunctionDef","value":"dropout"},{"type":"FunctionDef","value":"dropout_v2"},{"type":"FunctionDef","value":"stateless_dropout"},{"type":"FunctionDef","value":"general_dropout"},{"type":"FunctionDef","value":"_dropout"},{"type":"FunctionDef","value":"top_k"},{"type":"FunctionDef","value":"approx_max_k"},{"type":"FunctionDef","value":"approx_min_k"},{"type":"FunctionDef","value":"nth_element"},{"type":"FunctionDef","value":"fractional_max_pool"},{"type":"FunctionDef","value":"fractional_max_pool_v2"},{"type":"FunctionDef","value":"fractional_avg_pool"},{"type":"FunctionDef","value":"fractional_avg_pool_v2"},{"type":"FunctionDef","value":"_calc_dilation2d_flops"},{"type":"FunctionDef","value":"erosion2d"},{"type":"FunctionDef","value":"erosion2d_v2"},{"type":"FunctionDef","value":"in_top_k"},{"type":"FunctionDef","value":"in_top_k_v2"},{"type":"Assign","children":[240,241]},{"type":"Name","value":"quantized_avg_pool"},{"type":"Call","children":[242,245]},{"type":"Call","children":[243,244]},{"type":"Name","value":"tf_export"},{"type":"keyword","value":"v1"},{"type":"Call","children":[246,249]},{"type":"AttributeLoad","children":[247,248]},{"type":"Name","value":"dispatch"},{"type":"attr","value":"add_dispatch_support"},{"type":"AttributeLoad","children":[250,251]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"quantized_avg_pool"},{"type":"Assign","children":[253,254]},{"type":"Name","value":"quantized_conv2d"},{"type":"Call","children":[255,258]},{"type":"Call","children":[256,257]},{"type":"Name","value":"tf_export"},{"type":"keyword","value":"v1"},{"type":"Call","children":[259,262]},{"type":"AttributeLoad","children":[260,261]},{"type":"Name","value":"dispatch"},{"type":"attr","value":"add_dispatch_support"},{"type":"AttributeLoad","children":[263,264]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"quantized_conv2d"},{"type":"Assign","children":[266,267]},{"type":"Name","value":"quantized_relu_x"},{"type":"Call","children":[268,271]},{"type":"Call","children":[269,270]},{"type":"Name","value":"tf_export"},{"type":"keyword","value":"v1"},{"type":"Call","children":[272,275]},{"type":"AttributeLoad","children":[273,274]},{"type":"Name","value":"dispatch"},{"type":"attr","value":"add_dispatch_support"},{"type":"AttributeLoad","children":[276,277]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"quantized_relu_x"},{"type":"Assign","children":[279,280]},{"type":"Name","value":"quantized_max_pool"},{"type":"Call","children":[281,284]},{"type":"Call","children":[282,283]},{"type":"Name","value":"tf_export"},{"type":"keyword","value":"v1"},{"type":"Call","children":[285,288]},{"type":"AttributeLoad","children":[286,287]},{"type":"Name","value":"dispatch"},{"type":"attr","value":"add_dispatch_support"},{"type":"AttributeLoad","children":[289,290]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"quantized_max_pool"},{"type":"FunctionDef","value":"isotonic_regression"},{"type":"Expr","children":[293]},{"type":"Call","children":[294,297]},{"type":"AttributeLoad","children":[295,296]},{"type":"Name","value":"dispatch"},{"type":"attr","value":"register_unary_elementwise_api"},{"type":"AttributeLoad","children":[298,299]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"elu"},{"type":"Expr","children":[301]},{"type":"Call","children":[302,305]},{"type":"AttributeLoad","children":[303,304]},{"type":"Name","value":"dispatch"},{"type":"attr","value":"register_unary_elementwise_api"},{"type":"AttributeLoad","children":[306,307]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"relu"},{"type":"Expr","children":[309]},{"type":"Call","children":[310,313]},{"type":"AttributeLoad","children":[311,312]},{"type":"Name","value":"dispatch"},{"type":"attr","value":"register_unary_elementwise_api"},{"type":"AttributeLoad","children":[314,315]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"selu"},{"type":"Expr","children":[317]},{"type":"Call","children":[318,321]},{"type":"AttributeLoad","children":[319,320]},{"type":"Name","value":"dispatch"},{"type":"attr","value":"register_unary_elementwise_api"},{"type":"AttributeLoad","children":[322,323]},{"type":"Name","value":"gen_nn_ops"},{"type":"attr","value":"softsign"}]
[{"type":"Module","children":[1,3,4,5,8,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Objective functions for visualizing neural networks.\n\nWe represent objectives with a class `Objective` enclosing functions of the\nform:\n\n  (T) => TensorFlow Scalar\n\nWhere `T` is a function that allows one to access the activations of different\nlayers of the network. For example `T(\"mixed4a\")` gives the activations for\nthe layer mixed4a.\n\nThis allows objectives to be declared outside the rendering function, but then\nactually constructed within its graph/session.\n"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"decorator"},{"type":"Import","children":[6]},{"type":"alias","value":"numpy","children":[7]},{"type":"identifier","value":"np"},{"type":"Import","children":[9]},{"type":"alias","value":"tensorflow","children":[10]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"lucid.optvis.objectives_util"},{"type":"ClassDef","value":"Objective"},{"type":"FunctionDef","value":"wrap_objective"},{"type":"FunctionDef","value":"handle_batch"},{"type":"FunctionDef","value":"neuron"},{"type":"FunctionDef","value":"channel"},{"type":"FunctionDef","value":"direction"},{"type":"Assign","children":[19,20]},{"type":"Name","value":"direction_cossim"},{"type":"Name","value":"direction"},{"type":"FunctionDef","value":"direction_neuron"},{"type":"FunctionDef","value":"tensor_direction"},{"type":"FunctionDef","value":"deepdream"},{"type":"FunctionDef","value":"total_variation"},{"type":"FunctionDef","value":"L1"},{"type":"FunctionDef","value":"L2"},{"type":"FunctionDef","value":"_tf_blur"},{"type":"FunctionDef","value":"blur_input_each_step"},{"type":"FunctionDef","value":"blur_alpha_each_step"},{"type":"FunctionDef","value":"channel_interpolate"},{"type":"FunctionDef","value":"penalize_boundary_complexity"},{"type":"FunctionDef","value":"alignment"},{"type":"FunctionDef","value":"diversity"},{"type":"FunctionDef","value":"input_diff"},{"type":"FunctionDef","value":"class_logit"},{"type":"FunctionDef","value":"as_objective"}]
[{"type":"Module","children":[1,4,5,8,9,10]},{"type":"Import","children":[2]},{"type":"alias","value":"tensorflow","children":[3]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"tensorflow.contrib"},{"type":"Import","children":[6]},{"type":"alias","value":"numpy","children":[7]},{"type":"identifier","value":"np"},{"type":"ClassDef","value":"TextRNN"},{"type":"FunctionDef","value":"test"},{"type":"Expr","children":[11]},{"type":"Call","children":[12]},{"type":"Name","value":"test"}]
[{"type":"Module","children":[1,3,4,7,8,9,10,11,12,13,14,20,30,35,42,47,52,59,63,69,75,81,93,97,104,111,114,126,130,141,150,162,166,170,177,184,193,197,201,214,224,232,241,245,251,255,259,266,275,283,293,298,303,304,305,323,330,345,352]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\n===================================================\nFaces recognition example using eigenfaces and SVMs\n===================================================\n\nThe dataset used in this example is a preprocessed excerpt of the\n\"Labeled Faces in the Wild\", aka LFW_:\n\n  http://vis-www.cs.umass.edu/lfw/lfw-funneled.tgz (233MB)\n\n.. _LFW: http://vis-www.cs.umass.edu/lfw/\n\n"},{"type":"ImportFrom","value":"time"},{"type":"Import","children":[5]},{"type":"alias","value":"matplotlib.pyplot","children":[6]},{"type":"identifier","value":"plt"},{"type":"ImportFrom","value":"scipy.stats"},{"type":"ImportFrom","value":"sklearn.datasets"},{"type":"ImportFrom","value":"sklearn.decomposition"},{"type":"ImportFrom","value":"sklearn.metrics"},{"type":"ImportFrom","value":"sklearn.model_selection"},{"type":"ImportFrom","value":"sklearn.preprocessing"},{"type":"ImportFrom","value":"sklearn.svm"},{"type":"Assign","children":[15,16]},{"type":"Name","value":"lfw_people"},{"type":"Call","children":[17,18,19]},{"type":"Name","value":"fetch_lfw_people"},{"type":"keyword","value":"min_faces_per_person"},{"type":"keyword","value":"resize"},{"type":"Assign","children":[21,25]},{"type":"TupleStore","children":[22,23,24]},{"type":"Name","value":"n_samples"},{"type":"Name","value":"h"},{"type":"Name","value":"w"},{"type":"AttributeLoad","children":[26,29]},{"type":"AttributeLoad","children":[27,28]},{"type":"Name","value":"lfw_people"},{"type":"attr","value":"images"},{"type":"attr","value":"shape"},{"type":"Assign","children":[31,32]},{"type":"Name","value":"X"},{"type":"AttributeLoad","children":[33,34]},{"type":"Name","value":"lfw_people"},{"type":"attr","value":"data"},{"type":"Assign","children":[36,37]},{"type":"Name","value":"n_features"},{"type":"SubscriptLoad","children":[38,41]},{"type":"AttributeLoad","children":[39,40]},{"type":"Name","value":"X"},{"type":"attr","value":"shape"},{"type":"Constant","value":"1"},{"type":"Assign","children":[43,44]},{"type":"Name","value":"y"},{"type":"AttributeLoad","children":[45,46]},{"type":"Name","value":"lfw_people"},{"type":"attr","value":"target"},{"type":"Assign","children":[48,49]},{"type":"Name","value":"target_names"},{"type":"AttributeLoad","children":[50,51]},{"type":"Name","value":"lfw_people"},{"type":"attr","value":"target_names"},{"type":"Assign","children":[53,54]},{"type":"Name","value":"n_classes"},{"type":"SubscriptLoad","children":[55,58]},{"type":"AttributeLoad","children":[56,57]},{"type":"Name","value":"target_names"},{"type":"attr","value":"shape"},{"type":"Constant","value":"0"},{"type":"Expr","children":[60]},{"type":"Call","children":[61,62]},{"type":"Name","value":"print"},{"type":"Constant","value":"Total dataset size:"},{"type":"Expr","children":[64]},{"type":"Call","children":[65,66]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[67,68]},{"type":"Constant","value":"n_samples: %d"},{"type":"Name","value":"n_samples"},{"type":"Expr","children":[70]},{"type":"Call","children":[71,72]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[73,74]},{"type":"Constant","value":"n_features: %d"},{"type":"Name","value":"n_features"},{"type":"Expr","children":[76]},{"type":"Call","children":[77,78]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[79,80]},{"type":"Constant","value":"n_classes: %d"},{"type":"Name","value":"n_classes"},{"type":"Assign","children":[82,87]},{"type":"TupleStore","children":[83,84,85,86]},{"type":"Name","value":"X_train"},{"type":"Name","value":"X_test"},{"type":"Name","value":"y_train"},{"type":"Name","value":"y_test"},{"type":"Call","children":[88,89,90,91,92]},{"type":"Name","value":"train_test_split"},{"type":"Name","value":"X"},{"type":"Name","value":"y"},{"type":"keyword","value":"test_size"},{"type":"keyword","value":"random_state"},{"type":"Assign","children":[94,95]},{"type":"Name","value":"scaler"},{"type":"Call","children":[96]},{"type":"Name","value":"StandardScaler"},{"type":"Assign","children":[98,99]},{"type":"Name","value":"X_train"},{"type":"Call","children":[100,103]},{"type":"AttributeLoad","children":[101,102]},{"type":"Name","value":"scaler"},{"type":"attr","value":"fit_transform"},{"type":"Name","value":"X_train"},{"type":"Assign","children":[105,106]},{"type":"Name","value":"X_test"},{"type":"Call","children":[107,110]},{"type":"AttributeLoad","children":[108,109]},{"type":"Name","value":"scaler"},{"type":"attr","value":"transform"},{"type":"Name","value":"X_test"},{"type":"Assign","children":[112,113]},{"type":"Name","value":"n_components"},{"type":"Constant","value":"150"},{"type":"Expr","children":[115]},{"type":"Call","children":[116,117]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[118,119]},{"type":"Constant","value":"Extracting the top %d eigenfaces from %d faces"},{"type":"TupleLoad","children":[120,121]},{"type":"Name","value":"n_components"},{"type":"SubscriptLoad","children":[122,125]},{"type":"AttributeLoad","children":[123,124]},{"type":"Name","value":"X_train"},{"type":"attr","value":"shape"},{"type":"Constant","value":"0"},{"type":"Assign","children":[127,128]},{"type":"Name","value":"t0"},{"type":"Call","children":[129]},{"type":"Name","value":"time"},{"type":"Assign","children":[131,132]},{"type":"Name","value":"pca"},{"type":"Call","children":[133,140]},{"type":"AttributeLoad","children":[134,139]},{"type":"Call","children":[135,136,137,138]},{"type":"Name","value":"PCA"},{"type":"keyword","value":"n_components"},{"type":"keyword","value":"svd_solver"},{"type":"keyword","value":"whiten"},{"type":"attr","value":"fit"},{"type":"Name","value":"X_train"},{"type":"Expr","children":[142]},{"type":"Call","children":[143,144]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[145,146]},{"type":"Constant","value":"done in %0.3fs"},{"type":"BinOpSub","children":[147,149]},{"type":"Call","children":[148]},{"type":"Name","value":"time"},{"type":"Name","value":"t0"},{"type":"Assign","children":[151,152]},{"type":"Name","value":"eigenfaces"},{"type":"Call","children":[153,158]},{"type":"AttributeLoad","children":[154,157]},{"type":"AttributeLoad","children":[155,156]},{"type":"Name","value":"pca"},{"type":"attr","value":"components_"},{"type":"attr","value":"reshape"},{"type":"TupleLoad","children":[159,160,161]},{"type":"Name","value":"n_components"},{"type":"Name","value":"h"},{"type":"Name","value":"w"},{"type":"Expr","children":[163]},{"type":"Call","children":[164,165]},{"type":"Name","value":"print"},{"type":"Constant","value":"Projecting the input data on the eigenfaces orthonormal basis"},{"type":"Assign","children":[167,168]},{"type":"Name","value":"t0"},{"type":"Call","children":[169]},{"type":"Name","value":"time"},{"type":"Assign","children":[171,172]},{"type":"Name","value":"X_train_pca"},{"type":"Call","children":[173,176]},{"type":"AttributeLoad","children":[174,175]},{"type":"Name","value":"pca"},{"type":"attr","value":"transform"},{"type":"Name","value":"X_train"},{"type":"Assign","children":[178,179]},{"type":"Name","value":"X_test_pca"},{"type":"Call","children":[180,183]},{"type":"AttributeLoad","children":[181,182]},{"type":"Name","value":"pca"},{"type":"attr","value":"transform"},{"type":"Name","value":"X_test"},{"type":"Expr","children":[185]},{"type":"Call","children":[186,187]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[188,189]},{"type":"Constant","value":"done in %0.3fs"},{"type":"BinOpSub","children":[190,192]},{"type":"Call","children":[191]},{"type":"Name","value":"time"},{"type":"Name","value":"t0"},{"type":"Expr","children":[194]},{"type":"Call","children":[195,196]},{"type":"Name","value":"print"},{"type":"Constant","value":"Fitting the classifier to the training set"},{"type":"Assign","children":[198,199]},{"type":"Name","value":"t0"},{"type":"Call","children":[200]},{"type":"Name","value":"time"},{"type":"Assign","children":[202,203]},{"type":"Name","value":"param_grid"},{"type":"Dict","children":[204,205,206,210]},{"type":"Constant","value":"C"},{"type":"Constant","value":"gamma"},{"type":"Call","children":[207,208,209]},{"type":"Name","value":"loguniform"},{"type":"Constant","value":"1000.0"},{"type":"Constant","value":"100000.0"},{"type":"Call","children":[211,212,213]},{"type":"Name","value":"loguniform"},{"type":"Constant","value":"0.0001"},{"type":"Constant","value":"0.1"},{"type":"Assign","children":[215,216]},{"type":"Name","value":"clf"},{"type":"Call","children":[217,218,222,223]},{"type":"Name","value":"RandomizedSearchCV"},{"type":"Call","children":[219,220,221]},{"type":"Name","value":"SVC"},{"type":"keyword","value":"kernel"},{"type":"keyword","value":"class_weight"},{"type":"Name","value":"param_grid"},{"type":"keyword","value":"n_iter"},{"type":"Assign","children":[225,226]},{"type":"Name","value":"clf"},{"type":"Call","children":[227,230,231]},{"type":"AttributeLoad","children":[228,229]},{"type":"Name","value":"clf"},{"type":"attr","value":"fit"},{"type":"Name","value":"X_train_pca"},{"type":"Name","value":"y_train"},{"type":"Expr","children":[233]},{"type":"Call","children":[234,235]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[236,237]},{"type":"Constant","value":"done in %0.3fs"},{"type":"BinOpSub","children":[238,240]},{"type":"Call","children":[239]},{"type":"Name","value":"time"},{"type":"Name","value":"t0"},{"type":"Expr","children":[242]},{"type":"Call","children":[243,244]},{"type":"Name","value":"print"},{"type":"Constant","value":"Best estimator found by grid search:"},{"type":"Expr","children":[246]},{"type":"Call","children":[247,248]},{"type":"Name","value":"print"},{"type":"AttributeLoad","children":[249,250]},{"type":"Name","value":"clf"},{"type":"attr","value":"best_estimator_"},{"type":"Expr","children":[252]},{"type":"Call","children":[253,254]},{"type":"Name","value":"print"},{"type":"Constant","value":"Predicting people's names on the test set"},{"type":"Assign","children":[256,257]},{"type":"Name","value":"t0"},{"type":"Call","children":[258]},{"type":"Name","value":"time"},{"type":"Assign","children":[260,261]},{"type":"Name","value":"y_pred"},{"type":"Call","children":[262,265]},{"type":"AttributeLoad","children":[263,264]},{"type":"Name","value":"clf"},{"type":"attr","value":"predict"},{"type":"Name","value":"X_test_pca"},{"type":"Expr","children":[267]},{"type":"Call","children":[268,269]},{"type":"Name","value":"print"},{"type":"BinOpMod","children":[270,271]},{"type":"Constant","value":"done in %0.3fs"},{"type":"BinOpSub","children":[272,274]},{"type":"Call","children":[273]},{"type":"Name","value":"time"},{"type":"Name","value":"t0"},{"type":"Expr","children":[276]},{"type":"Call","children":[277,278]},{"type":"Name","value":"print"},{"type":"Call","children":[279,280,281,282]},{"type":"Name","value":"classification_report"},{"type":"Name","value":"y_test"},{"type":"Name","value":"y_pred"},{"type":"keyword","value":"target_names"},{"type":"Expr","children":[284]},{"type":"Call","children":[285,288,289,290,291,292]},{"type":"AttributeLoad","children":[286,287]},{"type":"Name","value":"ConfusionMatrixDisplay"},{"type":"attr","value":"from_estimator"},{"type":"Name","value":"clf"},{"type":"Name","value":"X_test_pca"},{"type":"Name","value":"y_test"},{"type":"keyword","value":"display_labels"},{"type":"keyword","value":"xticks_rotation"},{"type":"Expr","children":[294]},{"type":"Call","children":[295]},{"type":"AttributeLoad","children":[296,297]},{"type":"Name","value":"plt"},{"type":"attr","value":"tight_layout"},{"type":"Expr","children":[299]},{"type":"Call","children":[300]},{"type":"AttributeLoad","children":[301,302]},{"type":"Name","value":"plt"},{"type":"attr","value":"show"},{"type":"FunctionDef","value":"plot_gallery"},{"type":"FunctionDef","value":"title"},{"type":"Assign","children":[306,307]},{"type":"Name","value":"prediction_titles"},{"type":"ListComp","children":[308,314]},{"type":"Call","children":[309,310,311,312,313]},{"type":"Name","value":"title"},{"type":"Name","value":"y_pred"},{"type":"Name","value":"y_test"},{"type":"Name","value":"target_names"},{"type":"Name","value":"i"},{"type":"comprehension","children":[315,316]},{"type":"Name","value":"i"},{"type":"Call","children":[317,318]},{"type":"Name","value":"range"},{"type":"SubscriptLoad","children":[319,322]},{"type":"AttributeLoad","children":[320,321]},{"type":"Name","value":"y_pred"},{"type":"attr","value":"shape"},{"type":"Constant","value":"0"},{"type":"Expr","children":[324]},{"type":"Call","children":[325,326,327,328,329]},{"type":"Name","value":"plot_gallery"},{"type":"Name","value":"X_test"},{"type":"Name","value":"prediction_titles"},{"type":"Name","value":"h"},{"type":"Name","value":"w"},{"type":"Assign","children":[331,332]},{"type":"Name","value":"eigenface_titles"},{"type":"ListComp","children":[333,336]},{"type":"BinOpMod","children":[334,335]},{"type":"Constant","value":"eigenface %d"},{"type":"Name","value":"i"},{"type":"comprehension","children":[337,338]},{"type":"Name","value":"i"},{"type":"Call","children":[339,340]},{"type":"Name","value":"range"},{"type":"SubscriptLoad","children":[341,344]},{"type":"AttributeLoad","children":[342,343]},{"type":"Name","value":"eigenfaces"},{"type":"attr","value":"shape"},{"type":"Constant","value":"0"},{"type":"Expr","children":[346]},{"type":"Call","children":[347,348,349,350,351]},{"type":"Name","value":"plot_gallery"},{"type":"Name","value":"eigenfaces"},{"type":"Name","value":"eigenface_titles"},{"type":"Name","value":"h"},{"type":"Name","value":"w"},{"type":"Expr","children":[353]},{"type":"Call","children":[354]},{"type":"AttributeLoad","children":[355,356]},{"type":"Name","value":"plt"},{"type":"attr","value":"show"}]
[{"type":"Module","children":[1,3,6,7,8,9,10]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nAuthor:\n    Weichen Shen, weichenswc@163.com\n\nReference:\n    [1] Qu Y, Cai H, Ren K, et al. Product-based neural networks for user response prediction[C]//Data Mining (ICDM), 2016 IEEE 16th International Conference on. IEEE, 2016: 1149-1154.(https://arxiv.org/pdf/1611.00144.pdf)\n"},{"type":"Import","children":[4]},{"type":"alias","value":"tensorflow","children":[5]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"feature_column"},{"type":"ImportFrom","value":"layers.core"},{"type":"ImportFrom","value":"layers.interaction"},{"type":"ImportFrom","value":"layers.utils"},{"type":"FunctionDef","value":"PNN"}]
[{"type":"Module","children":[1,3,6,9,12,15,18,19,20,21,22,23,24,25,26]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nThis module implements tools for pruning neural networks.\n\nIn particular, it provides tools for dealing with masks:\n\n  features = apply_mask(features)\n\nThe function `apply_mask` applies a binary mask to the channels of a given tensor. Consider the\nfollowing loss:\n\n  logits = tf.matmul(features, weights)\n  loss = tf.losses.sparse_softmax_cross_entropy(labels, logits)\n\nEach mask has a corresponding pruning signal. The function `update_pruning_signals` will update and\nreturn these signals:\n\n  signals = update_pruning_signals(loss)\n\nThe pruning operation will zero out the mask entry with the smallest corresponding pruning signal:\n\n  prune(signals)\n\nThe following function allows us to estimate the computational cost of a graph (number of FLOPs):\n\n  cost = computational_cost(loss)\n\nTo compute the cost of each feature per data point, we can do:\n\n  costs = tf.gradients(cost / batch_size, masks)\n\nThe current implementation of `computational_cost` is designed to work with standard feed-forward\nand convolutional network architectures only, but may fail with more complicated architectures.\n"},{"type":"Import","children":[4]},{"type":"alias","value":"numpy","children":[5]},{"type":"identifier","value":"np"},{"type":"Import","children":[7]},{"type":"alias","value":"tensorflow.compat.v1","children":[8]},{"type":"identifier","value":"tf"},{"type":"Assign","children":[10,11]},{"type":"Name","value":"MASK_COLLECTION"},{"type":"Constant","value":"pruning/masks"},{"type":"Assign","children":[13,14]},{"type":"Name","value":"MASK_EXTENDED_COLLECTION"},{"type":"Constant","value":"pruning/masks_extended"},{"type":"Assign","children":[16,17]},{"type":"Name","value":"OP_COLLECTION"},{"type":"Constant","value":"pruning/ops"},{"type":"FunctionDef","value":"apply_mask"},{"type":"FunctionDef","value":"extend_mask"},{"type":"FunctionDef","value":"find_input_mask"},{"type":"FunctionDef","value":"find_output_mask"},{"type":"FunctionDef","value":"find_mask"},{"type":"FunctionDef","value":"pruned_shape"},{"type":"FunctionDef","value":"computational_cost"},{"type":"FunctionDef","value":"update_pruning_signals"},{"type":"FunctionDef","value":"prune"}]
[{"type":"Module","children":[1,3,5,7,9,10,12,13,14,15,16,17,18,19,22,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,53,54,55,56,57,58,59,60,67,80,87,88,89,90,91,92,93,94,95]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Recurrent Neural Network cores."},{"type":"Import","children":[4]},{"type":"alias","value":"abc"},{"type":"Import","children":[6]},{"type":"alias","value":"collections"},{"type":"Import","children":[8]},{"type":"alias","value":"functools"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[11]},{"type":"alias","value":"uuid"},{"type":"ImportFrom","value":"sonnet.src"},{"type":"ImportFrom","value":"sonnet.src"},{"type":"ImportFrom","value":"sonnet.src"},{"type":"ImportFrom","value":"sonnet.src"},{"type":"ImportFrom","value":"sonnet.src"},{"type":"ImportFrom","value":"sonnet.src"},{"type":"ImportFrom","value":"sonnet.src"},{"type":"Import","children":[20]},{"type":"alias","value":"tensorflow.compat.v1","children":[21]},{"type":"identifier","value":"tf1"},{"type":"Import","children":[23]},{"type":"alias","value":"tensorflow","children":[24]},{"type":"identifier","value":"tf"},{"type":"Import","children":[26]},{"type":"alias","value":"tree"},{"type":"ImportFrom","value":"tensorflow.python.eager"},{"type":"ClassDef","value":"RNNCore"},{"type":"ClassDef","value":"UnrolledRNN"},{"type":"ClassDef","value":"TrainableState"},{"type":"FunctionDef","value":"static_unroll"},{"type":"ClassDef","value":"_ListWrapper"},{"type":"FunctionDef","value":"dynamic_unroll"},{"type":"FunctionDef","value":"_unstack_input_sequence"},{"type":"FunctionDef","value":"_safe_where"},{"type":"FunctionDef","value":"_rnn_step"},{"type":"ClassDef","value":"VanillaRNN"},{"type":"ClassDef","value":"_LegacyDeepRNN"},{"type":"ClassDef","value":"DeepRNN"},{"type":"FunctionDef","value":"deep_rnn_with_skip_connections"},{"type":"ClassDef","value":"_ResidualWrapper"},{"type":"FunctionDef","value":"deep_rnn_with_residual_connections"},{"type":"Assign","children":[44,45]},{"type":"Name","value":"LSTMState"},{"type":"Call","children":[46,49,50]},{"type":"AttributeLoad","children":[47,48]},{"type":"Name","value":"collections"},{"type":"attr","value":"namedtuple"},{"type":"Constant","value":"LSTMState"},{"type":"ListLoad","children":[51,52]},{"type":"Constant","value":"hidden"},{"type":"Constant","value":"cell"},{"type":"ClassDef","value":"LSTM"},{"type":"FunctionDef","value":"_lstm_fn"},{"type":"ClassDef","value":"UnrolledLSTM"},{"type":"FunctionDef","value":"_specialize_per_device"},{"type":"FunctionDef","value":"_fallback_unrolled_lstm"},{"type":"FunctionDef","value":"_block_unrolled_lstm"},{"type":"FunctionDef","value":"_cudnn_unrolled_lstm"},{"type":"Assign","children":[61,62]},{"type":"Name","value":"_unrolled_lstm_impls"},{"type":"Dict","children":[63,64,65,66]},{"type":"Constant","value":"GPU"},{"type":"Constant","value":"TPU"},{"type":"Name","value":"_cudnn_unrolled_lstm"},{"type":"Name","value":"_fallback_unrolled_lstm"},{"type":"If","children":[68,74]},{"type":"Call","children":[69,70,73]},{"type":"Name","value":"hasattr"},{"type":"AttributeLoad","children":[71,72]},{"type":"Name","value":"tf"},{"type":"attr","value":"raw_ops"},{"type":"Constant","value":"BlockLSTMV2"},{"type":"body","children":[75]},{"type":"Assign","children":[76,79]},{"type":"SubscriptStore","children":[77,78]},{"type":"Name","value":"_unrolled_lstm_impls"},{"type":"Constant","value":"CPU"},{"type":"Name","value":"_block_unrolled_lstm"},{"type":"Assign","children":[81,82]},{"type":"Name","value":"_specialized_unrolled_lstm"},{"type":"Call","children":[83,84,85,86]},{"type":"Name","value":"_specialize_per_device"},{"type":"Constant","value":"snt_unrolled_lstm"},{"type":"keyword","value":"specializations"},{"type":"keyword","value":"default"},{"type":"ClassDef","value":"_RecurrentDropoutWrapper"},{"type":"FunctionDef","value":"lstm_with_recurrent_dropout"},{"type":"ClassDef","value":"_ConvNDLSTM"},{"type":"ClassDef","value":"Conv1DLSTM"},{"type":"ClassDef","value":"Conv2DLSTM"},{"type":"ClassDef","value":"Conv3DLSTM"},{"type":"ClassDef","value":"GRU"},{"type":"ClassDef","value":"CuDNNGRU"},{"type":"FunctionDef","value":"_check_inputs_dtype"}]
[{"type":"Module","children":[1,3,4,5,6,11,12,29,30,31]},{"type":"Import","children":[2]},{"type":"alias","value":"torch"},{"type":"ImportFrom","value":"torch"},{"type":"ImportFrom","value":"optimizer"},{"type":"ImportFrom","value":"typing"},{"type":"Assign","children":[7,8]},{"type":"Name","value":"__all__"},{"type":"ListLoad","children":[9,10]},{"type":"Constant","value":"RMSprop"},{"type":"Constant","value":"rmsprop"},{"type":"ClassDef","value":"RMSprop"},{"type":"Assign","children":[13,16]},{"type":"AttributeStore","children":[14,15]},{"type":"Name","value":"RMSprop"},{"type":"attr","value":"__doc__"},{"type":"BinOpAdd","children":[17,18]},{"type":"Constant","value":"Implements RMSprop algorithm.\n\n    .. math::\n       \\begin{aligned}\n            &\\rule{110mm}{0.4pt}                                                                 \\\\\n            &\\textbf{input}      : \\alpha \\text{ (alpha)},\\: \\gamma \\text{ (lr)},\n                \\: \\theta_0 \\text{ (params)}, \\: f(\\theta) \\text{ (objective)}                   \\\\\n            &\\hspace{13mm}   \\lambda \\text{ (weight decay)},\\: \\mu \\text{ (momentum)},\\: centered\\\\\n            &\\textbf{initialize} : v_0 \\leftarrow 0 \\text{ (square average)}, \\:\n                \\textbf{b}_0 \\leftarrow 0 \\text{ (buffer)}, \\: g^{ave}_0 \\leftarrow 0     \\\\[-1.ex]\n            &\\rule{110mm}{0.4pt}                                                                 \\\\\n            &\\textbf{for} \\: t=1 \\: \\textbf{to} \\: \\ldots \\: \\textbf{do}                         \\\\\n            &\\hspace{5mm}g_t           \\leftarrow   \\nabla_{\\theta} f_t (\\theta_{t-1})           \\\\\n            &\\hspace{5mm}if \\: \\lambda \\neq 0                                                    \\\\\n            &\\hspace{10mm} g_t \\leftarrow g_t + \\lambda  \\theta_{t-1}                            \\\\\n            &\\hspace{5mm}v_t           \\leftarrow   \\alpha v_{t-1} + (1 - \\alpha) g^2_t\n                \\hspace{8mm}                                                                     \\\\\n            &\\hspace{5mm} \\tilde{v_t} \\leftarrow v_t                                             \\\\\n            &\\hspace{5mm}if \\: centered                                                          \\\\\n            &\\hspace{10mm} g^{ave}_t \\leftarrow g^{ave}_{t-1} \\alpha + (1-\\alpha) g_t            \\\\\n            &\\hspace{10mm} \\tilde{v_t} \\leftarrow \\tilde{v_t} -  \\big(g^{ave}_{t} \\big)^2        \\\\\n            &\\hspace{5mm}if \\: \\mu > 0                                                           \\\\\n            &\\hspace{10mm} \\textbf{b}_t\\leftarrow \\mu \\textbf{b}_{t-1} +\n                g_t/ \\big(\\sqrt{\\tilde{v_t}} +  \\epsilon \\big)                                   \\\\\n            &\\hspace{10mm} \\theta_t \\leftarrow \\theta_{t-1} - \\gamma \\textbf{b}_t                \\\\\n            &\\hspace{5mm} else                                                                   \\\\\n            &\\hspace{10mm}\\theta_t      \\leftarrow   \\theta_{t-1} -\n                \\gamma  g_t/ \\big(\\sqrt{\\tilde{v_t}} + \\epsilon \\big)  \\hspace{3mm}              \\\\\n            &\\rule{110mm}{0.4pt}                                                          \\\\[-1.ex]\n            &\\bf{return} \\:  \\theta_t                                                     \\\\[-1.ex]\n            &\\rule{110mm}{0.4pt}                                                          \\\\[-1.ex]\n       \\end{aligned}\n\n    For further details regarding the algorithm we refer to\n    `lecture notes <https://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf>`_ by G. Hinton.\n    and centered version `Generating Sequences\n    With Recurrent Neural Networks <https://arxiv.org/pdf/1308.0850v5.pdf>`_.\n    The implementation here takes the square root of the gradient average before\n    adding epsilon (note that TensorFlow interchanges these two operations). The effective\n    learning rate is thus :math:`\\gamma/(\\sqrt{v} + \\epsilon)` where :math:`\\gamma`\n    is the scheduled learning rate and :math:`v` is the weighted moving average\n    of the squared gradient.\n    "},{"type":"JoinedStr","children":[19,20,22,23,25,26,28]},{"type":"Constant","value":"\n    Args:\n        params (iterable): iterable of parameters to optimize or dicts defining\n            parameter groups\n        lr (float, optional): learning rate (default: 1e-2)\n        momentum (float, optional): momentum factor (default: 0)\n        alpha (float, optional): smoothing constant (default: 0.99)\n        eps (float, optional): term added to the denominator to improve\n            numerical stability (default: 1e-8)\n        centered (bool, optional) : if ``True``, compute the centered RMSProp,\n            the gradient is normalized by an estimation of its variance\n        weight_decay (float, optional): weight decay (L2 penalty) (default: 0)\n        "},{"type":"FormattedValue","children":[21]},{"type":"Name","value":"_foreach_doc"},{"type":"Constant","value":"\n        "},{"type":"FormattedValue","children":[24]},{"type":"Name","value":"_maximize_doc"},{"type":"Constant","value":"\n        "},{"type":"FormattedValue","children":[27]},{"type":"Name","value":"_differentiable_doc"},{"type":"Constant","value":"\n\n    "},{"type":"FunctionDef","value":"rmsprop"},{"type":"FunctionDef","value":"_single_tensor_rmsprop"},{"type":"FunctionDef","value":"_multi_tensor_rmsprop"}]
[{"type":"Module","children":[1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,31,32,33,34,35,36,37,38,39,40,41,42,43]},{"type":"Expr","children":[2]},{"type":"Constant","value":"RNN helpers for TensorFlow models."},{"type":"ImportFrom","value":"tensorflow.python.eager"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.framework"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.ops"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util"},{"type":"ImportFrom","value":"tensorflow.python.util.tf_export"},{"type":"Assign","children":[26,27]},{"type":"Name","value":"_concat"},{"type":"AttributeLoad","children":[28,29]},{"type":"Name","value":"rnn_cell_impl"},{"type":"attr","value":"_concat"},{"type":"FunctionDef","value":"_transpose_batch_time"},{"type":"FunctionDef","value":"_best_effort_input_batch_size"},{"type":"FunctionDef","value":"_infer_state_dtype"},{"type":"FunctionDef","value":"_maybe_tensor_shape_from_tensor"},{"type":"FunctionDef","value":"_should_cache"},{"type":"FunctionDef","value":"_rnn_step"},{"type":"FunctionDef","value":"_reverse_seq"},{"type":"FunctionDef","value":"bidirectional_dynamic_rnn"},{"type":"FunctionDef","value":"dynamic_rnn"},{"type":"FunctionDef","value":"_dynamic_rnn_loop"},{"type":"FunctionDef","value":"raw_rnn"},{"type":"FunctionDef","value":"static_rnn"},{"type":"FunctionDef","value":"static_state_saving_rnn"},{"type":"FunctionDef","value":"static_bidirectional_rnn"}]
[{"type":"Module","children":[1,3,5,6,11,19,30]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Setup script for TensorFlow Lucid."},{"type":"Import","children":[4]},{"type":"alias","value":"lucid"},{"type":"ImportFrom","value":"setuptools"},{"type":"Assign","children":[7,8]},{"type":"Name","value":"version"},{"type":"AttributeLoad","children":[9,10]},{"type":"Name","value":"lucid"},{"type":"attr","value":"__version__"},{"type":"Assign","children":[12,13]},{"type":"Name","value":"test_deps"},{"type":"ListLoad","children":[14,15,16,17,18]},{"type":"Constant","value":"future"},{"type":"Constant","value":"twine"},{"type":"Constant","value":"pytest"},{"type":"Constant","value":"pytest-mock"},{"type":"Constant","value":"python-coveralls"},{"type":"Assign","children":[20,21]},{"type":"Name","value":"extras"},{"type":"Dict","children":[22,23,24,25,26,28]},{"type":"Constant","value":"test"},{"type":"Constant","value":"tf"},{"type":"Constant","value":"tf_gpu"},{"type":"Name","value":"test_deps"},{"type":"ListLoad","children":[27]},{"type":"Constant","value":"tensorflow>=1.6.0"},{"type":"ListLoad","children":[29]},{"type":"Constant","value":"tensorflow-gpu>=1.6.0"},{"type":"Expr","children":[31]},{"type":"Call","children":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47]},{"type":"Name","value":"setup"},{"type":"keyword","value":"name"},{"type":"keyword","value":"packages"},{"type":"keyword","value":"version"},{"type":"keyword","value":"description"},{"type":"keyword","value":"author"},{"type":"keyword","value":"author_email"},{"type":"keyword","value":"url"},{"type":"keyword","value":"download_url"},{"type":"keyword","value":"license"},{"type":"keyword","value":"keywords"},{"type":"keyword","value":"install_requires"},{"type":"keyword","value":"setup_requires"},{"type":"keyword","value":"tests_require"},{"type":"keyword","value":"extras_require"},{"type":"keyword","value":"classifiers"}]
[{"type":"Module","children":[1,3,6,10,11]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Normalization layers.\n\n## References:\n\n[1] Yuichi Yoshida, Takeru Miyato. Spectral Norm Regularization for Improving\n    the Generalizability of Deep Learning.\n    _arXiv preprint arXiv:1705.10941_, 2017. https://arxiv.org/abs/1705.10941\n\n[2] Takeru Miyato, Toshiki Kataoka, Masanori Koyama, Yuichi Yoshida.\n    Spectral normalization for generative adversarial networks.\n    In _International Conference on Learning Representations_, 2018.\n\n[3] Henry Gouk, Eibe Frank, Bernhard Pfahringer, Michael Cree.\n    Regularisation of neural networks by enforcing lipschitz continuity.\n    _arXiv preprint arXiv:1804.04368_, 2018. https://arxiv.org/abs/1804.04368\n"},{"type":"Import","children":[4]},{"type":"alias","value":"numpy","children":[5]},{"type":"identifier","value":"np"},{"type":"Import","children":[7,9]},{"type":"alias","value":"tensorflow","children":[8]},{"type":"identifier","value":"tf"},{"type":"alias","value":"tf_keras"},{"type":"ClassDef","value":"SpectralNormalization"},{"type":"ClassDef","value":"SpectralNormalizationConv2D"}]
[{"type":"Module","children":[1,2,4,5,6,7,9,12,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,44,45,46,47,48,49,56,59,62,65,68,71,78,89,110,116,124,125]},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[3]},{"type":"alias","value":"logging"},{"type":"ImportFrom","value":"rasa.engine.recipes.default_recipe"},{"type":"ImportFrom","value":"pathlib"},{"type":"ImportFrom","value":"collections"},{"type":"Import","children":[8]},{"type":"alias","value":"contextlib"},{"type":"Import","children":[10]},{"type":"alias","value":"numpy","children":[11]},{"type":"identifier","value":"np"},{"type":"Import","children":[13]},{"type":"alias","value":"tensorflow","children":[14]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"typing"},{"type":"ImportFrom","value":"rasa.engine.graph"},{"type":"ImportFrom","value":"rasa.engine.storage.resource"},{"type":"ImportFrom","value":"rasa.engine.storage.storage"},{"type":"ImportFrom","value":"rasa.exceptions"},{"type":"ImportFrom","value":"rasa.nlu.constants"},{"type":"ImportFrom","value":"rasa.nlu.extractors.extractor"},{"type":"Import","children":[23]},{"type":"alias","value":"rasa.core.actions.action"},{"type":"ImportFrom","value":"rasa.core.featurizers.precomputation"},{"type":"ImportFrom","value":"rasa.core.featurizers.tracker_featurizers"},{"type":"ImportFrom","value":"rasa.core.featurizers.tracker_featurizers"},{"type":"ImportFrom","value":"rasa.shared.exceptions"},{"type":"ImportFrom","value":"rasa.shared.nlu.constants"},{"type":"ImportFrom","value":"rasa.core.policies.policy"},{"type":"ImportFrom","value":"rasa.core.constants"},{"type":"ImportFrom","value":"rasa.shared.constants"},{"type":"ImportFrom","value":"rasa.shared.core.constants"},{"type":"ImportFrom","value":"rasa.shared.core.trackers"},{"type":"ImportFrom","value":"rasa.shared.core.generator"},{"type":"ImportFrom","value":"rasa.shared.core.events"},{"type":"ImportFrom","value":"rasa.shared.core.domain"},{"type":"ImportFrom","value":"rasa.shared.nlu.training_data.message"},{"type":"ImportFrom","value":"rasa.shared.nlu.training_data.features"},{"type":"Import","children":[40]},{"type":"alias","value":"rasa.shared.utils.io"},{"type":"Import","children":[42]},{"type":"alias","value":"rasa.utils.io"},{"type":"ImportFrom","value":"rasa.utils"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.models"},{"type":"ImportFrom","value":"rasa.utils.tensorflow"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.model_data"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.model_data_utils"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.constants"},{"type":"Assign","children":[50,51]},{"type":"Name","value":"logger"},{"type":"Call","children":[52,55]},{"type":"AttributeLoad","children":[53,54]},{"type":"Name","value":"logging"},{"type":"attr","value":"getLogger"},{"type":"Name","value":"__name__"},{"type":"Assign","children":[57,58]},{"type":"Name","value":"E2E_CONFIDENCE_THRESHOLD"},{"type":"Constant","value":"e2e_confidence_threshold"},{"type":"Assign","children":[60,61]},{"type":"Name","value":"LABEL_KEY"},{"type":"Name","value":"LABEL"},{"type":"Assign","children":[63,64]},{"type":"Name","value":"LABEL_SUB_KEY"},{"type":"Name","value":"IDS"},{"type":"Assign","children":[66,67]},{"type":"Name","value":"LENGTH"},{"type":"Constant","value":"length"},{"type":"Assign","children":[69,70]},{"type":"Name","value":"INDICES"},{"type":"Constant","value":"indices"},{"type":"Assign","children":[72,73]},{"type":"Name","value":"SENTENCE_FEATURES_TO_ENCODE"},{"type":"ListLoad","children":[74,75,76,77]},{"type":"Name","value":"INTENT"},{"type":"Name","value":"TEXT"},{"type":"Name","value":"ACTION_NAME"},{"type":"Name","value":"ACTION_TEXT"},{"type":"Assign","children":[79,80]},{"type":"Name","value":"SEQUENCE_FEATURES_TO_ENCODE"},{"type":"ListLoad","children":[81,82,83]},{"type":"Name","value":"TEXT"},{"type":"Name","value":"ACTION_TEXT"},{"type":"JoinedStr","children":[84,86,87]},{"type":"FormattedValue","children":[85]},{"type":"Name","value":"LABEL"},{"type":"Constant","value":"_"},{"type":"FormattedValue","children":[88]},{"type":"Name","value":"ACTION_TEXT"},{"type":"Assign","children":[90,91]},{"type":"Name","value":"LABEL_FEATURES_TO_ENCODE"},{"type":"ListLoad","children":[92,98,104]},{"type":"JoinedStr","children":[93,95,96]},{"type":"FormattedValue","children":[94]},{"type":"Name","value":"LABEL"},{"type":"Constant","value":"_"},{"type":"FormattedValue","children":[97]},{"type":"Name","value":"ACTION_NAME"},{"type":"JoinedStr","children":[99,101,102]},{"type":"FormattedValue","children":[100]},{"type":"Name","value":"LABEL"},{"type":"Constant","value":"_"},{"type":"FormattedValue","children":[103]},{"type":"Name","value":"ACTION_TEXT"},{"type":"JoinedStr","children":[105,107,108]},{"type":"FormattedValue","children":[106]},{"type":"Name","value":"LABEL"},{"type":"Constant","value":"_"},{"type":"FormattedValue","children":[109]},{"type":"Name","value":"INTENT"},{"type":"Assign","children":[111,112]},{"type":"Name","value":"STATE_LEVEL_FEATURES"},{"type":"ListLoad","children":[113,114,115]},{"type":"Name","value":"ENTITIES"},{"type":"Name","value":"SLOTS"},{"type":"Name","value":"ACTIVE_LOOP"},{"type":"Assign","children":[117,118]},{"type":"Name","value":"PREDICTION_FEATURES"},{"type":"BinOpAdd","children":[119,122]},{"type":"BinOpAdd","children":[120,121]},{"type":"Name","value":"STATE_LEVEL_FEATURES"},{"type":"Name","value":"SENTENCE_FEATURES_TO_ENCODE"},{"type":"ListLoad","children":[123]},{"type":"Name","value":"DIALOGUE"},{"type":"ClassDef","value":"TEDPolicy"},{"type":"ClassDef","value":"TED"}]
[{"type":"Module","children":[1,3,5,7,9,16,19,22,24,27,30,32,33,34,36,38,40,43,54,61,79,97,106,115,117,146,156,163,172,181,183,189,202,210,212,218,231,237,243,245,247,254,255,265,274,283,292,294,296,299,302,305,308,309,325,335,337,338,340,341,344,347,354,365,371,389,391,393,394,396,397,399,402,405,408,411,414,417,420,423,432,443,455,460,470,477,486,488,498,505,511,522,533,541,588,598]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\nTitle: Traffic forecasting using graph neural networks and LSTM\nAuthor: [Arash Khodadadi](https://www.linkedin.com/in/arash-khodadadi-08a02490/)\nDate created: 2021/12/28\nLast modified: 2023/11/22\nDescription: This example demonstrates how to do timeseries forecasting over graphs.\nAccelerator: GPU\n"},{"type":"Expr","children":[4]},{"type":"Constant","value":"\n## Introduction\n\nThis example shows how to forecast traffic condition using graph neural networks and LSTM.\nSpecifically, we are interested in predicting the future values of the traffic speed given\na history of the traffic speed for a collection of road segments.\n\nOne popular method to\nsolve this problem is to consider each road segment's traffic speed as a separate\ntimeseries and predict the future values of each timeseries\nusing the past values of the same timeseries.\n\nThis method, however, ignores the dependency of the traffic speed of one road segment on\nthe neighboring segments. To be able to take into account the complex interactions between\nthe traffic speed on a collection of neighboring roads, we can define the traffic network\nas a graph and consider the traffic speed as a signal on this graph. In this example,\nwe implement a neural network architecture which can process timeseries data over a graph.\nWe first show how to process the data and create a\n[tf.data.Dataset](https://www.tensorflow.org/api_docs/python/tf/data/Dataset) for\nforecasting over graphs. Then, we implement a model which uses graph convolution and\nLSTM layers to perform forecasting over a graph.\n\nThe data processing and the model architecture are inspired by this paper:\n\nYu, Bing, Haoteng Yin, and Zhanxing Zhu. \"Spatio-temporal graph convolutional networks:\na deep learning framework for traffic forecasting.\" Proceedings of the 27th International\nJoint Conference on Artificial Intelligence, 2018.\n([github](https://github.com/VeritasYin/STGCN_IJCAI-18))\n"},{"type":"Expr","children":[6]},{"type":"Constant","value":"\n## Setup\n"},{"type":"Import","children":[8]},{"type":"alias","value":"os"},{"type":"Assign","children":[10,15]},{"type":"SubscriptStore","children":[11,14]},{"type":"AttributeLoad","children":[12,13]},{"type":"Name","value":"os"},{"type":"attr","value":"environ"},{"type":"Constant","value":"KERAS_BACKEND"},{"type":"Constant","value":"tensorflow"},{"type":"Import","children":[17]},{"type":"alias","value":"pandas","children":[18]},{"type":"identifier","value":"pd"},{"type":"Import","children":[20]},{"type":"alias","value":"numpy","children":[21]},{"type":"identifier","value":"np"},{"type":"Import","children":[23]},{"type":"alias","value":"typing"},{"type":"Import","children":[25]},{"type":"alias","value":"matplotlib.pyplot","children":[26]},{"type":"identifier","value":"plt"},{"type":"Import","children":[28]},{"type":"alias","value":"tensorflow","children":[29]},{"type":"identifier","value":"tf"},{"type":"Import","children":[31]},{"type":"alias","value":"keras"},{"type":"ImportFrom","value":"keras"},{"type":"ImportFrom","value":"keras"},{"type":"Expr","children":[35]},{"type":"Constant","value":"\n## Data preparation\n"},{"type":"Expr","children":[37]},{"type":"Constant","value":"\n### Data description\n\nWe use a real-world traffic speed dataset named `PeMSD7`. We use the version\ncollected and prepared by [Yu et al., 2018](https://arxiv.org/abs/1709.04875)\nand available\n[here](https://github.com/VeritasYin/STGCN_IJCAI-18/tree/master/dataset).\n\nThe data consists of two files:\n\n- `PeMSD7_W_228.csv` contains the distances between 228\nstations across the District 7 of California.\n- `PeMSD7_V_228.csv` contains traffic\nspeed collected for those stations in the weekdays of May and June of 2012.\n\nThe full description of the dataset can be found in\n[Yu et al., 2018](https://arxiv.org/abs/1709.04875).\n"},{"type":"Expr","children":[39]},{"type":"Constant","value":"\n### Loading data\n"},{"type":"Assign","children":[41,42]},{"type":"Name","value":"url"},{"type":"Constant","value":"https://github.com/VeritasYin/STGCN_IJCAI-18/raw/master/dataset/PeMSD7_Full.zip"},{"type":"Assign","children":[44,45]},{"type":"Name","value":"data_dir"},{"type":"Call","children":[46,51,52,53]},{"type":"AttributeLoad","children":[47,50]},{"type":"AttributeLoad","children":[48,49]},{"type":"Name","value":"keras"},{"type":"attr","value":"utils"},{"type":"attr","value":"get_file"},{"type":"keyword","value":"origin"},{"type":"keyword","value":"extract"},{"type":"keyword","value":"archive_format"},{"type":"Assign","children":[55,56]},{"type":"Name","value":"data_dir"},{"type":"Call","children":[57,60]},{"type":"AttributeLoad","children":[58,59]},{"type":"Name","value":"data_dir"},{"type":"attr","value":"rstrip"},{"type":"Constant","value":"PeMSD7_Full.zip"},{"type":"Assign","children":[62,63]},{"type":"Name","value":"route_distances"},{"type":"Call","children":[64]},{"type":"AttributeLoad","children":[65,78]},{"type":"Call","children":[66,69,77]},{"type":"AttributeLoad","children":[67,68]},{"type":"Name","value":"pd"},{"type":"attr","value":"read_csv"},{"type":"Call","children":[70,75,76]},{"type":"AttributeLoad","children":[71,74]},{"type":"AttributeLoad","children":[72,73]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"join"},{"type":"Name","value":"data_dir"},{"type":"Constant","value":"PeMSD7_W_228.csv"},{"type":"keyword","value":"header"},{"type":"attr","value":"to_numpy"},{"type":"Assign","children":[80,81]},{"type":"Name","value":"speeds_array"},{"type":"Call","children":[82]},{"type":"AttributeLoad","children":[83,96]},{"type":"Call","children":[84,87,95]},{"type":"AttributeLoad","children":[85,86]},{"type":"Name","value":"pd"},{"type":"attr","value":"read_csv"},{"type":"Call","children":[88,93,94]},{"type":"AttributeLoad","children":[89,92]},{"type":"AttributeLoad","children":[90,91]},{"type":"Name","value":"os"},{"type":"attr","value":"path"},{"type":"attr","value":"join"},{"type":"Name","value":"data_dir"},{"type":"Constant","value":"PeMSD7_V_228.csv"},{"type":"keyword","value":"header"},{"type":"attr","value":"to_numpy"},{"type":"Expr","children":[98]},{"type":"Call","children":[99,100]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[101,102]},{"type":"Constant","value":"route_distances shape="},{"type":"FormattedValue","children":[103]},{"type":"AttributeLoad","children":[104,105]},{"type":"Name","value":"route_distances"},{"type":"attr","value":"shape"},{"type":"Expr","children":[107]},{"type":"Call","children":[108,109]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[110,111]},{"type":"Constant","value":"speeds_array shape="},{"type":"FormattedValue","children":[112]},{"type":"AttributeLoad","children":[113,114]},{"type":"Name","value":"speeds_array"},{"type":"attr","value":"shape"},{"type":"Expr","children":[116]},{"type":"Constant","value":"\n### sub-sampling roads\n\nTo reduce the problem size and make the training faster, we will only\nwork with a sample of 26 roads out of the 228 roads in the dataset.\nWe have chosen the roads by starting from road 0, choosing the 5 closest\nroads to it, and continuing this process until we get 25 roads. You can choose\nany other subset of the roads. We chose the roads in this way to increase the likelihood\nof having roads with correlated speed timeseries.\n`sample_routes` contains the IDs of the selected roads.\n"},{"type":"Assign","children":[118,119]},{"type":"Name","value":"sample_routes"},{"type":"ListLoad","children":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145]},{"type":"Constant","value":"0"},{"type":"Constant","value":"1"},{"type":"Constant","value":"4"},{"type":"Constant","value":"7"},{"type":"Constant","value":"8"},{"type":"Constant","value":"11"},{"type":"Constant","value":"15"},{"type":"Constant","value":"108"},{"type":"Constant","value":"109"},{"type":"Constant","value":"114"},{"type":"Constant","value":"115"},{"type":"Constant","value":"118"},{"type":"Constant","value":"120"},{"type":"Constant","value":"123"},{"type":"Constant","value":"124"},{"type":"Constant","value":"126"},{"type":"Constant","value":"127"},{"type":"Constant","value":"129"},{"type":"Constant","value":"130"},{"type":"Constant","value":"132"},{"type":"Constant","value":"133"},{"type":"Constant","value":"136"},{"type":"Constant","value":"139"},{"type":"Constant","value":"144"},{"type":"Constant","value":"147"},{"type":"Constant","value":"216"},{"type":"Assign","children":[147,148]},{"type":"Name","value":"route_distances"},{"type":"SubscriptLoad","children":[149,150]},{"type":"Name","value":"route_distances"},{"type":"Call","children":[151,154,155]},{"type":"AttributeLoad","children":[152,153]},{"type":"Name","value":"np"},{"type":"attr","value":"ix_"},{"type":"Name","value":"sample_routes"},{"type":"Name","value":"sample_routes"},{"type":"Assign","children":[157,158]},{"type":"Name","value":"speeds_array"},{"type":"SubscriptLoad","children":[159,160]},{"type":"Name","value":"speeds_array"},{"type":"TupleLoad","children":[161,162]},{"type":"Slice"},{"type":"Name","value":"sample_routes"},{"type":"Expr","children":[164]},{"type":"Call","children":[165,166]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[167,168]},{"type":"Constant","value":"route_distances shape="},{"type":"FormattedValue","children":[169]},{"type":"AttributeLoad","children":[170,171]},{"type":"Name","value":"route_distances"},{"type":"attr","value":"shape"},{"type":"Expr","children":[173]},{"type":"Call","children":[174,175]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[176,177]},{"type":"Constant","value":"speeds_array shape="},{"type":"FormattedValue","children":[178]},{"type":"AttributeLoad","children":[179,180]},{"type":"Name","value":"speeds_array"},{"type":"attr","value":"shape"},{"type":"Expr","children":[182]},{"type":"Constant","value":"\n### Data visualization\n\nHere are the timeseries of the traffic speed for two of the routes:\n"},{"type":"Expr","children":[184]},{"type":"Call","children":[185,188]},{"type":"AttributeLoad","children":[186,187]},{"type":"Name","value":"plt"},{"type":"attr","value":"figure"},{"type":"keyword","value":"figsize"},{"type":"Expr","children":[190]},{"type":"Call","children":[191,194]},{"type":"AttributeLoad","children":[192,193]},{"type":"Name","value":"plt"},{"type":"attr","value":"plot"},{"type":"SubscriptLoad","children":[195,196]},{"type":"Name","value":"speeds_array"},{"type":"TupleLoad","children":[197,198]},{"type":"Slice"},{"type":"ListLoad","children":[199,200]},{"type":"Constant","value":"0"},{"type":"UnaryOpUSub","children":[201]},{"type":"Constant","value":"1"},{"type":"Expr","children":[203]},{"type":"Call","children":[204,207]},{"type":"AttributeLoad","children":[205,206]},{"type":"Name","value":"plt"},{"type":"attr","value":"legend"},{"type":"ListLoad","children":[208,209]},{"type":"Constant","value":"route_0"},{"type":"Constant","value":"route_25"},{"type":"Expr","children":[211]},{"type":"Constant","value":"\nWe can also visualize the correlation between the timeseries in different routes.\n"},{"type":"Expr","children":[213]},{"type":"Call","children":[214,217]},{"type":"AttributeLoad","children":[215,216]},{"type":"Name","value":"plt"},{"type":"attr","value":"figure"},{"type":"keyword","value":"figsize"},{"type":"Expr","children":[219]},{"type":"Call","children":[220,223,230]},{"type":"AttributeLoad","children":[221,222]},{"type":"Name","value":"plt"},{"type":"attr","value":"matshow"},{"type":"Call","children":[224,227]},{"type":"AttributeLoad","children":[225,226]},{"type":"Name","value":"np"},{"type":"attr","value":"corrcoef"},{"type":"AttributeLoad","children":[228,229]},{"type":"Name","value":"speeds_array"},{"type":"attr","value":"T"},{"type":"Constant","value":"0"},{"type":"Expr","children":[232]},{"type":"Call","children":[233,236]},{"type":"AttributeLoad","children":[234,235]},{"type":"Name","value":"plt"},{"type":"attr","value":"xlabel"},{"type":"Constant","value":"road number"},{"type":"Expr","children":[238]},{"type":"Call","children":[239,242]},{"type":"AttributeLoad","children":[240,241]},{"type":"Name","value":"plt"},{"type":"attr","value":"ylabel"},{"type":"Constant","value":"road number"},{"type":"Expr","children":[244]},{"type":"Constant","value":"\nUsing this correlation heatmap, we can see that for example the speed in\nroutes 4, 5, 6 are highly correlated.\n"},{"type":"Expr","children":[246]},{"type":"Constant","value":"\n### Splitting and normalizing data\n\nNext, we split the speed values array into train/validation/test sets,\nand normalize the resulting arrays:\n"},{"type":"Assign","children":[248,251]},{"type":"TupleStore","children":[249,250]},{"type":"Name","value":"train_size"},{"type":"Name","value":"val_size"},{"type":"TupleLoad","children":[252,253]},{"type":"Constant","value":"0.5"},{"type":"Constant","value":"0.2"},{"type":"FunctionDef","value":"preprocess"},{"type":"Assign","children":[256,260]},{"type":"TupleStore","children":[257,258,259]},{"type":"Name","value":"train_array"},{"type":"Name","value":"val_array"},{"type":"Name","value":"test_array"},{"type":"Call","children":[261,262,263,264]},{"type":"Name","value":"preprocess"},{"type":"Name","value":"speeds_array"},{"type":"Name","value":"train_size"},{"type":"Name","value":"val_size"},{"type":"Expr","children":[266]},{"type":"Call","children":[267,268]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[269,270]},{"type":"Constant","value":"train set size: "},{"type":"FormattedValue","children":[271]},{"type":"AttributeLoad","children":[272,273]},{"type":"Name","value":"train_array"},{"type":"attr","value":"shape"},{"type":"Expr","children":[275]},{"type":"Call","children":[276,277]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[278,279]},{"type":"Constant","value":"validation set size: "},{"type":"FormattedValue","children":[280]},{"type":"AttributeLoad","children":[281,282]},{"type":"Name","value":"val_array"},{"type":"attr","value":"shape"},{"type":"Expr","children":[284]},{"type":"Call","children":[285,286]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[287,288]},{"type":"Constant","value":"test set size: "},{"type":"FormattedValue","children":[289]},{"type":"AttributeLoad","children":[290,291]},{"type":"Name","value":"test_array"},{"type":"attr","value":"shape"},{"type":"Expr","children":[293]},{"type":"Constant","value":"\n### Creating TensorFlow Datasets\n\nNext, we create the datasets for our forecasting problem. The forecasting problem\ncan be stated as follows: given a sequence of the\nroad speed values at times `t+1, t+2, ..., t+T`, we want to predict the future values of\nthe roads speed for times `t+T+1, ..., t+T+h`. So for each time `t` the inputs to our\nmodel are `T` vectors each of size `N` and the targets are `h` vectors each of size `N`,\nwhere `N` is the number of roads.\n"},{"type":"Expr","children":[295]},{"type":"Constant","value":"\nWe use the Keras built-in function\n`keras.utils.timeseries_dataset_from_array`.\nThe function `create_tf_dataset()` below takes as input a `numpy.ndarray` and returns a\n`tf.data.Dataset`. In this function `input_sequence_length=T` and `forecast_horizon=h`.\n\nThe argument `multi_horizon` needs more explanation. Assume `forecast_horizon=3`.\nIf `multi_horizon=True` then the model will make a forecast for time steps\n`t+T+1, t+T+2, t+T+3`. So the target will have shape `(T,3)`. But if\n`multi_horizon=False`, the model will make a forecast only for time step `t+T+3` and\nso the target will have shape `(T, 1)`.\n\nYou may notice that the input tensor in each batch has shape\n`(batch_size, input_sequence_length, num_routes, 1)`. The last dimension is added to\nmake the model more general: at each time step, the input features for each raod may\ncontain multiple timeseries. For instance, one might want to use temperature timeseries\nin addition to historical values of the speed as input features. In this example,\nhowever, the last dimension of the input is always 1.\n\nWe use the last 12 values of the speed in each road to forecast the speed for 3 time\nsteps ahead:\n"},{"type":"Assign","children":[297,298]},{"type":"Name","value":"batch_size"},{"type":"Constant","value":"64"},{"type":"Assign","children":[300,301]},{"type":"Name","value":"input_sequence_length"},{"type":"Constant","value":"12"},{"type":"Assign","children":[303,304]},{"type":"Name","value":"forecast_horizon"},{"type":"Constant","value":"3"},{"type":"Assign","children":[306,307]},{"type":"Name","value":"multi_horizon"},{"type":"Constant","value":"False"},{"type":"FunctionDef","value":"create_tf_dataset"},{"type":"Assign","children":[310,313]},{"type":"TupleStore","children":[311,312]},{"type":"Name","value":"train_dataset"},{"type":"Name","value":"val_dataset"},{"type":"GeneratorExp","children":[314,320]},{"type":"Call","children":[315,316,317,318,319]},{"type":"Name","value":"create_tf_dataset"},{"type":"Name","value":"data_array"},{"type":"Name","value":"input_sequence_length"},{"type":"Name","value":"forecast_horizon"},{"type":"Name","value":"batch_size"},{"type":"comprehension","children":[321,322]},{"type":"Name","value":"data_array"},{"type":"ListLoad","children":[323,324]},{"type":"Name","value":"train_array"},{"type":"Name","value":"val_array"},{"type":"Assign","children":[326,327]},{"type":"Name","value":"test_dataset"},{"type":"Call","children":[328,329,330,331,332,333,334]},{"type":"Name","value":"create_tf_dataset"},{"type":"Name","value":"test_array"},{"type":"Name","value":"input_sequence_length"},{"type":"Name","value":"forecast_horizon"},{"type":"keyword","value":"batch_size"},{"type":"keyword","value":"shuffle"},{"type":"keyword","value":"multi_horizon"},{"type":"Expr","children":[336]},{"type":"Constant","value":"\n### Roads Graph\n\nAs mentioned before, we assume that the road segments form a graph.\nThe `PeMSD7` dataset has the road segments distance. The next step\nis to create the graph adjacency matrix from these distances. Following\n[Yu et al., 2018](https://arxiv.org/abs/1709.04875) (equation 10) we assume there\nis an edge between two nodes in the graph if the distance between the corresponding roads\nis less than a threshold.\n"},{"type":"FunctionDef","value":"compute_adjacency_matrix"},{"type":"Expr","children":[339]},{"type":"Constant","value":"\nThe function `compute_adjacency_matrix()` returns a boolean adjacency matrix\nwhere 1 means there is an edge between two nodes. We use the following class\nto store the information about the graph.\n"},{"type":"ClassDef","value":"GraphInfo"},{"type":"Assign","children":[342,343]},{"type":"Name","value":"sigma2"},{"type":"Constant","value":"0.1"},{"type":"Assign","children":[345,346]},{"type":"Name","value":"epsilon"},{"type":"Constant","value":"0.5"},{"type":"Assign","children":[348,349]},{"type":"Name","value":"adjacency_matrix"},{"type":"Call","children":[350,351,352,353]},{"type":"Name","value":"compute_adjacency_matrix"},{"type":"Name","value":"route_distances"},{"type":"Name","value":"sigma2"},{"type":"Name","value":"epsilon"},{"type":"Assign","children":[355,358]},{"type":"TupleStore","children":[356,357]},{"type":"Name","value":"node_indices"},{"type":"Name","value":"neighbor_indices"},{"type":"Call","children":[359,362]},{"type":"AttributeLoad","children":[360,361]},{"type":"Name","value":"np"},{"type":"attr","value":"where"},{"type":"CompareEq","children":[363,364]},{"type":"Name","value":"adjacency_matrix"},{"type":"Constant","value":"1"},{"type":"Assign","children":[366,367]},{"type":"Name","value":"graph"},{"type":"Call","children":[368,369,370]},{"type":"Name","value":"GraphInfo"},{"type":"keyword","value":"edges"},{"type":"keyword","value":"num_nodes"},{"type":"Expr","children":[372]},{"type":"Call","children":[373,374]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[375,376,380,381]},{"type":"Constant","value":"number of nodes: "},{"type":"FormattedValue","children":[377]},{"type":"AttributeLoad","children":[378,379]},{"type":"Name","value":"graph"},{"type":"attr","value":"num_nodes"},{"type":"Constant","value":", number of edges: "},{"type":"FormattedValue","children":[382]},{"type":"Call","children":[383,384]},{"type":"Name","value":"len"},{"type":"SubscriptLoad","children":[385,388]},{"type":"AttributeLoad","children":[386,387]},{"type":"Name","value":"graph"},{"type":"attr","value":"edges"},{"type":"Constant","value":"0"},{"type":"Expr","children":[390]},{"type":"Constant","value":"\n## Network architecture\n\nOur model for forecasting over the graph consists of a graph convolution\nlayer and a LSTM layer.\n"},{"type":"Expr","children":[392]},{"type":"Constant","value":"\n### Graph convolution layer\n\nOur implementation of the graph convolution layer resembles the implementation\nin [this Keras example](https://keras.io/examples/graph/gnn_citations/). Note that\nin that example input to the layer is a 2D tensor of shape `(num_nodes,in_feat)`\nbut in our example the input to the layer is a 4D tensor of shape\n`(num_nodes, batch_size, input_seq_length, in_feat)`. The graph convolution layer\nperforms the following steps:\n\n- The nodes' representations are computed in `self.compute_nodes_representation()`\nby multiplying the input features by `self.weight`\n- The aggregated neighbors' messages are computed in `self.compute_aggregated_messages()`\nby first aggregating the neighbors' representations and then multiplying the results by\n`self.weight`\n- The final output of the layer is computed in `self.update()` by combining the nodes\nrepresentations and the neighbors' aggregated messages\n"},{"type":"ClassDef","value":"GraphConv"},{"type":"Expr","children":[395]},{"type":"Constant","value":"\n### LSTM plus graph convolution\n\nBy applying the graph convolution layer to the input tensor, we get another tensor\ncontaining the nodes' representations over time (another 4D tensor). For each time\nstep, a node's representation is informed by the information from its neighbors.\n\nTo make good forecasts, however, we need not only information from the neighbors\nbut also we need to process the information over time. To this end, we can pass each\nnode's tensor through a recurrent layer. The `LSTMGC` layer below, first applies\na graph convolution layer to the inputs and then passes the results through a\n`LSTM` layer.\n"},{"type":"ClassDef","value":"LSTMGC"},{"type":"Expr","children":[398]},{"type":"Constant","value":"\n## Model training\n"},{"type":"Assign","children":[400,401]},{"type":"Name","value":"in_feat"},{"type":"Constant","value":"1"},{"type":"Assign","children":[403,404]},{"type":"Name","value":"batch_size"},{"type":"Constant","value":"64"},{"type":"Assign","children":[406,407]},{"type":"Name","value":"epochs"},{"type":"Constant","value":"20"},{"type":"Assign","children":[409,410]},{"type":"Name","value":"input_sequence_length"},{"type":"Constant","value":"12"},{"type":"Assign","children":[412,413]},{"type":"Name","value":"forecast_horizon"},{"type":"Constant","value":"3"},{"type":"Assign","children":[415,416]},{"type":"Name","value":"multi_horizon"},{"type":"Constant","value":"False"},{"type":"Assign","children":[418,419]},{"type":"Name","value":"out_feat"},{"type":"Constant","value":"10"},{"type":"Assign","children":[421,422]},{"type":"Name","value":"lstm_units"},{"type":"Constant","value":"64"},{"type":"Assign","children":[424,425]},{"type":"Name","value":"graph_conv_params"},{"type":"Dict","children":[426,427,428,429,430,431]},{"type":"Constant","value":"aggregation_type"},{"type":"Constant","value":"combination_type"},{"type":"Constant","value":"activation"},{"type":"Constant","value":"mean"},{"type":"Constant","value":"concat"},{"type":"Constant","value":"None"},{"type":"Assign","children":[433,434]},{"type":"Name","value":"st_gcn"},{"type":"Call","children":[435,436,437,438,439,440,441,442]},{"type":"Name","value":"LSTMGC"},{"type":"Name","value":"in_feat"},{"type":"Name","value":"out_feat"},{"type":"Name","value":"lstm_units"},{"type":"Name","value":"input_sequence_length"},{"type":"Name","value":"forecast_horizon"},{"type":"Name","value":"graph"},{"type":"Name","value":"graph_conv_params"},{"type":"Assign","children":[444,445]},{"type":"Name","value":"inputs"},{"type":"Call","children":[446,449]},{"type":"AttributeLoad","children":[447,448]},{"type":"Name","value":"layers"},{"type":"attr","value":"Input"},{"type":"TupleLoad","children":[450,451,454]},{"type":"Name","value":"input_sequence_length"},{"type":"AttributeLoad","children":[452,453]},{"type":"Name","value":"graph"},{"type":"attr","value":"num_nodes"},{"type":"Name","value":"in_feat"},{"type":"Assign","children":[456,457]},{"type":"Name","value":"outputs"},{"type":"Call","children":[458,459]},{"type":"Name","value":"st_gcn"},{"type":"Name","value":"inputs"},{"type":"Assign","children":[461,462]},{"type":"Name","value":"model"},{"type":"Call","children":[463,468,469]},{"type":"AttributeLoad","children":[464,467]},{"type":"AttributeLoad","children":[465,466]},{"type":"Name","value":"keras"},{"type":"attr","value":"models"},{"type":"attr","value":"Model"},{"type":"Name","value":"inputs"},{"type":"Name","value":"outputs"},{"type":"Expr","children":[471]},{"type":"Call","children":[472,475,476]},{"type":"AttributeLoad","children":[473,474]},{"type":"Name","value":"model"},{"type":"attr","value":"compile"},{"type":"keyword","value":"optimizer"},{"type":"keyword","value":"loss"},{"type":"Expr","children":[478]},{"type":"Call","children":[479,482,483,484,485]},{"type":"AttributeLoad","children":[480,481]},{"type":"Name","value":"model"},{"type":"attr","value":"fit"},{"type":"Name","value":"train_dataset"},{"type":"keyword","value":"validation_data"},{"type":"keyword","value":"epochs"},{"type":"keyword","value":"callbacks"},{"type":"Expr","children":[487]},{"type":"Constant","value":"\n## Making forecasts on test set\n\nNow we can use the trained model to make forecasts for the test set. Below, we\ncompute the MAE of the model and compare it to the MAE of naive forecasts.\nThe naive forecasts are the last value of the speed for each node.\n"},{"type":"Assign","children":[489,492]},{"type":"TupleStore","children":[490,491]},{"type":"Name","value":"x_test"},{"type":"Name","value":"y"},{"type":"Call","children":[493,494]},{"type":"Name","value":"next"},{"type":"Call","children":[495]},{"type":"AttributeLoad","children":[496,497]},{"type":"Name","value":"test_dataset"},{"type":"attr","value":"as_numpy_iterator"},{"type":"Assign","children":[499,500]},{"type":"Name","value":"y_pred"},{"type":"Call","children":[501,504]},{"type":"AttributeLoad","children":[502,503]},{"type":"Name","value":"model"},{"type":"attr","value":"predict"},{"type":"Name","value":"x_test"},{"type":"Expr","children":[506]},{"type":"Call","children":[507,510]},{"type":"AttributeLoad","children":[508,509]},{"type":"Name","value":"plt"},{"type":"attr","value":"figure"},{"type":"keyword","value":"figsize"},{"type":"Expr","children":[512]},{"type":"Call","children":[513,516]},{"type":"AttributeLoad","children":[514,515]},{"type":"Name","value":"plt"},{"type":"attr","value":"plot"},{"type":"SubscriptLoad","children":[517,518]},{"type":"Name","value":"y"},{"type":"TupleLoad","children":[519,520,521]},{"type":"Slice"},{"type":"Constant","value":"0"},{"type":"Constant","value":"0"},{"type":"Expr","children":[523]},{"type":"Call","children":[524,527]},{"type":"AttributeLoad","children":[525,526]},{"type":"Name","value":"plt"},{"type":"attr","value":"plot"},{"type":"SubscriptLoad","children":[528,529]},{"type":"Name","value":"y_pred"},{"type":"TupleLoad","children":[530,531,532]},{"type":"Slice"},{"type":"Constant","value":"0"},{"type":"Constant","value":"0"},{"type":"Expr","children":[534]},{"type":"Call","children":[535,538]},{"type":"AttributeLoad","children":[536,537]},{"type":"Name","value":"plt"},{"type":"attr","value":"legend"},{"type":"ListLoad","children":[539,540]},{"type":"Constant","value":"actual"},{"type":"Constant","value":"forecast"},{"type":"Assign","children":[542,545]},{"type":"TupleStore","children":[543,544]},{"type":"Name","value":"naive_mse"},{"type":"Name","value":"model_mse"},{"type":"TupleLoad","children":[546,568]},{"type":"Call","children":[547]},{"type":"AttributeLoad","children":[548,567]},{"type":"Call","children":[549,552]},{"type":"AttributeLoad","children":[550,551]},{"type":"Name","value":"np"},{"type":"attr","value":"square"},{"type":"BinOpSub","children":[553,561]},{"type":"SubscriptLoad","children":[554,555]},{"type":"Name","value":"x_test"},{"type":"TupleLoad","children":[556,557,559,560]},{"type":"Slice"},{"type":"UnaryOpUSub","children":[558]},{"type":"Constant","value":"1"},{"type":"Slice"},{"type":"Constant","value":"0"},{"type":"SubscriptLoad","children":[562,563]},{"type":"Name","value":"y"},{"type":"TupleLoad","children":[564,565,566]},{"type":"Slice"},{"type":"Constant","value":"0"},{"type":"Slice"},{"type":"attr","value":"mean"},{"type":"Call","children":[569]},{"type":"AttributeLoad","children":[570,587]},{"type":"Call","children":[571,574]},{"type":"AttributeLoad","children":[572,573]},{"type":"Name","value":"np"},{"type":"attr","value":"square"},{"type":"BinOpSub","children":[575,581]},{"type":"SubscriptLoad","children":[576,577]},{"type":"Name","value":"y_pred"},{"type":"TupleLoad","children":[578,579,580]},{"type":"Slice"},{"type":"Constant","value":"0"},{"type":"Slice"},{"type":"SubscriptLoad","children":[582,583]},{"type":"Name","value":"y"},{"type":"TupleLoad","children":[584,585,586]},{"type":"Slice"},{"type":"Constant","value":"0"},{"type":"Slice"},{"type":"attr","value":"mean"},{"type":"Expr","children":[589]},{"type":"Call","children":[590,591]},{"type":"Name","value":"print"},{"type":"JoinedStr","children":[592,593,595,596]},{"type":"Constant","value":"naive MAE: "},{"type":"FormattedValue","children":[594]},{"type":"Name","value":"naive_mse"},{"type":"Constant","value":", model MAE: "},{"type":"FormattedValue","children":[597]},{"type":"Name","value":"model_mse"},{"type":"Expr","children":[599]},{"type":"Constant","value":"\nOf course, the goal here is to demonstrate the method,\nnot to achieve the best performance. To improve the\nmodel's accuracy, all model hyperparameters should be tuned carefully. In addition,\nseveral of the `LSTMGC` blocks can be stacked to increase the representation power\nof the model.\n"}]
[{"type":"Module","children":[1,3,4,5,6,8,10,12,15,16,19,21,23,24,27,28]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Simple speech recognition to spot a limited number of keywords.\n\nThis is a self-contained example script that will train a very basic audio\nrecognition model in TensorFlow. It downloads the necessary training data and\nruns with reasonable defaults to train within a few hours even only using a CPU.\nFor more information, please see\nhttps://www.tensorflow.org/tutorials/audio_recognition.\n\nIt is intended as an introduction to using neural networks for audio\nrecognition, and is not a full speech recognition system. For more advanced\nspeech systems, I recommend looking into Kaldi. This network uses a keyword\ndetection style to spot discrete words from a small vocabulary, consisting of\n\"yes\", \"no\", \"up\", \"down\", \"left\", \"right\", \"on\", \"off\", \"stop\", and \"go\".\n\nTo run the training process, use:\n\nbazel run tensorflow/examples/speech_commands:train\n\nThis will write out checkpoints to /tmp/speech_commands_train/, and will\ndownload over 1GB of open source training data, so you'll need enough free space\nand a good internet connection. The default data is a collection of thousands of\none-second .wav files, each containing one spoken word. This data set is\ncollected from https://aiyprojects.withgoogle.com/open_speech_recording, please\nconsider contributing to help improve this and other models!\n\nAs training progresses, it will print out its accuracy metrics, which should\nrise above 90% by the end. Once it's complete, you can run the freeze script to\nget a binary GraphDef that you can easily deploy on mobile applications.\n\nIf you want to train on your own data, you'll need to create .wavs with your\nrecordings, all at a consistent length, and then arrange them into subfolders\norganized by label. For example, here's a possible file structure:\n\nmy_wavs >\n  up >\n    audio_0.wav\n    audio_1.wav\n  down >\n    audio_2.wav\n    audio_3.wav\n  other>\n    audio_4.wav\n    audio_5.wav\n\nYou'll also need to tell the script what labels to look for, using the\n`--wanted_words` argument. In this case, 'up,down' might be what you want, and\nthe audio in the 'other' folder would be used to train an 'unknown' category.\n\nTo pull this all together, you'd run:\n\nbazel run tensorflow/examples/speech_commands:train -- \\\n--data_dir=my_wavs --wanted_words=up,down\n\n"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[7]},{"type":"alias","value":"argparse"},{"type":"Import","children":[9]},{"type":"alias","value":"os.path"},{"type":"Import","children":[11]},{"type":"alias","value":"sys"},{"type":"Import","children":[13]},{"type":"alias","value":"numpy","children":[14]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"six.moves"},{"type":"Import","children":[17]},{"type":"alias","value":"tensorflow","children":[18]},{"type":"identifier","value":"tf"},{"type":"Import","children":[20]},{"type":"alias","value":"input_data"},{"type":"Import","children":[22]},{"type":"alias","value":"models"},{"type":"ImportFrom","value":"tensorflow.python.platform"},{"type":"Assign","children":[25,26]},{"type":"Name","value":"FLAGS"},{"type":"Constant","value":"None"},{"type":"FunctionDef","value":"main"},{"type":"If","children":[29,32]},{"type":"CompareEq","children":[30,31]},{"type":"Name","value":"__name__"},{"type":"Constant","value":"__main__"},{"type":"body","children":[33,39,48,57,66,75,84,93,102,111,120,129,138,147,156,165,174,183,192,201,210,219,228,237,246,255,264,273,282,283,292,301,309]},{"type":"Assign","children":[34,35]},{"type":"Name","value":"parser"},{"type":"Call","children":[36]},{"type":"AttributeLoad","children":[37,38]},{"type":"Name","value":"argparse"},{"type":"attr","value":"ArgumentParser"},{"type":"Expr","children":[40]},{"type":"Call","children":[41,44,45,46,47]},{"type":"AttributeLoad","children":[42,43]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--data_url"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[49]},{"type":"Call","children":[50,53,54,55,56]},{"type":"AttributeLoad","children":[51,52]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--data_dir"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[58]},{"type":"Call","children":[59,62,63,64,65]},{"type":"AttributeLoad","children":[60,61]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--background_volume"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[67]},{"type":"Call","children":[68,71,72,73,74]},{"type":"AttributeLoad","children":[69,70]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--background_frequency"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[76]},{"type":"Call","children":[77,80,81,82,83]},{"type":"AttributeLoad","children":[78,79]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--silence_percentage"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[85]},{"type":"Call","children":[86,89,90,91,92]},{"type":"AttributeLoad","children":[87,88]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--unknown_percentage"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[94]},{"type":"Call","children":[95,98,99,100,101]},{"type":"AttributeLoad","children":[96,97]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--time_shift_ms"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[103]},{"type":"Call","children":[104,107,108,109,110]},{"type":"AttributeLoad","children":[105,106]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--testing_percentage"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[112]},{"type":"Call","children":[113,116,117,118,119]},{"type":"AttributeLoad","children":[114,115]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--validation_percentage"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[121]},{"type":"Call","children":[122,125,126,127,128]},{"type":"AttributeLoad","children":[123,124]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--sample_rate"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[130]},{"type":"Call","children":[131,134,135,136,137]},{"type":"AttributeLoad","children":[132,133]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--clip_duration_ms"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[139]},{"type":"Call","children":[140,143,144,145,146]},{"type":"AttributeLoad","children":[141,142]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--window_size_ms"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[148]},{"type":"Call","children":[149,152,153,154,155]},{"type":"AttributeLoad","children":[150,151]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--window_stride_ms"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[157]},{"type":"Call","children":[158,161,162,163,164]},{"type":"AttributeLoad","children":[159,160]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--feature_bin_count"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[166]},{"type":"Call","children":[167,170,171,172,173]},{"type":"AttributeLoad","children":[168,169]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--how_many_training_steps"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[175]},{"type":"Call","children":[176,179,180,181,182]},{"type":"AttributeLoad","children":[177,178]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--eval_step_interval"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[184]},{"type":"Call","children":[185,188,189,190,191]},{"type":"AttributeLoad","children":[186,187]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--learning_rate"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[193]},{"type":"Call","children":[194,197,198,199,200]},{"type":"AttributeLoad","children":[195,196]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--batch_size"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[202]},{"type":"Call","children":[203,206,207,208,209]},{"type":"AttributeLoad","children":[204,205]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--summaries_dir"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[211]},{"type":"Call","children":[212,215,216,217,218]},{"type":"AttributeLoad","children":[213,214]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--wanted_words"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[220]},{"type":"Call","children":[221,224,225,226,227]},{"type":"AttributeLoad","children":[222,223]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--train_dir"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[229]},{"type":"Call","children":[230,233,234,235,236]},{"type":"AttributeLoad","children":[231,232]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--save_step_interval"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[238]},{"type":"Call","children":[239,242,243,244,245]},{"type":"AttributeLoad","children":[240,241]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--start_checkpoint"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[247]},{"type":"Call","children":[248,251,252,253,254]},{"type":"AttributeLoad","children":[249,250]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--model_architecture"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[256]},{"type":"Call","children":[257,260,261,262,263]},{"type":"AttributeLoad","children":[258,259]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--check_nans"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[265]},{"type":"Call","children":[266,269,270,271,272]},{"type":"AttributeLoad","children":[267,268]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--quantize"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[274]},{"type":"Call","children":[275,278,279,280,281]},{"type":"AttributeLoad","children":[276,277]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--preprocess"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"FunctionDef","value":"verbosity_arg"},{"type":"Expr","children":[284]},{"type":"Call","children":[285,288,289,290,291]},{"type":"AttributeLoad","children":[286,287]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--verbosity"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Expr","children":[293]},{"type":"Call","children":[294,297,298,299,300]},{"type":"AttributeLoad","children":[295,296]},{"type":"Name","value":"parser"},{"type":"attr","value":"add_argument"},{"type":"Constant","value":"--optimizer"},{"type":"keyword","value":"type"},{"type":"keyword","value":"default"},{"type":"keyword","value":"help"},{"type":"Assign","children":[302,305]},{"type":"TupleStore","children":[303,304]},{"type":"Name","value":"FLAGS"},{"type":"Name","value":"unparsed"},{"type":"Call","children":[306]},{"type":"AttributeLoad","children":[307,308]},{"type":"Name","value":"parser"},{"type":"attr","value":"parse_known_args"},{"type":"Expr","children":[310]},{"type":"Call","children":[311,320,321]},{"type":"AttributeLoad","children":[312,319]},{"type":"AttributeLoad","children":[313,318]},{"type":"AttributeLoad","children":[314,317]},{"type":"AttributeLoad","children":[315,316]},{"type":"Name","value":"tf"},{"type":"attr","value":"compat"},{"type":"attr","value":"v1"},{"type":"attr","value":"app"},{"type":"attr","value":"run"},{"type":"keyword","value":"main"},{"type":"keyword","value":"argv"}]
[{"type":"Module","children":[1,3,5,7,9,11,13,15,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Classes for RL training in Trax."},{"type":"Import","children":[4]},{"type":"alias","value":"contextlib"},{"type":"Import","children":[6]},{"type":"alias","value":"functools"},{"type":"Import","children":[8]},{"type":"alias","value":"os"},{"type":"Import","children":[10]},{"type":"alias","value":"pickle"},{"type":"Import","children":[12]},{"type":"alias","value":"time"},{"type":"Import","children":[14]},{"type":"alias","value":"gin"},{"type":"Import","children":[16]},{"type":"alias","value":"numpy","children":[17]},{"type":"identifier","value":"np"},{"type":"Import","children":[19]},{"type":"alias","value":"tensorflow","children":[20]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"trax"},{"type":"ImportFrom","value":"trax"},{"type":"ImportFrom","value":"trax"},{"type":"ImportFrom","value":"trax"},{"type":"ImportFrom","value":"trax"},{"type":"ImportFrom","value":"trax"},{"type":"ImportFrom","value":"trax"},{"type":"ImportFrom","value":"trax.fastmath"},{"type":"ImportFrom","value":"trax.optimizers"},{"type":"ImportFrom","value":"trax.rl"},{"type":"ImportFrom","value":"trax.rl"},{"type":"ImportFrom","value":"trax.rl"},{"type":"ImportFrom","value":"trax.rl"},{"type":"ImportFrom","value":"trax.rl"},{"type":"ImportFrom","value":"trax.supervised"},{"type":"ClassDef","value":"Agent"},{"type":"ClassDef","value":"PolicyAgent"},{"type":"FunctionDef","value":"remaining_evals"},{"type":"ClassDef","value":"LoopPolicyAgent"},{"type":"ClassDef","value":"PolicyGradient"},{"type":"FunctionDef","value":"sharpened_network_policy"},{"type":"ClassDef","value":"ExpertIteration"},{"type":"FunctionDef","value":"network_policy"},{"type":"ClassDef","value":"ValueAgent"},{"type":"ClassDef","value":"DQN"}]
[{"type":"Module","children":[1,3,5,8,10,11,13,14,15,18,19,28,31,34,37,44,47,65,66]},{"type":"Expr","children":[2]},{"type":"Constant","value":"\n.. _tune_relay_arm:\n\nAuto-tuning a Convolutional Network for ARM CPU\n===============================================\n**Author**: `Lianmin Zheng <https://github.com/merrymercy>`_, `Zhao Wu <https://github.com/FrozenGene>`_, `Eddie Yan <https://github.com/eqy>`_\n\nAuto-tuning for a specific ARM device is critical for getting the best\nperformance. This is a tutorial about how to tune a whole convolutional\nnetwork.\n\nThe operator implementation for ARM CPU in TVM is written in template form.\nThe template has many tunable knobs (tile factor, vectorization, unrolling, etc).\nWe will tune all convolution and depthwise convolution operators\nin the neural network. After tuning, we produce a log file which stores\nthe best knob values for all required operators. When the TVM compiler compiles\nthese operators, it will query this log file to get the best knob values.\n\nWe also released pre-tuned parameters for some arm devices. You can go to\n`ARM CPU Benchmark <https://github.com/apache/tvm/wiki/Benchmark#arm-cpu>`_\nto see the results.\n\nNote that this tutorial will not run on Windows or recent versions of macOS. To\nget it to run, you will need to wrap the body of this tutorial in a :code:`if\n__name__ == \"__main__\":` block.\n"},{"type":"Import","children":[4]},{"type":"alias","value":"os"},{"type":"Import","children":[6]},{"type":"alias","value":"numpy","children":[7]},{"type":"identifier","value":"np"},{"type":"Import","children":[9]},{"type":"alias","value":"tvm"},{"type":"ImportFrom","value":"tvm"},{"type":"Import","children":[12]},{"type":"alias","value":"tvm.relay.testing"},{"type":"ImportFrom","value":"tvm.autotvm.tuner"},{"type":"ImportFrom","value":"tvm.contrib.utils"},{"type":"Import","children":[16]},{"type":"alias","value":"tvm.contrib.graph_executor","children":[17]},{"type":"identifier","value":"runtime"},{"type":"FunctionDef","value":"get_network"},{"type":"Assign","children":[20,21]},{"type":"Name","value":"target"},{"type":"Call","children":[22,27]},{"type":"AttributeLoad","children":[23,26]},{"type":"AttributeLoad","children":[24,25]},{"type":"Name","value":"tvm"},{"type":"attr","value":"target"},{"type":"attr","value":"Target"},{"type":"Constant","value":"llvm -device=arm_cpu -mtriple=aarch64-linux-gnu"},{"type":"Assign","children":[29,30]},{"type":"Name","value":"device_key"},{"type":"Constant","value":"rk3399"},{"type":"Assign","children":[32,33]},{"type":"Name","value":"use_android"},{"type":"Constant","value":"False"},{"type":"Assign","children":[35,36]},{"type":"Name","value":"network"},{"type":"Constant","value":"resnet-18"},{"type":"Assign","children":[38,39]},{"type":"Name","value":"log_file"},{"type":"BinOpMod","children":[40,41]},{"type":"Constant","value":"%s.%s.log"},{"type":"TupleLoad","children":[42,43]},{"type":"Name","value":"device_key"},{"type":"Name","value":"network"},{"type":"Assign","children":[45,46]},{"type":"Name","value":"dtype"},{"type":"Constant","value":"float32"},{"type":"Assign","children":[48,49]},{"type":"Name","value":"tuning_option"},{"type":"Dict","children":[50,51,52,53,54,55,56,57,58,59]},{"type":"Constant","value":"log_filename"},{"type":"Constant","value":"tuner"},{"type":"Constant","value":"n_trial"},{"type":"Constant","value":"early_stopping"},{"type":"Constant","value":"measure_option"},{"type":"Name","value":"log_file"},{"type":"Constant","value":"xgb"},{"type":"Constant","value":"1500"},{"type":"Constant","value":"800"},{"type":"Call","children":[60,63,64]},{"type":"AttributeLoad","children":[61,62]},{"type":"Name","value":"autotvm"},{"type":"attr","value":"measure_option"},{"type":"keyword","value":"builder"},{"type":"keyword","value":"runner"},{"type":"FunctionDef","value":"tune_tasks"},{"type":"FunctionDef","value":"tune_and_evaluate"}]
[{"type":"Module","children":[1,3,5,6,7,10,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,54,55]},{"type":"Import","children":[2]},{"type":"alias","value":"dataclasses"},{"type":"Import","children":[4]},{"type":"alias","value":"logging"},{"type":"ImportFrom","value":"pathlib"},{"type":"ImportFrom","value":"typing"},{"type":"Import","children":[8]},{"type":"alias","value":"numpy","children":[9]},{"type":"identifier","value":"np"},{"type":"Import","children":[11]},{"type":"alias","value":"tensorflow","children":[12]},{"type":"identifier","value":"tf"},{"type":"Import","children":[14]},{"type":"alias","value":"rasa.utils.common"},{"type":"ImportFrom","value":"rasa.engine.graph"},{"type":"ImportFrom","value":"rasa.engine.recipes.default_recipe"},{"type":"ImportFrom","value":"rasa.engine.storage.resource"},{"type":"ImportFrom","value":"rasa.engine.storage.storage"},{"type":"ImportFrom","value":"rasa.nlu.classifiers"},{"type":"ImportFrom","value":"rasa.shared.nlu.training_data.features"},{"type":"ImportFrom","value":"rasa.shared.core.domain"},{"type":"ImportFrom","value":"rasa.shared.core.trackers"},{"type":"ImportFrom","value":"rasa.shared.core.constants"},{"type":"ImportFrom","value":"rasa.shared.core.events"},{"type":"ImportFrom","value":"rasa.shared.nlu.constants"},{"type":"ImportFrom","value":"rasa.nlu.extractors.extractor"},{"type":"ImportFrom","value":"rasa.core.featurizers.precomputation"},{"type":"ImportFrom","value":"rasa.core.featurizers.tracker_featurizers"},{"type":"ImportFrom","value":"rasa.core.featurizers.tracker_featurizers"},{"type":"ImportFrom","value":"rasa.core.featurizers.single_state_featurizer"},{"type":"ImportFrom","value":"rasa.shared.core.generator"},{"type":"ImportFrom","value":"rasa.core.constants"},{"type":"ImportFrom","value":"rasa.core.policies.policy"},{"type":"ImportFrom","value":"rasa.core.policies.ted_policy"},{"type":"ImportFrom","value":"rasa.utils"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.models"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.constants"},{"type":"ImportFrom","value":"rasa.utils.tensorflow"},{"type":"ImportFrom","value":"rasa.utils.tensorflow.model_data"},{"type":"Import","children":[41]},{"type":"alias","value":"rasa.utils.io","children":[42]},{"type":"identifier","value":"io_utils"},{"type":"ImportFrom","value":"rasa.core.exceptions"},{"type":"ImportFrom","value":"rasa.shared.utils"},{"type":"ClassDef","value":"RankingCandidateMetadata"},{"type":"ClassDef","value":"UnexpecTEDIntentPolicyMetadata"},{"type":"Assign","children":[48,49]},{"type":"Name","value":"logger"},{"type":"Call","children":[50,53]},{"type":"AttributeLoad","children":[51,52]},{"type":"Name","value":"logging"},{"type":"attr","value":"getLogger"},{"type":"Name","value":"__name__"},{"type":"ClassDef","value":"UnexpecTEDIntentPolicy"},{"type":"ClassDef","value":"IntentTED"}]
[{"type":"Module","children":[1,3,4,5,6,8,9,12,15,18,21,22,23,24,25,26,27,28,29,30,31,32,73,74]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Utils for constructing and training models."},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[7]},{"type":"alias","value":"collections"},{"type":"ImportFrom","value":"absl"},{"type":"Import","children":[10]},{"type":"alias","value":"numpy","children":[11]},{"type":"identifier","value":"np"},{"type":"Import","children":[13]},{"type":"alias","value":"pandas","children":[14]},{"type":"identifier","value":"pd"},{"type":"Import","children":[16]},{"type":"alias","value":"tensorflow","children":[17]},{"type":"identifier","value":"tf"},{"type":"Import","children":[19]},{"type":"alias","value":"tensorflow_datasets","children":[20]},{"type":"identifier","value":"tfds"},{"type":"FunctionDef","value":"policy_sum"},{"type":"FunctionDef","value":"policy_sign_sum"},{"type":"FunctionDef","value":"policy_sum_sign"},{"type":"FunctionDef","value":"np_winsorize"},{"type":"FunctionDef","value":"get_policy"},{"type":"FunctionDef","value":"randomize_labels"},{"type":"FunctionDef","value":"load_from_tfds"},{"type":"FunctionDef","value":"load_data"},{"type":"ClassDef","value":"Feeder"},{"type":"ClassDef","value":"Linear"},{"type":"ClassDef","value":"LossLayer"},{"type":"Assign","children":[33,34]},{"type":"Name","value":"SPECIAL_STEPS"},{"type":"Call","children":[35,36]},{"type":"Name","value":"frozenset"},{"type":"BinOpAdd","children":[37,64]},{"type":"BinOpAdd","children":[38,55]},{"type":"BinOpAdd","children":[39,46]},{"type":"Call","children":[40,41]},{"type":"Name","value":"list"},{"type":"Call","children":[42,45]},{"type":"AttributeLoad","children":[43,44]},{"type":"Name","value":"np"},{"type":"attr","value":"arange"},{"type":"Constant","value":"10"},{"type":"Call","children":[47,48]},{"type":"Name","value":"list"},{"type":"BinOpMult","children":[49,54]},{"type":"Call","children":[50,53]},{"type":"AttributeLoad","children":[51,52]},{"type":"Name","value":"np"},{"type":"attr","value":"arange"},{"type":"Constant","value":"10"},{"type":"Constant","value":"10"},{"type":"Call","children":[56,57]},{"type":"Name","value":"list"},{"type":"BinOpMult","children":[58,63]},{"type":"Call","children":[59,62]},{"type":"AttributeLoad","children":[60,61]},{"type":"Name","value":"np"},{"type":"attr","value":"arange"},{"type":"Constant","value":"10"},{"type":"Constant","value":"100"},{"type":"Call","children":[65,66]},{"type":"Name","value":"list"},{"type":"BinOpMult","children":[67,72]},{"type":"Call","children":[68,71]},{"type":"AttributeLoad","children":[69,70]},{"type":"Name","value":"np"},{"type":"attr","value":"arange"},{"type":"Constant","value":"10"},{"type":"Constant","value":"1000"},{"type":"FunctionDef","value":"should_log"},{"type":"ClassDef","value":"Network"}]
[{"type":"Module","children":[1,3,4,6,9,12,13,14,15,21,28,29,30,31]},{"type":"Expr","children":[2]},{"type":"Constant","value":" VGG Clear face mask plugin. "},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[5]},{"type":"alias","value":"logging"},{"type":"Import","children":[7]},{"type":"alias","value":"typing","children":[8]},{"type":"identifier","value":"T"},{"type":"Import","children":[10]},{"type":"alias","value":"numpy","children":[11]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"tensorflow.keras.layers"},{"type":"ImportFrom","value":"lib.model.session"},{"type":"ImportFrom","value":"_base"},{"type":"If","children":[16,19]},{"type":"AttributeLoad","children":[17,18]},{"type":"Name","value":"T"},{"type":"attr","value":"TYPE_CHECKING"},{"type":"body","children":[20]},{"type":"ImportFrom","value":"tensorflow"},{"type":"Assign","children":[22,23]},{"type":"Name","value":"logger"},{"type":"Call","children":[24,27]},{"type":"AttributeLoad","children":[25,26]},{"type":"Name","value":"logging"},{"type":"attr","value":"getLogger"},{"type":"Name","value":"__name__"},{"type":"ClassDef","value":"Mask"},{"type":"ClassDef","value":"VGGClear"},{"type":"ClassDef","value":"_ConvBlock"},{"type":"ClassDef","value":"_ScorePool"}]
[{"type":"Module","children":[1,3,4,6,9,12,13,14,15,21,28,29,30,31]},{"type":"Expr","children":[2]},{"type":"Constant","value":" VGG Obstructed face mask plugin "},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[5]},{"type":"alias","value":"logging"},{"type":"Import","children":[7]},{"type":"alias","value":"typing","children":[8]},{"type":"identifier","value":"T"},{"type":"Import","children":[10]},{"type":"alias","value":"numpy","children":[11]},{"type":"identifier","value":"np"},{"type":"ImportFrom","value":"tensorflow.keras.layers"},{"type":"ImportFrom","value":"lib.model.session"},{"type":"ImportFrom","value":"_base"},{"type":"If","children":[16,19]},{"type":"AttributeLoad","children":[17,18]},{"type":"Name","value":"T"},{"type":"attr","value":"TYPE_CHECKING"},{"type":"body","children":[20]},{"type":"ImportFrom","value":"tensorflow"},{"type":"Assign","children":[22,23]},{"type":"Name","value":"logger"},{"type":"Call","children":[24,27]},{"type":"AttributeLoad","children":[25,26]},{"type":"Name","value":"logging"},{"type":"attr","value":"getLogger"},{"type":"Name","value":"__name__"},{"type":"ClassDef","value":"Mask"},{"type":"ClassDef","value":"VGGObstructed"},{"type":"ClassDef","value":"_ConvBlock"},{"type":"ClassDef","value":"_ScorePool"}]
[{"type":"Module","children":[1,2,3,4,7,8]},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"Import","children":[5]},{"type":"alias","value":"tensorflow","children":[6]},{"type":"identifier","value":"tf"},{"type":"ImportFrom","value":"hanlp.utils.tf_util"},{"type":"ClassDef","value":"WeightNormalization"}]
[{"type":"Module","children":[1,3,4,5,6,7,8,21]},{"type":"Expr","children":[2]},{"type":"Constant","value":"Ops for building neural network layers, regularizers, summaries, etc.\n\nSee the @{$python/contrib.layers} guide.\n\n@@avg_pool2d\n@@batch_norm\n@@convolution2d\n@@conv2d_in_plane\n@@convolution2d_in_plane\n@@conv2d_transpose\n@@convolution2d_transpose\n@@dropout\n@@embedding_lookup_unique\n@@flatten\n@@fully_connected\n@@layer_norm\n@@linear\n@@max_pool2d\n@@one_hot_encoding\n@@relu\n@@relu6\n@@repeat\n@@safe_embedding_lookup_sparse\n@@scale_gradient\n@@separable_conv2d\n@@separable_convolution2d\n@@softmax\n@@stack\n@@unit_norm\n@@bow_encoder\n@@embed_sequence\n\n@@apply_regularization\n@@l1_regularizer\n@@l2_regularizer\n@@sum_regularizer\n\n@@xavier_initializer\n@@xavier_initializer_conv2d\n@@variance_scaling_initializer\n\n@@optimize_loss\n\n@@summarize_activation\n@@summarize_tensor\n@@summarize_tensors\n@@summarize_collection\n\n@@summarize_activations\n\n@@bucketized_column\n@@check_feature_columns\n@@create_feature_spec_for_parsing\n@@crossed_column\n@@embedding_column\n@@scattered_embedding_column\n@@input_from_feature_columns\n@@transform_features\n@@joint_weighted_sum_from_feature_columns\n@@make_place_holder_tensors_for_base_features\n@@multi_class_target\n@@one_hot_column\n@@parse_feature_columns_from_examples\n@@parse_feature_columns_from_sequence_examples\n@@real_valued_column\n@@shared_embedding_columns\n@@sparse_column_with_hash_bucket\n@@sparse_column_with_integerized_feature\n@@sparse_column_with_keys\n@@weighted_sparse_column\n@@weighted_sum_from_feature_columns\n@@infer_real_valued_columns\n@@sequence_input_from_feature_columns\n"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"__future__"},{"type":"ImportFrom","value":"tensorflow.contrib.layers.python.layers"},{"type":"ImportFrom","value":"tensorflow.python.util.all_util"},{"type":"Assign","children":[9,10]},{"type":"Name","value":"_allowed_symbols"},{"type":"ListLoad","children":[11,12,13,14,15,16,17,18,19,20]},{"type":"Constant","value":"bias_add"},{"type":"Constant","value":"conv2d"},{"type":"Constant","value":"feature_column"},{"type":"Constant","value":"legacy_fully_connected"},{"type":"Constant","value":"legacy_linear"},{"type":"Constant","value":"legacy_relu"},{"type":"Constant","value":"OPTIMIZER_CLS_NAMES"},{"type":"Constant","value":"regression_target"},{"type":"Constant","value":"SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY"},{"type":"Constant","value":"summaries"},{"type":"Expr","children":[22]},{"type":"Call","children":[23,24,25]},{"type":"Name","value":"remove_undocumented"},{"type":"Name","value":"__name__"},{"type":"Name","value":"_allowed_symbols"}]
